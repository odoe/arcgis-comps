import { he as n, L as s, fy as p$1, a4 as i, fK as I, k0 as t, er as f$1, dN as l, dO as c$2, i$ as a, r, j0 as s$2, t as t$1, k1 as e$1, eV as xn, gO as H, eB as gn, eC as u, h, iR as A, i1 as bn, dP as b, e as e$2, d, gt as y, gv as t$2, i as i$2, am as n$1, aL as u$1, as as r$1, hd as v$1, bL as e$3 } from './index.js';
import { s as s$1, f, K as K$1 } from './I3SAttributeOverrides.js';
import { v, p as p$2 } from './Graphics3DFeatureLikeLayerView.js';
import { o, c as c$1, s as s$3, i as i$1, a as i$3 } from './SceneLayerView.js';
import { S as Se, X as X$1, i as ie$1, c as he } from './I3SUtil.js';
import { p } from './DefinitionExpressionSceneLayerView.js';
import { c } from './PopupSceneLayerView.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class e extends n{constructor(r){super("SceneLayerWorker","dracoDecompressPointCloudData",r,{hasInitialize:!0});}getTransferList(r){return [r.geometryBuffer]}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const K=s.getLogger("esri.views.3d.layers.SceneLayerGraphicsView3D"),Z=i$3();let J=class extends(p(c(p$1(o)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._nodesAddedToStage=new Map,this.drapeSourceType=1,this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new s$1,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20;}initialize(){var e$1,t$1;const r=this.layer;this.addResolvingPromise(r.indexInfo),this._attributeOverrides=new f(this.layer,null==(e$1=this.view.resourceController)?void 0:e$1.memoryController),Se(r,this.view.spatialReference,this.view.viewingMode),this.fieldsHelper=new c$1({layerView:this}),this.updatingHandles.add(r,"rangeInfos",(e=>this._rangeInfosChanged(e)),2),this.updatingHandles.add(r,"renderer",((e,t)=>this._rendererChange(e,t))),this.updatingHandles.add(this,"parsedDefinitionExpression",(()=>this._filterChange())),this.updatingHandles.add(this,"view.floors",(()=>this.graphics3d.filterVisibility.filterChanged())),this.handles.add(i(I,"I3S_TREE_SHOW_TILES",(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import('./I3STreeDebugger.js').then((({I3STreeDebugger:t})=>{!this._treeDebugger&&I.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}));}));}else e||!this._treeDebugger||I.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null);}))),this._set("graphics3d",new v({owner:this,layer:r,preferredUpdatePolicy:0,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentVisibilityEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,suspendResumeExtentMode:"data",dataExtent:r.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),null==(t$1=this.graphics3d.elevationAlignment)||t$1.events.on("invalidate-elevation",(e=>this._invalidateElevation(e))),this.supportsHeightUnitConversion&&(this._verticalScale=t("point",r.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.graphics3d.setup()),this._memCache=this.view.resourceController.memoryController.newCache(r.uid),this._controller=new K$1({layerView:this,scaleVisibilityEnabled:!1}),X$1(this.layer.geometryDefinitions)&&(this._worker=new e((e=>this.view.resourceController.schedule(e)))),this.handles.add(this.layer.on("apply-edits",(e=>this.updatingHandles.addPromise(e.result)))),this.handles.add(this.layer.on("edits",(e=>this._handleEdits(e)))),this.when((()=>{this._queryEngine=new p$2({layerView:this,priority:f$1.FEATURE_QUERY_ENGINE}),this.updatingHandles.add(this,"maximumNumberOfFeatures",(e=>this._controller.featureTarget=e),2),this.updatingHandles.add(this,"suspended",(e=>{e&&this._removeAllNodeData();}));}));}destroy(){this._treeDebugger=l(this._treeDebugger),this._attributeOverrides=l(this._attributeOverrides),this._set("graphics3d",l(this.graphics3d)),this._controller=l(this._controller),this._queryEngine=l(this._queryEngine),this._worker=l(this._worker),this._memCache=l(this._memCache),this._nodesAddedToStage.clear(),this.fieldsHelper=l(this.fieldsHelper);}get requiredFields(){var e,t;return null!=(e=null==(t=this.fieldsHelper)?void 0:t.requiredFields)?e:[]}get maximumNumberOfFeatures(){const e=this.graphics3d&&this.graphics3d.graphicsCore&&this.graphics3d.graphicsCore.displayFeatureLimit;return e?e.maximumNumberOfFeatures:0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1);}get maximumNumberOfFeaturesExceeded(){return !this.suspended&&(!!this._controller&&!this._controller.leavesReached)}get hasM(){return !1}get hasZ(){return !0}notifyGraphicGeometryChanged(e){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(e);}notifyGraphicVisibilityChanged(e){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(e);}async whenGraphicAttributes(e,t){return ie$1(this.layer,e,this._getObjectIdField(),t,(()=>[...this._nodesAddedToStage.values()]))}getGraphicFromGraphicUid(e){if(!this.loadedGraphics)return null;const t=c$2(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t&&t.attributes&&t.attributes[r]?(t.layer=this.layer,t.sourceLayer=this.layer,t):null}whenGraphicBounds(e,t){return this.graphics3d.graphicsCore.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphics3d.graphicsCore.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){var e,t,r;return !!(null!=(e=this._controller)&&e.updating||null!=(t=this.graphics3d)&&t.updating||null!=(r=this.fieldsHelper)&&r.updating)}getRenderingInfo(e,t,r$1){const i=a(e,{renderer:t,arcade:r$1});if(r(i)&&i.color){const e=i.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255;}return i}async getRenderingInfoAsync(e,t,r,i){return s$2(e,{renderer:t,arcade:r,...i})}get symbolUpdateType(){return this.graphics3d.graphicsCore.symbolUpdateType}highlight(e){return this.graphics3d.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.graphics3d.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return s$3(this.attributeEditingContext,e)}async extractBinaryPointData(e$1,t){const r$1={geometryBuffer:e$1.geometryBuffer};return t$1(this._worker)&&(this._worker=new e((e=>this.view.resourceController.schedule(e)))),this._worker.invoke(r$1,t).then((e=>{if(r(e)){return {positionData:e.positions,featureIds:e.featureIds}}throw new Error("Failed to decompress Draco point data")}))}checkExtent(e,t){e&&!e$1(e,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&K.error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&K.error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++);}async addNode(e,t,r$1){if(!X(t)&&!$(t))return Promise.reject();if(this._nodesAddedToStage.has(e.index))return void K.error("I3S node "+e.id+" already added");const i=r(this.layer.fullExtent)?te(this.layer.fullExtent.clone(),.5):null,o=this._controller.crsVertex,a=[],n={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(X(t)?await this._addNodeBinaryPointData(e,n,t,i,a,r$1):$(t)&&this._addNodeLegacyPointData(e,n,t,i,a),await this._attributeOverrides.apply(n.featureIds,t.attributeDataInfo,r$1),e.numFeatures=n.graphics.length,this._updateNodeMemory(e),ee(n),a.length>0&&(this.computeObb(e,a,o),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return this._cacheNodeData(n),Promise.resolve();if(r(this._verticalScale))for(const s of n.graphics)this._verticalScale(s.geometry);return this._nodesAddedToStage.set(e.index,n),this.loadedGraphics.addMany(n.graphics),this._filterNode(n),this._treeDebugger&&this._treeDebugger.update(),Promise.resolve()}computeObb(e,t,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;xn(t,r,0,t,s,0,t.length/3);const o={data:t,size:3};e.serviceObb=H(o),i.isGeographic&&gn(e.serviceObb.center,s,e.serviceObb.center,i);}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return !1}updateNodeState(){}async _addNodeBinaryPointData(e,r$2,i,o,n,d){const l=await this.extractBinaryPointData(i,d);if(null==l)return Promise.reject();const c=this._getObjectIdField(),g=this._controller.crsVertex,m=this.view.spatialReference,y=this.graphics3d.graphicsCore,{positionData:f,featureIds:b}=l,v=3,E=f.length/v,x=new Array;for(let I=0;I<E;I++){const r$2=r(e.serviceObb)?e.serviceObb.center:[0,0,0],i=I*v,d=r$1(f[i+0],f[i+1],f[i+2]);u(d,d,r$2),e.serviceObb||n.push(d[0],d[1],d[2]),r(o)&&this.checkExtent(o,d);const l=b[I],E={};null!=l&&(E[c]=l);const w=null==l?h.generateUID():l;xn(d,g,0,ie,m,0,1);const S=v$1(ie[0],ie[1],ie[2],m),C=this.loadedGraphics.get(w);if(r(C))C.level<e.level&&(se.property="geometry",se.graphic=C,se.oldValue=e$3(C.geometry),se.newValue=S,C.geometry=S,y.graphicUpdateHandler(se)),x.push(C);else {const r=h.generateUID();x.push({objectId:w,uid:r,geometry:S,attributes:E,visible:!0,level:e.level});}}r$2.graphics=x,r$2.featureIds=b;}_addNodeLegacyPointData(e,r$1,i,o,a){const n=this._getObjectIdField(),d=this._controller.crsVertex,l=this.view.spatialReference,h$1=[0,0,0],u=new Array,c=new Array;for(const g of i.pointData){const r$1=g.featureDataPosition,i=r$1.length,m=g.geometries&&g.geometries[0]||re[i],y=g.featureIds[0];if("points"!==m.params.type)continue;r(o)&&this.checkExtent(o,r$1);const f={};null!=y&&(f[n]=y);const b=null==y?h.generateUID():y;let v;"Embedded"===m.type&&(v=m.params.vertexAttributes.position);for(let o=0;o<v.length;o+=i){for(let e=0;e<i;e++)h$1[e]=r$1[e]+v[o+e];const n=3===i;e.serviceObb||a.push(h$1[0],h$1[1],n?h$1[2]:0),xn(h$1,d,0,ie,l,0,1);const u=v$1(ie[0],ie[1],n?ie[2]:void 0,l),g=this.loadedGraphics.get(b);r(g)?c.push(g):c.push({objectId:b,uid:h.generateUID(),geometry:u,attributes:f,visible:!0});}u.push(y);}r$1.graphics=c,r$1.featureIds=u;}_updateNodeMemory(e){e.memory=4096+(r(e.numFeatures)?e.numFeatures*this.graphics3d.graphicsCore.usedMemoryPerGraphic:0);}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>A(t)+e),512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t);}_getMemCacheKey(e){return `${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach((e=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e);}})),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear();}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t));}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){if(!this._nodesAddedToStage.has(e.index))return this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._updateNodeMemory(e),await this.updateAttributes(e.index,r,i),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update(),Promise.resolve();K.error("I3S node "+e.id+" already added");}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach(((t,r)=>e.push(r)));}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&r(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&r(t.attributeInfo))return t.attributeInfo.attributeData}setAttributeData(e,t){const r=this._nodesAddedToStage.get(e);r&&!t$1(r.attributeInfo)&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r));}async updateAttributes(e,t,r){const i=this._nodesAddedToStage.get(e);i&&(await this._attributeOverrides.apply(i.featureIds,t,r),i.attributeInfo=t,this._attributeValuesChanged(i));}_attributeValuesChanged(e){if(ee(e),this._filterNode(e),this.graphics3d.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.graphics3d.graphicsCore.updateLabelingInfo(t);}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||"OBJECTID"}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,o;e?(await e.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),t?(await t.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every(((e,t)=>s[t]===o[t]))||this._reloadAllNodes();}_rangeInfosChanged(e){null!=e&&e.length>0&&K.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.");}_filterChange(){this._nodesAddedToStage.forEach((e=>this._filterNode(e)));}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading();}_filterNode(e){const t=this.parsedDefinitionExpression;for(const r of e.graphics){const e=r.visible;r.visible=!t||this._evaluateClause(t,r),e!==r.visible&&(se.graphic=r,se.property="visible",se.oldValue=e,se.newValue=r.visible,this.graphics3d.graphicsCore.graphicUpdateHandler(se));}}_invalidateElevation(e){const t=this._controller.crsIndex;bn(e.extent,e.spatialReference,oe,t),this._controller.updateElevationChanged(oe,t);}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return r(this.filter)?this.filter.createQuery(e):new b(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),null==t?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),null==t?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),null==t?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),null==t?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(t$1(e)?this.createQuery():b.from(e))}getUsedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return e?e.usedMemory:0}getUnloadedMemory(){const e=this.graphics3d&&this.graphics3d.graphicsCore;return .8*((this._controller?this._controller.unloadedMemoryEstimate:0)+(e?e.unprocessedMemoryEstimate:0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){i$1(this.attributeEditingContext,e);}get attributeEditingContext(){const e=this._getObjectIdField();return {sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:e=>this._nodesAddedToStage.forEach((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo,attributeOverrides:this._attributeOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r$1,i)=>{this.setAttributeData(t,r$1);const o=this._nodesAddedToStage.get(t);if(r(i)){const t=this.loadedGraphics.get(i.attributes[e]);r(t)&&this.graphics3d.graphicsCore.recreateGraphics([t]);}else r(o)&&this.graphics3d.graphicsCore.recreateGraphics(o.graphics);},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.graphics3d.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return {controller:this._controller,numNodes:this._nodesAddedToStage.size,numFeatures:this.loadedGraphics.length}}};e$2([d()],J.prototype,"graphics3d",void 0),e$2([d({type:y})],J.prototype,"filter",void 0),e$2([d()],J.prototype,"loadedGraphics",void 0),e$2([d({aliasOf:"layer"})],J.prototype,"i3slayer",void 0),e$2([d()],J.prototype,"_controller",void 0),e$2([d()],J.prototype,"updating",void 0),e$2([d()],J.prototype,"suspended",void 0),e$2([d()],J.prototype,"holeFilling",void 0),e$2([d(t$2)],J.prototype,"updatingProgress",void 0),e$2([d({aliasOf:"_controller.updatingProgress"})],J.prototype,"updatingProgressValue",void 0),e$2([d(Z.requiredFields)],J.prototype,"requiredFields",null),e$2([d(Z.availableFields)],J.prototype,"availableFields",void 0),e$2([d()],J.prototype,"fieldsHelper",void 0),e$2([d({type:Number})],J.prototype,"maximumNumberOfFeatures",null),e$2([d({readOnly:!0})],J.prototype,"maximumNumberOfFeaturesExceeded",null),e$2([d({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.point.lodFactor"})],J.prototype,"lodFactor",void 0),e$2([d({readOnly:!0})],J.prototype,"hasM",null),e$2([d({readOnly:!0})],J.prototype,"hasZ",null),J=e$2([i$2("esri.views.3d.layers.SceneLayerGraphicsView3D")],J);const Y=J;function $(e){return "pointData"in e}function X(e){return "geometryBuffer"in e&&null!==e.geometryBuffer}function ee(e){const t=e.attributeInfo;for(let r$1=0;r$1<e.graphics.length;r$1++){const i=e.graphics[r$1];if(i.attributes||(i.attributes={}),r(t)&&r(t.loadedAttributes))for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(i.attributes[e]=he(t.attributeData[e],r$1));}}function te(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t),e.hasM&&(e.mmin-=t,e.mmax+=t),e}const re={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},ie=n$1(),se={graphic:null,property:null,oldValue:null,newValue:null},oe=u$1();

export default Y;
