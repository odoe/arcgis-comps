import { e, d, i, ah as p, X as n, h2 as x, t, r, nh as o, eI as tn, fs as O, T as u, mc as d$1, n0 as q, mb as wn, h_ as q$1, am as n$1, ar as i$1, ni as u$1, nj as J } from './index.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let v=class extends p{constructor(e){super(e),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new n.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null;}set graphic(e){this._circleCollisionCache=null,this._originalSymbol=e.symbol,this._set("graphic",e),this.attachSymbolChanged();}get elevationInfo(){const e="elevationInfo"in this.graphic.layer&&this.graphic.layer.elevationInfo,t=u$1(this.graphic),i=e?e.offset:0;return new x({mode:t,offset:i})}set focusedSymbol(e){e!==this._get("focusedSymbol")&&(this._set("focusedSymbol",e),this._updateGraphicSymbol(),this._circleCollisionCache=null);}grabbableForEvent(){return !0}set grabbing(e){e!==this._get("grabbing")&&(this._set("grabbing",e),this._updateGraphicSymbol());}set hovering(e){e!==this._get("hovering")&&(this._set("hovering",e),this._updateGraphicSymbol());}set selected(e){e!==this._get("selected")&&(this._set("selected",e),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:e?"select":"deselect"}));}get _focused(){return this._get("hovering")||this._get("grabbing")}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null);}intersectionDistance(e){const t$1=this.graphic;if(!1===t$1.visible)return null;const i=t$1.geometry;if(t(i))return null;const r$1=this._get("focusedSymbol"),l=r(r$1)?r$1:t$1.symbol;return "2d"===this.view.type?this._intersectDistance2D(this.view,e,i,l):this._intersectDistance3D(this.view,e,t$1)}attach(){this.attachSymbolChanged(),r(this.layer)&&this.layer.add(this.graphic);}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),r(this.layer)&&this.layer.remove(this.graphic);}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=this.graphic.watch("symbol",(e=>{r(e)&&e!==this.focusedSymbol&&e!==this._originalSymbol&&(this._originalSymbol=e,this._focused&&r(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol));}),!0);}detachSymbolChanged(){r(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null);}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&r(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol;}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol;}_intersectDistance2D(e,t$1,i,a){if(a=a||J(i),t(a))return null;const n=1;let c=this._circleCollisionCache;if("point"!==i.type||"simple-marker"!==a.type)return o(t$1,i,e)?n:null;if(t(c)||!c.originalPoint.equals(i)){const t=i,o=e.spatialReference;if(tn(t.spatialReference,o)){const e=O(t,o);c={originalPoint:t.clone(),mapPoint:e,radiusPx:u(a.size)},this._circleCollisionCache=c;}}if(r(c)){const i=d$1(t$1,C),o=e.toScreen(c.mapPoint),s=c.radiusPx,p=o.x+u(a.xoffset),m=o.y-u(a.yoffset);return q(i,[p,m])<s*s?n:null}return null}_intersectDistance3D(e,t,i){const o=e.toMap(t,{include:[i]});return o&&wn(o,S,e.renderSpatialReference)?q$1(S,e.state.camera.eye):null}};e([d({constructOnly:!0,nonNullable:!0})],v.prototype,"graphic",null),e([d({readOnly:!0})],v.prototype,"elevationInfo",null),e([d({constructOnly:!0,nonNullable:!0})],v.prototype,"view",void 0),e([d({value:null})],v.prototype,"focusedSymbol",null),e([d({constructOnly:!0})],v.prototype,"layer",void 0),e([d()],v.prototype,"interactive",void 0),e([d()],v.prototype,"selectable",void 0),e([d()],v.prototype,"grabbable",void 0),e([d({value:!1})],v.prototype,"grabbing",null),e([d()],v.prototype,"dragging",void 0),e([d()],v.prototype,"hovering",null),e([d({value:!1})],v.prototype,"selected",null),e([d()],v.prototype,"cursor",void 0),v=e([i("esri.views.interactive.GraphicManipulator")],v);const S=n$1(),C=i$1();

export { v };
