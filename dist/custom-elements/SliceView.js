import { e, d, i, ah as p, L as s, aE as u, dc as b$1, ez as a, jX as i$1, t as t$1, r, mF as G, r5 as p$1, dN as l, eA as o, hH as s$1, lV as c$1, mm as q, mj as f, hs as e$1, l_ as a$1 } from './index.js';
import { e as e$2 } from './AnalysisView3D.js';
import { U } from './BuildingComponentSublayer.js';
import { e as yt, h as ht, V as Ve, f as dt, g as d$1, n as nt, r as rt, W as We, S as S$1, C as C$1, x, U as U$1, k as b$2 } from './sliceToolUtils.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let t=class extends p{constructor(){super(...arguments),this.plane=null;}};e([d()],t.prototype,"plane",void 0),t=e([i("esri.views.3d.analysis.Slice.SliceAnalysisViewData")],t);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const m=s.getLogger("esri.views.3d.interactive.graphics.Slice.SliceController");let _=class extends p{constructor(e){super(e),this._handles=new u,this._internalChange=!1,this._currentSlicePlane=null,this.state="pending";}get ready(){return "ready"===this.state}initialize(){this._handles.add(this.analysis.excludedLayers.on("before-add",(e=>{const i=e.item;null!=i&&(i instanceof b$1||i instanceof U)?i instanceof b$1&&yt(i)?(m.error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),e.preventDefault()):this.analysis.excludedLayers.includes(i)&&e.preventDefault():(m.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),e.preventDefault());}))),this._handles.add(a(this.view,"ready",(()=>this._initialize()),!0));}_initialize(){switch(this.state){case"pending":break;case"destroyed":return;case"ready":throw new Error("state error")}S(this.view,this),this._handles.add([i$1((()=>this.analysisView.analysisViewData.plane),(()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews();}),{sync:!0}),i$1((()=>this.analysis.excludeGroundSurface),(()=>this._updateLayerViews()),{sync:!0}),this.analysis.excludedLayers.on("change",(()=>this._updateLayerViews())),i$1((()=>[this.analysisView.active,this.analysisView.visible]),(()=>{this._updateActiveController(),this._updateViewSlicePlane();}),{sync:!0}),this.view.allLayerViews.on("change",(()=>this._updateLayerViews()))]),this._handles.add([i$1((()=>this.analysis.shape),(()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane());}),{sync:!0})],"analysis"),this._set("state","ready"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane();}destroy(){switch(this.state){case"destroyed":case"pending":return}this.analysisView.active=!1,b(this.view,this),this._handles.destroy(),this.view.slicePlane=null,this.set("view",null),this._set("state","destroyed");}async whenReady(){return await a(this,"ready"),this}_updateBoundedPlaneFromSlicePlane(){const e=this.analysis.shape,i=this._currentSlicePlane;if(t$1(i)&&t$1(e)||r(i)&&r(e)&&e.equals(i))return;let t=null,s=null;r(e)&&(t=ht(e,this.view,G()),r(t)?s={heading:e.heading,tilt:e.tilt,position:e.position,width:e.width,height:e.height}:console.warn("Failed slice plane conversion.")),this._currentSlicePlane=s,r(t)&&!this.analysis.tiltEnabled&&Ve(t,this.view.renderCoordsHelper,t),this._internalChange=!0,this.analysisView.analysisViewData.plane=t,this._internalChange=!1;}_updateSlicePlaneFromBoundedPlane(){const e=this.analysisView.analysisViewData.plane,i=dt(e,this.view.renderCoordsHelper,this.view.spatialReference,new d$1);let t=null;r(i)&&(t={heading:i.heading,tilt:i.tilt,position:i.position,width:i.width,height:i.height}),this._currentSlicePlane=t,this._internalChange=!0,this.analysis.shape=i,this._internalChange=!1,this._updateViewSlicePlane();}_updateActiveController(){if(V)return;const e=P(this.view);if(this.analysisView.active)r(e.activeController)&&e.activeController!==this?(V=!0,e.activeController.analysisView.active=!1,V=!1):r(e.activeController)&&e.activeController,this._updateLayerViews(),e.activeController=this;else {if(r(e.activeController)&&e.activeController!==this)return;r(e.activeController)&&e.activeController===this&&(e.activeController=null,this._updateLayerViews());}}_updateViewSlicePlane(){"ready"===this.state&&C(this.view);}_updateLayerViews(){const e=r(this.analysisView.analysisViewData.plane)&&this.analysisView.visible&&this.analysisView.active,i=[],t=e=>{"layers"in e?e.layers.forEach(t):i.push(e);};this.analysis.excludedLayers.forEach(t),this.view.allLayerViews.forEach((t=>{"slicePlaneEnabled"in t&&(t.slicePlaneEnabled=e&&i.indexOf(t.layer)<0),"sublayerViews"in t&&t.sublayerViews.forEach((t=>{t.slicePlaneEnabled=e&&i.indexOf(t.sublayer)<0;}));})),null!=this.view.basemapTerrain&&(this.view.basemapTerrain.slicePlaneEnabled=e&&!this.analysis.excludeGroundSurface);}};e([d({readOnly:!0})],_.prototype,"state",void 0),e([d()],_.prototype,"view",void 0),e([d()],_.prototype,"analysis",void 0),e([d()],_.prototype,"analysisView",void 0),e([d()],_.prototype,"ready",null),_=e([i("esri.views.3d.interactive.graphics.Slice.SliceController")],_);const g=new Map;let V=!1;function C(e){const i=P(e).activeController;r(i)&&r(i.analysisView.analysisViewData.plane)&&i.analysisView.visible?e.slicePlane=i.analysisView.analysisViewData.plane:e.slicePlane=null;}function S(e,i){g.has(e)||g.set(e,{all:[],activeController:null}),g.get(e).all.push(i);}function P(e){return g.get(e)}function b(e,i){if(!g.has(e))throw new Error("view expected in global slice register");const t=g.get(e),s=t.all.lastIndexOf(i);if(-1===s)throw new Error("controller expected in global slice register");t.all.splice(s,1),0===t.all.length&&g.delete(e);}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let k=class extends p{constructor(e){super(e),this._handles=new u,this._gridVisualElement=null,this._outlineVisualElement=null,this.state="pending",this.showGrid=!1,this.editable=!0;}get ready(){return "ready"===this.state}initialize(){this._initialize();}async _initialize(){switch(this.state){case"pending":break;case"destroyed":return;case"ready":throw new Error("state error")}if(await a(this.view,"ready",!0),t$1(this.analysisView.analysisViewData))throw new Error("expected internal object to be valid");this._gridVisualElement=nt(this.view),this._outlineVisualElement=rt(this.view),this._handles.add([i$1((()=>({visible:r(this.analysisView.analysisViewData.plane)&&this.analysisView.visible,active:this.analysisView.active,editable:this.editable,showGrid:this.showGrid})),(e=>this._updateMaterials(e)),p$1),i$1((()=>this.analysisView.analysisViewData.plane),(e=>this._updatePlane(e)),p$1)],"internal"),this._set("state","ready");}destroy(){switch(this.state){case"destroyed":case"pending":return}this._handles.destroy(),this._gridVisualElement=l(this._gridVisualElement),this._outlineVisualElement=l(this._outlineVisualElement),this.set("view",null),this._set("state","destroyed");}async whenReady(){return await a(this,"ready"),this}_updatePlane(e){if(t$1(e))return;const i=o(c$1.get(),s$1(e.basis1),s$1(e.basis2),1),t=q(f.get(),i),a=We(e,f.get()),r=e$1(t,a,t);this._outlineVisualElement.transform=r,this._gridVisualElement.transform=r;}_updateMaterials({visible:e,active:i,editable:t,showGrid:s}){this._outlineVisualElement.color=S$1,this._outlineVisualElement.width=t?C$1:x,this._outlineVisualElement.stipplePattern=i?null:a$1(5);const a=s?b$2:[0,0,0,0];this._gridVisualElement.backgroundColor=U$1,this._gridVisualElement.gridColor=a,this._gridVisualElement.visible=e,this._outlineVisualElement.visible=e;}};e([d({readOnly:!0})],k.prototype,"state",void 0),e([d()],k.prototype,"view",void 0),e([d()],k.prototype,"analysis",void 0),e([d()],k.prototype,"analysisView",void 0),e([d()],k.prototype,"ready",null),e([d()],k.prototype,"showGrid",void 0),e([d()],k.prototype,"editable",void 0),k=e([i("esri.views.3d.interactive.graphics.Slice.SliceVisualization")],k);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let y=class extends(e$2(p)){constructor(i){super(i),this.type="slice-view",this.analysisVisualization=null,this.analysisController=null,this.analysisViewData=new t,this.active=!0,this.showGrid=!1,this.editable=!1;}initialize(){this.analysisVisualization=new k({view:this.view,analysis:this.analysis,analysisView:this}),this.analysisController=new _({view:this.view,analysis:this.analysis,analysisView:this});}destroy(){this.analysisVisualization=l(this.analysisVisualization),this.analysisController=l(this.analysisController);}async when(){return await this.analysisVisualization.whenReady(),await this.analysisController.whenReady(),this}get testData(){return {visualization:this.analysisVisualization,controller:this.analysisController}}};e([d()],y.prototype,"type",void 0),e([d()],y.prototype,"analysis",void 0),e([d()],y.prototype,"analysisViewData",void 0),e([d()],y.prototype,"active",void 0),e([d({aliasOf:"analysisVisualization.showGrid"})],y.prototype,"showGrid",void 0),e([d({aliasOf:"analysisVisualization.editable"})],y.prototype,"editable",void 0),y=e([i("esri.views.3d.analysis.Slice.SliceView")],y);const c=y;

export default c;
