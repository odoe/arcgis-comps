import { fy as p, fz as u, jm as r, gV as n, r as r$1, e$ as y, b3 as s, b4 as l, h, t, e, d, gv as t$1, i } from './index.js';
import { $ as $e } from './I3SMeshView3D.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const g=.2;let v=class extends($e(p(u))){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=1,this._overlayTexOffset=r(-1,-1,-1,-1),this._overlayTexScale=n(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null;}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}setDrapingTextures(e){this._clearDrapingTexture(0),this._clearDrapingTexture(1);for(const t of e){const e=t.index,o=t.extent,a=t.needsColorWithoutRasterImage?t.getValidTarget(1):t.hasDrapedFeatureSource?t.getValidTarget(0):null;if(r$1(a)&&y(o)>0){this._overlayTexOffset[2*e]=-o[0]/s(o),this._overlayTexOffset[2*e+1]=-o[1]/l(o),this._overlayTexScale[2*e]=1/s(o),this._overlayTexScale[2*e+1]=1/l(o);const r=t.getValidTarget(2),i=t.getValidTarget(3);this._overlayColor=a.getTexture(),this._overlayHighlight=r?r.getTexture():null,this._overlayNormal=i?i.getTexture():null;}}this._forAllNodes((e=>r$1(e)&&this._collection.updateMaterial(e.objectHandle,(e=>this._updateMaterialOverlay(e)))));}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null;}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.overlayNormal=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale;}initialize(){this.updatingHandles.add(this.layer,"modifications",(()=>this._loadModifications()),2);}_createLayerGraphic(){const e=new h;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),t(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(e,(()=>this._modifications=e.toArray()),2),"modifications");}};e([d()],v.prototype,"layer",void 0),e([d({aliasOf:"layer"})],v.prototype,"i3slayer",void 0),e([d()],v.prototype,"suspended",void 0),e([d(t$1)],v.prototype,"updatingProgress",void 0),e([d({readOnly:!0,aliasOf:"_controller.updatingProgress"})],v.prototype,"updatingProgressValue",void 0),e([d({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],v.prototype,"lodFactor",void 0),e([d({readOnly:!0})],v.prototype,"progressiveLoadFactor",null),v=e([i("esri.views.3d.layers.SceneLayerView3D")],v);const f=v;

export default f;
