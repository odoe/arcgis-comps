import { fy as p, fz as u, j1 as d, r, a4 as i, jj as f, e, d as d$1, i as i$1, dQ as F } from './index.js';
import { c } from './Graphics3DFrustumVisibility.js';
import { E } from './Graphics3DGraphicLikeLayerView.js';
import { l as l$1 } from './projectExtentUtils.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const l=1.2;let g=class extends(p(u)){constructor(){super(...arguments),this.type="graphics-3d",this.frustumVisibility=new c,this.slicePlaneEnabled=!1,this.drapeSourceType=1,this.suspendResumeExtent=null,this.fullExtentInLocalViewSpatialReference=null;}initialize(){this._set("graphics3d",new E({owner:this,layer:this.layer,scaleVisibilityEnabled:!0})),this.graphics3d.setup(),this.frustumVisibility.setup(this),this.setupSuspendResumeExtent(),this.updatingHandles.add(this,"fullOpacity",(()=>this.graphics3d.graphicsCore.opacityChange())),this.handles.add(this.layer.on("graphic-update",(i=>this.graphics3d.graphicsCore.graphicUpdateHandler(i)))),this.addResolvingPromise(l$1(this).then((i=>this.fullExtentInLocalViewSpatialReference=i))),this.layer.internal?this.notifyChange("updating"):this.handles.add(d(this.view,"basemapTerrain.ready",(()=>this.notifyChange("updating"))));}destroy(){this.frustumVisibility&&(this.frustumVisibility.destroy(),this._set("frustumVisibility",null)),this.graphics3d&&(this.graphics3d.destroy(),this._set("graphics3d",null));}get legendEnabled(){return this.canResume()&&!this.frustumVisibility.suspended}get suspendInfo(){var i;const e={};return r(this.graphics3d.scaleVisibility)&&this.graphics3d.scaleVisibility.suspended&&(e.outsideScaleRange=!0),e.outsideOfView=!(null==(i=this.frustumVisibility)||!i.suspended),e}async fetchPopupFeatures(i,e){return r(e)?e.clientGraphics:null}notifyGraphicGeometryChanged(i){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(i);}notifyGraphicVisibilityChanged(i){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(i);}get graphics3DGraphics(){return this.graphics3d.graphicsCore.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphics3d?this.graphics3d.graphicsCore.graphics3DGraphicsByObjectID:null}get symbolUpdateType(){return this.graphics3d.graphicsCore.symbolUpdateType}getGraphicFromGraphicUid(i){return this.graphics3d.getGraphicFromGraphicUid(i)}whenGraphicBounds(i,s){return this.graphics3d.whenGraphicBounds(i,s)}computeAttachmentOrigin(i,s){return this.graphics3d?this.graphics3d.graphicsCore.computeAttachmentOrigin(i,s):null}getSymbolLayerSize(i,s){return this.graphics3d.getSymbolLayerSize(i,s)}queryGraphics(){return Promise.resolve(this.loadedGraphics)}maskOccludee(i){return this.graphics3d.maskOccludee(i)}highlight(i){return this.graphics3d.highlight(i)}get updatePolicy(){var i;return (null==(i=this.graphics3d)?void 0:i.graphicsCore.effectiveUpdatePolicy)||1}canResume(){var i;return super.canResume()&&!(null!=(i=this.graphics3d)&&i.suspended)}isUpdating(){var i,s;return !(!(this.graphics3d&&this.graphics3d.updating||this.frustumVisibility&&this.frustumVisibility.updating)&&(this.layer.internal||null!=(i=this.view)&&null!=(s=i.basemapTerrain)&&s.ready))}setupSuspendResumeExtent(){const i$1=()=>{this.suspendResumeExtent=F(this.graphics3d.graphicsCore.computedExtent,this.suspendResumeExtent,l,this.graphics3d.graphicsCore.extentPadding),this.frustumVisibility.setExtent(this.suspendResumeExtent);};i(this.graphics3d.graphicsCore,"computedExtent",(()=>i$1()),!0),f(this.graphics3d.graphicsCore,"extentPadding",(()=>i$1()),!0);}get performanceInfo(){return {displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:-1,totalNumberOfFeatures:-1,nodes:0,core:null,updating:this.updating,elevationUpdating:this.graphics3d.elevationAlignment.updating,visibilityFrustum:!this.frustumVisibility.suspended}}};e([d$1({aliasOf:"layer.graphics"})],g.prototype,"loadedGraphics",void 0),e([d$1({readOnly:!0})],g.prototype,"suspended",void 0),e([d$1({readOnly:!0})],g.prototype,"legendEnabled",null),e([d$1({readOnly:!0})],g.prototype,"updating",void 0),e([d$1()],g.prototype,"layer",void 0),e([d$1({readOnly:!0})],g.prototype,"frustumVisibility",void 0),e([d$1({readOnly:!0})],g.prototype,"graphics3d",void 0),e([d$1({type:Boolean})],g.prototype,"slicePlaneEnabled",void 0),e([d$1({readOnly:!0})],g.prototype,"suspendInfo",null),g=e([i$1("esri.views.3d.layers.GraphicsLayerView3D")],g);const y=g;

export default y;
