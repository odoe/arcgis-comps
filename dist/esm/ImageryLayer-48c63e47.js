import { e, d as d$6, aL as o, aO as r, aR as r$1, i as i$2, a6 as a$1, ab as l$4, h as b$1, d$ as s$1, aT as S$1, a4 as c$5, ac as b$2, o as o$1, dZ as g$2, d_ as v$1, W as r$2, ag as n$2, H as E, ah as r$3, af as e$1, iK as i$4, bp as d$7, aN as y$5, bb as v$2, eA as m$4, s as s$2, eh as y$6, a8 as M$1, iF as u$3, ad as k, eb as f$4, dM as d$9, aI as U, g as t, a7 as s$3, hX as v$3, iL as U$1, N as e$2, gh as b$3, iM as s$4, iN as s$5, iO as n$3, aa as v$4, aj as h$4, iP as v$5, iQ as a$2, i0 as i$6, iy as a$3, i2 as n$5, i1 as s$6, e6 as y$7, e7 as w$2, iw as o$3, e5 as p$8, aG as l$6, ec as b$4, cY as b$5, i5 as a$4, iu as c$7, i8 as p$9, ay as M$2 } from './MapView-a31458ed.js';
import { n, p as p$6, o as o$2, i as i$3, d as d$8, a as i$5, b as p$7, k as k$1, S as S$2, j as j$2, X, c as n$4 } from './rasterRendererHelper-77db7bd4.js';
import { f as f$3, n as n$1, l as l$5, N, P, O } from './RasterSymbolizer-09ad53b9.js';
import { u as u$4 } from './pixelUtils-6a5b76e5.js';
import { c as c$6 } from './vectorFieldUtils-bc6849bb.js';
import './index-3067d8ff.js';
import './ClassBreaksDefinition-ddd6275b.js';
import './LercCodec-fc51a7e5.js';
import './colorUtils-4e913569.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
var a;const c$4=new Set(["raster","raster2","dem","fillraster"]),p$5=new Set(["rasters"]),m$3=t=>t&&t.rasterFunction?g$1.fromJSON(t):t,f$2=t=>t&&t instanceof g$1?t.toJSON():t,l$3=t=>(null==t?void 0:t.functionName)&&!t.declaredClass,y$4=t=>l$3(t)?new g$1(t):t;var d$5;!function(t){t[t.MOSAIC=0]="MOSAIC",t[t.GROUP=1]="GROUP",t[t.ITEM=2]="ITEM";}(d$5||(d$5={}));const w$1=t=>{if(null==t)return null;t=l$4(t);const e={};for(const n of Object.keys(t))c$4.has(n.toLowerCase())?e[n]=m$3(t[n]):p$5.has(n.toLowerCase())&&Array.isArray(t[n])?e[n]=t[n].map(m$3):e[n]=t[n];return e};let g$1=a=class extends a$1{constructor(t){super(t),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null;}set functionArguments(t){if(t){const e=Object.keys(t);if(e.some((e=>c$4.has(e.toLowerCase())&&l$3(t[e])))||e.some((e=>p$5.has(e.toLowerCase())&&Array.isArray(t[e])&&t[e].some((t=>l$3(t)))))){t=l$4(t);for(const n of e)c$4.has(n.toLowerCase())?t[n]=y$4(t[n]):p$5.has(n.toLowerCase())&&Array.isArray(t[n])&&(t[n]=t[n].map((t=>y$4(t))));}}this._set("functionArguments",t);}readFunctionArguments(t,e){return t=e.arguments||e.rasterFunctionArguments,w$1(t)}writeFunctionArguments(t,e,n){const o={};for(const r of Object.keys(t))c$4.has(r.toLowerCase())?o[r]=f$2(t[r]):p$5.has(r.toLowerCase())&&Array.isArray(t[r])?o[r]=t[r].map(f$2):o[r]=f$2(t[r]);this.functionDefinition?e.arguments=o:e[n]=o;}readFunctionName(t,e){const n=e.rasterFunctionInfos,o=e.name;return o||(n&&n.length&&"None"!==n[0].name?n[0].name:e.rasterFunction)}writeFunctionName(t,e,n){this.functionDefinition?e.name=t:e[n]=t;}readFunctionType(t){return d$5[t]}writeFunctionType(t,e,n){e[n]=d$5[t];}clone(){return new a({functionName:this.functionName,functionArguments:l$4(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};e([d$6({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],g$1.prototype,"functionArguments",null),e([o("functionArguments",["rasterFunctionArguments","arguments"])],g$1.prototype,"readFunctionArguments",null),e([r("functionArguments")],g$1.prototype,"writeFunctionArguments",null),e([d$6({json:{type:String,write:{target:"rasterFunction"}}})],g$1.prototype,"functionName",void 0),e([o("functionName",["rasterFunction","rasterFunctionInfos","name"])],g$1.prototype,"readFunctionName",null),e([r("functionName")],g$1.prototype,"writeFunctionName",null),e([r$1({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),d$6({json:{default:"unknown"}})],g$1.prototype,"outputPixelType",void 0),e([d$6({type:String,json:{read:!0,write:!0}})],g$1.prototype,"variableName",void 0),e([d$6({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],g$1.prototype,"description",void 0),e([d$6({json:{origins:{"web-document":{read:!1,write:!1}}}})],g$1.prototype,"functionType",void 0),e([o("functionType")],g$1.prototype,"readFunctionType",null),e([r("functionType")],g$1.prototype,"writeFunctionType",null),e([d$6({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],g$1.prototype,"functionDefinition",void 0),e([d$6({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],g$1.prototype,"thumbnail",void 0),g$1=a=e([i$2("esri.layers.support.RasterFunction")],g$1);const h$3=g$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const i$1={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},u$2={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},s=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function l$2(e){return s.has(e.type)}function m$2(t,n){if(!t||!n)return l$4(t||n);const r=l$4(t);if("none"!==n.functionName.toLowerCase()){p$4(r.functionArguments).Raster=n;}return r}function c$3(e,t){switch(t=t||{},e.type){case"raster-stretch":return h$2(e,t);case"class-breaks":return b(e,t);case"unique-value":return v(e,t);case"raster-colormap":return R(e,t);case"vector-field":return d$4(e,t);case"raster-shaded-relief":return g(e,t)}}function p$4(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?p$4(t.functionArguments):e}const f$1={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function d$4(e,n){const r=new h$3;r.functionName="VectorFieldRenderer";const{dataType:a,bandProperties:i}=n,s="vector-uv"===a;let l,m;i&&2===i.length&&(l=i.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),m=i.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==l&&null!==l||(l=0,m=1);const c="arithmetic"===e.rotationType?1:2,p="flow-from"===e.flowRepresentation?0:1,f=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new b$1,d={magnitudeBandID:l,directionBandID:m,isUVComponents:s,referenceSystem:c,massFlowAngleRepresentation:p,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:u$2[e.style.toLowerCase().replace("-","_")],minimumMagnitude:f.minDataValue,maximumMagnitude:f.maxDataValue,minimumSymbolSize:f.minSize,maximumSymbolSize:f.maxSize};return r.functionArguments=d,r}function g(e,r){if("elevation"!==r.dataType)return new h$3;const a=new h$3;a.functionName="Hillshade";const o="traditional"===e.hillshadeType?0:1,i="none"===e.scalingType?1:3,u={HillshadeType:o,SlopeType:i,ZFactor:e.zFactor};return 0===o&&(u.Azimuth=e.azimuth,u.Altitude=e.altitude),3===i&&(u.PSPower=e.pixelSizePower,u.PSZFactor=e.pixelSizeFactor),a.functionArguments=u,a.variableName="Raster",e.colorRamp&&(a.functionName="ShadedRelief",u.Colormap=f$3(e.colorRamp,256)),a}function h$2(e,o){const i=new h$3;i.functionName="Stretch";const u=f$1[n.toJSON(e.stretchType)],s="u8",l={StretchType:u,Statistics:A(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(l.Min=e.outputMin),null!=e.outputMax&&(l.Max=e.outputMax),u===f$1.standardDeviation?(l.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=s):u===f$1.percentClip?(l.MinPercent=e.minPercent,l.MaxPercent=e.maxPercent,i.outputPixelType=s):u===f$1.minMax?i.outputPixelType=s:u===f$1.sigmoid&&(l.SigmoidStrengthLevel=e.sigmoidStrengthLevel),i.functionArguments=l,i.variableName="Raster",e.colorRamp){const a=e.colorRamp,u=new h$3,s=n$1(a);return s?u.functionArguments={colorRamp:s}:!o.convertColorRampToColormap||"algorithmic"!==a.type&&"multipart"!==a.type?u.functionArguments={colorRamp:e.colorRamp.toJSON()}:u.functionArguments={Colormap:f$3(a,256)},u.variableName="Raster",u.functionName="Colormap",u.functionArguments.Raster=i,u}return i}function b(e,n){const r=[],a=[],o=[],i=[],u=1e-6,{pixelType:s,rasterAttributeTable:l}=n,m=l&&l.features,c=S(l);if(m&&Array.isArray(m)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,n)=>{const r=t.symbol.color;let a;r.a&&m.forEach((o=>{a=o.attributes[e.field],(a>=t.minValue&&a<t.maxValue||n===e.classBreakInfos.length-1&&a>=t.minValue)&&i.push([o.attributes[c],r.r,r.g,r.b]);}));}));const n=s?y$3(i,s):i,r=new h$3;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=n,r.variableName="Raster",r}e.classBreakInfos.forEach(((e,t)=>{const n=e.symbol&&e.symbol.color;n.a?(0===t?r.push(e.minValue,e.maxValue+u):r.push(e.minValue+u,e.maxValue+u),a.push(t),i.push([t,n.r,n.g,n.b])):o.push(e.minValue,e.maxValue);}));const p=s?y$3(i,s):i,f=new h$3;f.functionName="Remap",f.functionArguments={InputRanges:r,OutputValues:a,NoDataRanges:o},f.variableName="Raster";const d=new h$3;return d.functionName="Colormap",d.functionArguments={Colormap:p,Raster:f},d}function y$3(e,t){const n=i$1[String(t).toLowerCase()];return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function S(e){if(!e)return;const{fields:t}=e,n=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return n&&n.name}function v(e,n){var r;const a=[],{pixelType:o,rasterAttributeTable:i}=n,u=i&&i.features,s=S(i),l=null==(r=e.defaultSymbol)?void 0:r.color;let m=!1;if(e.uniqueValueInfos&&(u?u.forEach((t=>{var n;const r=null==(n=e.uniqueValueInfos.find((n=>String(t.attributes[e.field])===String(n.value))))?void 0:n.symbol.color;r?a.push([t.attributes[s],r.r,r.g,r.b]):l&&a.push([t.attributes[s],l.r,l.g,l.b]);})):e.uniqueValueInfos.forEach((e=>{var t;if(null==(t=e.symbol.color)||!t.a)return;const n=e.symbol.color;isNaN(+e.value)?m=!0:a.push([+e.value,n.r,n.g,n.b]);}))),m)return null;const c=o&&a.length>0?y$3(a,o):a,p=new h$3;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=c,p.variableName="Raster",p}function R(e,n){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:a}=n,o=a?y$3(r,a):r,i=new h$3;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=o,i}function A(e){const t=[];return e.forEach((e=>{const n=e;if(Array.isArray(n))t.push(n);else {if(null==n.min||null==n.max)return;const e=[n.min,n.max,n.avg||0,n.stddev||0];t.push(e);}})),t}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
var u$1;const m$1=s$1()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),h$1=s$1()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function M(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone";}return h$1.fromJSON(t)}let w=u$1=class extends a$1{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null;}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return M(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const o=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),i=o||(r?m$1.toJSON(r):null);return m$1.fromJSON(i)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new u$1({ascending:this.ascending,itemRenderingRule:l$4(this.itemRenderingRule),lockRasterIds:l$4(this.lockRasterIds),method:this.method,multidimensionalDefinition:l$4(this.multidimensionalDefinition),objectIds:l$4(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:l$4(this.viewpoint),where:this.where})}};e([d$6({type:Boolean,json:{write:!0}})],w.prototype,"ascending",void 0),e([o("ascending",["ascending","sortAscending"])],w.prototype,"readAscending",null),e([d$6({type:h$3,json:{write:!0}})],w.prototype,"itemRenderingRule",void 0),e([d$6({type:[S$1],json:{write:{overridePolicy(){return {enabled:"lock-raster"===this.method}}}}})],w.prototype,"lockRasterIds",void 0),e([d$6({type:String,json:{type:h$1.jsonValues,write:{target:"mosaicMethod",writer:h$1.write}}})],w.prototype,"method",void 0),e([o("method",["mosaicMethod","defaultMosaicMethod"])],w.prototype,"readMethod",null),e([d$6({type:[p$6],json:{write:!0}})],w.prototype,"multidimensionalDefinition",void 0),e([d$6({type:[S$1],json:{name:"fids",write:!0}})],w.prototype,"objectIds",void 0),e([d$6({json:{type:m$1.jsonValues,read:{reader:m$1.read},write:{target:"mosaicOperation",writer:m$1.write}}})],w.prototype,"operation",void 0),e([o("operation",["mosaicOperation","mosaicOperator"])],w.prototype,"readOperation",null),e([d$6({type:String,json:{write:{overridePolicy(){return {enabled:"attribute"===this.method}}}}})],w.prototype,"sortField",void 0),e([d$6({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return {enabled:"attribute"===this.method,allowNull:!0}}}}})],w.prototype,"sortValue",void 0),e([c$5("sortValue")],w.prototype,"castSortValue",null),e([d$6({type:b$2,json:{write:!0}})],w.prototype,"viewpoint",void 0),e([d$6({type:String,json:{write:!0}})],w.prototype,"where",void 0),w=u$1=e([i$2("esri.layers.support.MosaicRule")],w);const y$2=w;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let d$3=class extends a$1{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2;}writeAdjustAspectRatio(e,r,t){this.layer.version<10.3||(r[t]=e);}writeCompressionQuality(e,r,t){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(r[t]=e);}writeCompressionTolerance(e,r,t){"lerc"===this.format&&null!=e&&(r[t]=e);}writeLercVersion(e,r,t){"lerc"===this.format&&this.layer.version>=10.5&&(r[t]=e);}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e);}get mosaicRule(){const e=this.layer;let r=e.mosaicRule;const t=e.definitionExpression;return r?t&&t!==r.where&&(r=r.clone(),r.where=t):t&&(r=new y$2({where:t})),r}get renderingRule(){const e=this.layer;let r=e.renderingRule;const t=e.pixelFilter,o=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return r=this._addResampleRasterFunction(r),o&&!t&&(r=this.combineRendererWithRenderingRule()),r}combineRendererWithRenderingRule(){var e;const r=this.layer,{rasterInfo:t,renderingRule:o,renderer:i}=r;if(!i||!l$2(i))return o;return m$2(c$3(i,{rasterAttributeTable:t.attributeTable,pixelType:t.pixelType,dataType:t.dataType,bandProperties:null==(e=t.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:r.version<10.6}),o)}_addResampleRasterFunction(e){var r;if(!("vector-field"===(null==(r=this.layer.renderer)?void 0:r.type))||"Resample"===(null==e?void 0:e.functionName))return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,o=new h$3({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return m$2(o,e)}};e([d$6()],d$3.prototype,"layer",void 0),e([d$6({json:{write:!0}})],d$3.prototype,"adjustAspectRatio",void 0),e([r("adjustAspectRatio")],d$3.prototype,"writeAdjustAspectRatio",null),e([d$6({json:{write:!0}}),o$1("layer.bandIds")],d$3.prototype,"bandIds",void 0),e([d$6({json:{write:!0}})],d$3.prototype,"compression",void 0),e([d$6({json:{write:!0}}),o$1("layer.compressionQuality")],d$3.prototype,"compressionQuality",void 0),e([r("compressionQuality")],d$3.prototype,"writeCompressionQuality",null),e([d$6({json:{write:!0}}),o$1("layer.compressionTolerance")],d$3.prototype,"compressionTolerance",void 0),e([r("compressionTolerance")],d$3.prototype,"writeCompressionTolerance",null),e([d$6({json:{write:!0}}),o$1("layer.format")],d$3.prototype,"format",void 0),e([d$6({type:String,json:{read:{reader:o$2.read},write:{writer:o$2.write}}}),o$1("layer.interpolation")],d$3.prototype,"interpolation",void 0),e([d$6({json:{write:!0}}),o$1("layer.noData")],d$3.prototype,"noData",void 0),e([d$6({type:String,json:{read:{reader:i$3.read},write:{writer:i$3.write}}}),o$1("layer.noDataInterpretation")],d$3.prototype,"noDataInterpretation",void 0),e([d$6({json:{write:!0}})],d$3.prototype,"pixelType",void 0),e([d$6({json:{write:!0}})],d$3.prototype,"lercVersion",void 0),e([r("lercVersion")],d$3.prototype,"writeLercVersion",null),e([d$6({type:Number})],d$3.prototype,"version",null),e([d$6({json:{write:!0}})],d$3.prototype,"mosaicRule",null),e([d$6({json:{write:!0}})],d$3.prototype,"renderingRule",null),d$3=e([i$2("esri.layers.mixins.ExportImageServiceParameters")],d$3);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let p$3=class extends a$1{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null;}};e([d$6({json:{write:!0}})],p$3.prototype,"catalogItemVisibilities",void 0),e([d$6({type:g$2,json:{write:!0}})],p$3.prototype,"catalogItems",void 0),e([d$6({type:b$2,json:{write:!0}})],p$3.prototype,"location",void 0),e([d$6({json:{write:!0}})],p$3.prototype,"name",void 0),e([d$6({json:{write:!0}})],p$3.prototype,"objectId",void 0),e([d$6({json:{write:!0}})],p$3.prototype,"processedValues",void 0),e([d$6({json:{write:!0}})],p$3.prototype,"properties",void 0),e([d$6({json:{write:!0}})],p$3.prototype,"value",void 0),p$3=e([i$2("esri.rest.support.ImageIdentifyResult")],p$3);const l$1=p$3;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let i=class extends a$1{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null;}};e([d$6({json:{write:!0}})],i.prototype,"attributes",void 0),e([d$6({type:b$2,json:{write:!0}})],i.prototype,"location",void 0),e([d$6({json:{write:!0}})],i.prototype,"locationId",void 0),e([d$6({json:{write:!0}})],i.prototype,"rasterId",void 0),e([d$6({json:{write:!0}})],i.prototype,"resolution",void 0),e([d$6({json:{write:!0}})],i.prototype,"pixelValue",void 0),i=e([i$2("esri.rest.support.ImageSample")],i);const p$2=i;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let p$1=class extends a$1{constructor(){super(...arguments),this.samples=null;}};e([d$6({type:[p$2],json:{write:!0}})],p$1.prototype,"samples",void 0),p$1=e([i$2("esri.rest.support.ImageSampleResult")],p$1);const c$2=p$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
function u(t){const o=null==t?void 0:t.time;if(o&&(null!=o.start||null!=o.end)){const s=[];null!=o.start&&s.push(o.start),null!=o.end&&-1===s.indexOf(o.end)&&s.push(o.end),t.time=s.join(",");}}async function m(t,r,i){const m=e$1(t),l=r.geometry?[r.geometry]:[],c=await v$1(l),p=r.toJSON();u(p);const f=c&&c[0];r$2(f)&&(p.geometry=f.toJSON());const g=n$2({...m.query,f:"json",...p});return r$3(g,i)}async function l(o,s,n){const a=await m(o,s,n),r=e$1(o),{data:i}=await E(`${r.path}/computeStatisticsHistograms`,a),{statistics:u}=i;return null!=u&&u.length&&u.forEach((t=>{t.avg=t.mean,t.stddev=t.standardDeviation;})),{statistics:u,histograms:i.histograms}}async function c$1(o,s,n){const a=await m(o,s,n),r=e$1(o),{data:i}=await E(`${r.path}/computeHistograms`,a);return {histograms:i.histograms}}async function p(r,m,l){var c,p;const f=m.toJSON();u(f),null!=(c=f.outFields)&&c.length&&(f.outFields=f.outFields.join(","));const g=await v$1(m.geometry),d=null==g?void 0:g[0];r$2(d)&&(f.geometry=d.toJSON());const y=e$1(r),h=n$2({...y.query,f:"json",...f}),N=r$3(h,l),{data:S}=await E(`${y.path}/getSamples`,N),j=null==S||null==(p=S.samples)?void 0:p.map((t=>{const o="NaN"===t.value||""===t.value?null:t.value.split(" ").map((t=>Number(t)));return {...t,pixelValue:o}}));return c$2.fromJSON({samples:j})}async function f(i,u,m){const l=e$1(i),c=u.geometry?[u.geometry]:[];return v$1(c).then((s=>{const e=u.toJSON(),r=s&&s[0];r$2(r)&&(e.geometry=JSON.stringify(r.toJSON()));const i=n$2({...l.query,f:"json",...e}),c=r$3(i,m);return E(l.path+"/identify",c)})).then((t=>l$1.fromJSON(t.data)))}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
var y$1;let j$1=y$1=class extends a$1{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null;}writeGeometry(e,r,t){null!=e&&(r.geometryType=v$2(e),r[t]=e.toJSON());}clone(){return new y$1(l$4({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};e([d$6({types:i$4,json:{read:d$7}})],j$1.prototype,"geometry",void 0),e([r("geometry")],j$1.prototype,"writeGeometry",null),e([d$6({type:y$2,json:{write:!0}})],j$1.prototype,"mosaicRule",void 0),e([d$6({type:h$3,json:{write:!0}})],j$1.prototype,"renderingRule",void 0),e([d$6({type:b$2,json:{write:!0}})],j$1.prototype,"pixelSize",void 0),e([d$6({json:{write:!0}})],j$1.prototype,"raster",void 0),e([d$6({type:y$5,json:{read:{source:"time"},write:{target:"time"}}})],j$1.prototype,"timeExtent",void 0),j$1=y$1=e([i$2("esri.rest.support.ImageHistogramParameters")],j$1);const d$2=j$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
var y;let c=y=class extends a$1{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0;}writeGeometry(e,t,r){null!=e&&(t.geometryType=v$2(e),t[r]=JSON.stringify(e.toJSON()));}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=y$2.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t);}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()));}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=h$3.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t);}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()));}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))));}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e));}writeTimeExtent(e,t,r){if(null!=e){const o=r$2(e.start)?e.start.getTime():null,s=r$2(e.end)?e.end.getTime():null;t[r]=null!=o?null!=s?`${o},${s}`:`${o}`:null;}}clone(){return new y(l$4({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};e([d$6({json:{write:!0}})],c.prototype,"geometry",void 0),e([r("geometry")],c.prototype,"writeGeometry",null),e([d$6({type:y$2,json:{write:!0}})],c.prototype,"mosaicRule",null),e([r("mosaicRule")],c.prototype,"writeMosaicRule",null),e([d$6({type:h$3,json:{write:!0}})],c.prototype,"renderingRule",null),e([r("renderingRule")],c.prototype,"writeRenderingRule",null),e([d$6({type:[h$3],json:{write:!0}})],c.prototype,"renderingRules",void 0),e([r("renderingRules")],c.prototype,"writeRenderingRules",null),e([d$6({type:b$2,json:{write:!0}})],c.prototype,"pixelSize",void 0),e([r("pixelSize")],c.prototype,"writePixelSize",null),e([d$6({type:Boolean,json:{write:!0}})],c.prototype,"returnGeometry",void 0),e([d$6({type:Boolean,json:{write:!0}})],c.prototype,"returnCatalogItems",void 0),e([d$6({type:Boolean,json:{write:!0}})],c.prototype,"returnPixelValues",void 0),e([d$6({type:Number,json:{write:!0}})],c.prototype,"maxItemCount",void 0),e([d$6({type:y$5,json:{write:{target:"time"}}})],c.prototype,"timeExtent",void 0),e([r("timeExtent")],c.prototype,"writeTimeExtent",null),e([d$6({json:{write:!0}})],c.prototype,"raster",void 0),e([d$6({json:{write:!0}})],c.prototype,"viewId",void 0),c=y=e([i$2("esri.rest.support.ImageIdentifyParameters")],c);const d$1=c;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
var d;let j=d=class extends a$1{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null;}writeGeometry(t,e,o){null!=t&&(e.geometryType=v$2(t),e[o]=t.toJSON());}set locations(t){if(null!=t&&t.length){const e=new m$4({spatialReference:t[0].spatialReference});e.points=t.map((t=>[t.x,t.y])),this._set("locations",t),this.geometry=e;}}clone(){return new d(l$4({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};e([d$6({types:i$4,json:{read:d$7}})],j.prototype,"geometry",void 0),e([r("geometry")],j.prototype,"writeGeometry",null),e([d$6({type:String,json:{type:o$2.jsonValues,read:o$2.read,write:o$2.write}})],j.prototype,"interpolation",void 0),e([d$6({type:y$2,json:{write:!0}})],j.prototype,"mosaicRule",void 0),e([d$6({type:[String],json:{write:!0}})],j.prototype,"outFields",void 0),e([d$6({type:b$2,json:{write:!0}})],j.prototype,"pixelSize",void 0),e([d$6({type:String,json:{write:!0}})],j.prototype,"raster",void 0),e([d$6({type:Boolean,json:{write:!0}})],j.prototype,"returnFirstValueOnly",void 0),e([d$6({type:Number,json:{write:!0}})],j.prototype,"sampleDistance",void 0),e([d$6({type:Number,json:{write:!0}})],j.prototype,"sampleCount",void 0),e([d$6({type:Number,json:{write:!0}})],j.prototype,"sliceId",void 0),e([d$6({type:y$5,json:{read:{source:"time"},write:{target:"time"}}})],j.prototype,"timeExtent",void 0),j=d=e([i$2("esri.rest.support.ImageSampleParameters")],j);const h=j;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const le=s$2.getLogger("esri.layers.mixins.ArcGISImageService"),ue=s$1()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),pe=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ce=v$5(a$2,{min:0,max:255});function me(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}const de=o$3=>{let u=class extends o$3{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null;}initialize(){this._set("exportImageServiceParameters",new d$3({layer:this}));}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?y$2.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return !this.rasterFunctionInfos||r$2(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||r$2(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name);})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e);}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e);}get fieldsIndex(){return this.fields?new d$9(this.fields):null}set format(e){e&&pe.has(e.toLowerCase())&&this._set("format",e.toLowerCase());}readFormat(e,t){return "esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=y$2.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t);}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?y$2.fromJSON(r):this._isMosaicRuleSupported(t)?y$2.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new y$2({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON());}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=ce(e));}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name;}return e}get parsedUrl(){return this.url?U(this.url):null}readRenderer(e,t,i){var s,n;const a=null==t||null==(s=t.layerDefinition)||null==(n=s.drawingInfo)?void 0:n.renderer,o=p$7(a,i);return null==o?null:("vector-field"===o.type&&t.symbolTileSize&&!a.symbolTileSize&&(o.symbolTileSize=t.symbolTileSize),l$2(o)||le.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),o)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize);}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new y$6({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new y$6({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new y$6({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let s=this.fields?l$4(this.fields):[];s.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&r$2(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&s.push(i),r$2(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{s.push(new y$6({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}));})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(s.push(new y$6({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),s.push(new y$6({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=l$4(t);return r.name=e+t.name,r}));s=s.concat(t);}return s}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=h$3.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t);}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?h$3.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON());}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?k.fromJSON(r):null}readPixelType(e){return ue.fromJSON(e)||e}writePixelType(e,t$1,r){(t(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t$1[r]=ue.toJSON(e));}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this._symbolizer.bind(),await s.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await s.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:a};}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})};}return r}destroy(){this._shutdownJobHandler();}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++;}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler();}async computeHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new s$3("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=v$3(d$2,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),c$1(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new s$3("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=v$3(d$2,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),l(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return r$2(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new s$3("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const s=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return U$1(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return E(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new s$3("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):E(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>g$2.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=E(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=E(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),s=await Promise.all([r,i]);if(!s[0])return;const a=M$1.fromJSON(s[0].extent),o=s[0].statistics?s[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new l$5({bandCount:s[0].bandCount,extent:a,spatialReference:a.sr,pixelSize:new b$2({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:a.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:o,histograms:s[0].histograms,keyProperties:s[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await E(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await E(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent;}catch{}if(!s||!s.spatialReference)return {ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const a=this.version>=10.7?E(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},o=s.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:o.wkid||JSON.stringify(o),outSR:"0:"+e},u=E(this.parsedUrl.path+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=5,c=(s.xmin+s.xmax)/2,m=(s.ymax-s.ymin)/(p+1),d=s.ymin+m,h=[];for(let n=0;n<p;n++)h.push({x:c,y:d+m*n});const f={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:o.wkid||JSON.stringify(o),outSR:"0:"+e},y=E(this.parsedUrl.path+"/project",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([a,u,y]);let R=g[0].ipxf;if(null==R){var v,x,b;const e=null==(v=i.geodataXform)?void 0:v.xf_0;"topup"===(null==e||null==(x=e.name)?void 0:x.toLowerCase())&&6===(null==e||null==(b=e.coefficients)?void 0:b.length)&&(R={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}});}const S=M$1.fromJSON(g[1]&&g[1].geometries&&g[1].geometries[0]);S&&(S.spatialReference=new k({wkid:0,imageCoordinateSystem:i}));const I=g[2].geometries?g[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],_=I.length;if(_<3)return {ics:i,icsToPixelTransform:R,icsExtent:S,northDirection:null};let w=0,F=0,O=0,N=0;for(let n=0;n<_;n++)w+=I[n].x,F+=I[n].y,O+=I[n].x*I[n].x,N+=I[n].x*I[n].y;const T=(_*N-w*F)/(_*O-w*w);let P=0;const D=I[p-1].x>I[0].x,j=I[p-1].y>I[0].y;return T===1/0?P=j?90:270:0===T?P=D?0:180:T>0?P=D?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(P=j?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:i,icsToPixelTransform:R,icsExtent:S,northDirection:P}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&r$2(this.serviceRasterInfo))return this.serviceRasterInfo;const r=me(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const s=(e=e.clone().shiftCentralMeridian()).spatialReference;let n;if(s.imageCoordinateSystem){const{id:e,referenceServiceName:t}=s.imageCoordinateSystem;n=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:s.imageCoordinateSystem});}else n=s.wkid||JSON.stringify(s.toJSON());r$2(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const a=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=a;let{renderingRule:u}=a;const c=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase(),m=!this.renderer||"raster-stretch"===this.renderer.type;if(null!=o&&o.length&&c&&m){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===(null==t?void 0:t.rasterFunction)?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e);}else e.rasterFunctionArguments.Raster=u,u=e;a.bandIds=void 0;}else a.bandIds=null==o?void 0:o.join(",");l instanceof Array&&l.length>0&&(a.noData=l.join(","));const d=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;a.mosaicRule=d&&JSON.stringify(d),a.renderingRule=u&&JSON.stringify(u);const h={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?h.time=""+e:null==e&&null==t||(h.time=`${null==e?"null":e},${null==t?"null":t}`);}return {bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+r,...a,...h}}async getSamples(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new s$3("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=v$3(h,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),p(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new s$3("imagery-layer:query-rasters","query operation is not supported on the input image service");e=v$3(d$1,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;if(s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=e$2(t);}return r&&null==e.raster&&(e.raster=r),f(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new b$3;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return ({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),s$4(this.url,e,t)}async queryObjectIds(e,t){return ({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),s$5(this.url,e,t)}async queryRasterCount(e,t){return ({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),n$3(this.url,e,t)}queryVisibleRasters(e,t$1){if(!e)return Promise.reject(new s$3("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t$1||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const m="raster.servicepixelvalue",d=this.rasterFunctionNamesIndex;if(r$2(e.outFields)&&(o=e.outFields.some((e=>-1===e.toLowerCase().indexOf(m))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(m)>-1&&e.length>m.length)).map((e=>{const t=e.slice(m.length+1);return [this._updateRenderingRulesFunctionName(t,d),t]}));l=t.map((e=>new h$3({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName));}const h=t(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f$1=e.timeExtent||this.timeExtent,y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,f$1),g=this._getQueryParams({geometry:e.geometry,timeExtent:f$1,mosaicRule:y,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:h,raster:this.raster,maxItemCount:s?1:null});delete g.f;const R=new d$1(g),v=this.generateRasterInfo(this.renderingRule);return new Promise((r=>{v.then((()=>{f(this.url,R,{signal:null==t$1?void 0:t$1.signal,query:{...this.customParameters}}).then((t=>{const s=e.outFields;if(o&&!h&&t.catalogItems&&t.catalogItems.features&&t.catalogItems.features.length>0){const o=this.objectIdField||"ObjectId",l=t.catalogItems.features,p=l.map((e=>e.attributes&&e.attributes[o])),c=new b$3({objectIds:p,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[o]});return this.queryRasters(c).then((a=>{a&&a.features&&a.features.length>0&&a.features.forEach((t=>{l.forEach((r=>{r.attributes[o]===t.attributes[o]&&(r.geometry=new v$4(t.geometry),r.geometry.spatialReference=e.outSpatialReference);}));})),r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s}));})).catch((()=>{throw new s$3("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}r(this._processVisibleRastersResponse(t,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s}));})).catch((()=>{throw new s$3("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}));}));}))}async fetchVariableStatisticsHistograms(e,t){const r=E(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=E(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;})),{statistics:s[0]||null,histograms:s[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),r$2(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=r$2(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,i,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this.renderer=null,le.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e);}));}));const t=r$2(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t);}))}_combineMosaicRuleWithTimeExtent(e,t$1){const r=this.timeInfo;if(t(e)||t(this.multidimensionalInfo)||t(t$1)||t(null==r?void 0:r.startField))return e;const{startField:i}=r;var s;if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=null==(s=e.multidimensionalDefinition)?void 0:s.filter((e=>e.dimensionName!==i)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const n=e.multidimensionalDefinition.filter((e=>e.dimensionName===i)),a=r$2(t$1.start)?t$1.start.getTime():null,o=r$2(t$1.end)?t$1.end.getTime():null,l=null==a||null==o||a===o,u=l?[a||o]:[[a,o]],m=this.version>=10.8;if(n.length)n.forEach((e=>{e.dimensionName===i&&(m?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=l,e.values=u));}));else if(!m){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=i,e.isSlice=l,e.values=u;})):e.multidimensionalDefinition.push(new p$6({variableName:"",dimensionName:i,isSlice:l,values:u}));}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return t(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){var r;if(await this._fetchCapabilities(null==(r=t)?void 0:r.signal),!this.capabilities.operations.supportsQuery)throw new s$3("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=r$2(e)?v$3(b$3,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new n$4;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e;}),(()=>null)),await this._rasterJobHandler.connectionPromise;}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0;}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return "unique-value"===e.type&&r&&"none"!==r.functionName.toLowerCase()&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||k$1(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await E(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"));}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new s$3("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl});}_isMosaicDataset(e){var t;return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:(null==(t=e.fields)?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return !1;const r=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&(null==(t=e.fields)?void 0:t.length)>1);return r||i}_isVectorFieldResampleFunction(e){if(!r$2(e))return !1;const{functionName:t,functionArguments:r}=e,i="resample"===t.toLowerCase(),s=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===s||10===s)}_isPicture(){return !this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=S$2(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e);}var e,t;if(!this.renderer)this.renderer=j$2(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName});this._symbolizer?(this._symbolizer.rendererJSON=X(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new N({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null);}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:r$2(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return {raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return {...e,query:{...null==e?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):P(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await E(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;}));})),r}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:E(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.rasterFunctionInfos})):null}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new s$3("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,s=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&E(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>g$2.fromJSON(e.data))).catch((()=>null)),o=!!(t.hasColormap&&this.version>=10.1)&&E(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),l=!!(t.hasHistograms&&this.version>=10.1)&&E(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.version>=10.3&&E(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),p=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([s,o,l,u,p]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]});}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=k.fromJSON(t.spatialReference||t.extent.spatialReference);return new l$5({width:i,height:s,bandCount:t.bandCount,extent:M$1.fromJSON(t.extent),spatialReference:n,pixelSize:new b$2({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return E(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const s=this._initJobHandler(),o=E(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Promise.all([o,s]).then((e=>{const r=e[0].data,s=t.format||"jpgpng";let n=s;if("bsq"!==n&&"bip"!==n&&(n=O(r)),!n){throw new s$3("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)))}const o="gif"===s||"bmp"===s||s.indexOf("png")>-1&&("png"===n||"jpg"===n),l={signal:i};return o?P(r,{useCanvas:!0,...t},l).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:s},l).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))}async _generateRasterInfo(e,t){const{data:r}=await E(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r="",i=[];for(const s in t)if(t.hasOwnProperty(s)){const e=t[s],n=e.extent;let a=!0,o=[n[0]];e.hasRanges&&!0===e.hasRanges?(a=!1,o=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(o=[n[1]]),i.push(new p$6({variableName:r,dimensionName:t[s].name,isSlice:a,values:o}));}if(i.length>0){this.mosaicRule=this.mosaicRule||new y$2;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=i);}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),s=i&&i.format;if(s){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,r){r=r||{};const i=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:a,templateFields:o}=r,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,c=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const m=this.objectIdField||"ObjectId",d="string"==typeof i&&i.toLowerCase().indexOf("nodata")>-1,h=[];if(i&&!u&&!d){const e={};e[m]=0;c=[i],u=[new h$4(this.fullExtent,null,e)];}if(!u)return [];let f,y,g;this._updateResponseFieldNames(u,o),d&&!n&&(u=[]);for(let t=0;t<u.length;t++){if(f=u[t],null!=i&&!d){if(y=c[t],g=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?l[s.indexOf(this.renderingRule.functionName)]:i,"nodata"===y.toLowerCase()&&!n)continue;const e="Raster.ItemPixelValue",r="Raster.ServicePixelValue";f.attributes[e]=this._formatAttributeValue(y,e),f.attributes[r]=this._formatAttributeValue(g,r),this._updateFeatureWithMagDirValues(f,y);const a=this.fields&&this.fields.length>0;let o=this.renderingRule&&r$2(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?a?y:i:g;this.renderingRule||(o=a?y:i),this._updateFeatureWithRasterAttributeTableValues(f,o);}if(f.sourceLayer=this,a&&this._updateFeatureWithDomainValues(f),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t="Raster.ServicePixelValue."+s[e];f.attributes[t]=this._formatAttributeValue(l[e],t);}h.push(u[t]);}return h}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||r$2(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const s=r.fields,n=s.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),a=n&&n[0];if(!a)return;const o=i.filter((e=>e.attributes[a]===(null!=t?parseInt(t,10):null)));o&&o[0]&&s.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(o[0].attributes[t.name],r);}));}_updateFeatureWithMagDirValues(e,t){if("esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new u$4({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new M$1(0,0,0,0,this.spatialReference)});const a="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:c$6([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=a[0],e.attributes["Raster.Direction"]=a[1];}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name);}}));}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r$2(r)&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t]);}}));}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.indexOf("image")>-1,a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return {data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!(null==i||!i.supportsStatistics),supportsOrderBy:!(null==i||!i.supportsOrderBy),supportsDistinct:!(null==i||!i.supportsDistinct),supportsPagination:!(null==i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(null==i||!i.useStandardizedQueries),supportsPercentileStatistics:!(null==i||!i.supportsPercentileStatistics),supportsCentroid:!(null==i||!i.supportsReturningGeometryCentroid),supportsDistance:!(null==i||!i.supportsQueryWithDistance),supportsExtent:!(null==i||!i.supportsReturningQueryExtent),supportsGeometryProperties:!(null==i||!i.supportsReturningGeometryProperties),supportsHavingClause:!(null==i||!i.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return e([d$6()],u.prototype,"_functionRasterInfos",void 0),e([d$6()],u.prototype,"_rasterJobHandler",void 0),e([d$6()],u.prototype,"_symbolizer",void 0),e([d$6({dependsOn:["_serviceSupportsMosaicRule"]})],u.prototype,"_defaultServiceMosaicRule",void 0),e([o("_defaultServiceMosaicRule",["defaultMosaicMethod"])],u.prototype,"readDefaultServiceMosaicRule",null),e([d$6()],u.prototype,"_cachedRendererJson",void 0),e([d$6({readOnly:!0})],u.prototype,"_serviceSourceType",void 0),e([o("_serviceSourceType",["serviceSourceType","fields"])],u.prototype,"readServiceSourceType",null),e([d$6({readOnly:!0})],u.prototype,"_serviceSupportsMosaicRule",void 0),e([o("_serviceSupportsMosaicRule",["currentVersion","fields"])],u.prototype,"readServiceSupportsMosaicRule",null),e([d$6()],u.prototype,"rasterAttributeTableFieldPrefix",void 0),e([d$6({readOnly:!0})],u.prototype,"rasterFunctionNamesIndex",null),e([d$6()],u.prototype,"adjustAspectRatio",void 0),e([d$6({readOnly:!0}),o$1("serviceRasterInfo.bandCount")],u.prototype,"bandCount",void 0),e([d$6({type:[S$1],json:{write:!0}})],u.prototype,"bandIds",void 0),e([o("bandIds")],u.prototype,"readBandIds",null),e([d$6({readOnly:!0,json:{read:!1}})],u.prototype,"capabilities",void 0),e([o("service","capabilities",["capabilities","currentVersion","serviceDataType"])],u.prototype,"readCapabilities",null),e([d$6({type:Number})],u.prototype,"compressionQuality",void 0),e([r("compressionQuality")],u.prototype,"writeCompressionQuality",null),e([d$6({type:Number})],u.prototype,"compressionTolerance",void 0),e([r("compressionTolerance")],u.prototype,"writeCompressionTolerance",null),e([d$6({json:{read:{source:"copyrightText"}}})],u.prototype,"copyright",void 0),e([d$6({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],u.prototype,"definitionExpression",void 0),e([d$6({readOnly:!0,constructOnly:!0})],u.prototype,"exportImageServiceParameters",void 0),e([d$6()],u.prototype,"rasterInfo",void 0),e([d$6({readOnly:!0,type:[y$6]})],u.prototype,"fields",void 0),e([d$6({readOnly:!0})],u.prototype,"fieldsIndex",null),e([d$6({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],u.prototype,"format",null),e([o("service","format",["serviceDataType"])],u.prototype,"readFormat",null),e([d$6({type:M$1})],u.prototype,"fullExtent",void 0),e([d$6({readOnly:!0})],u.prototype,"hasMultidimensions",void 0),e([d$6({json:{read:{source:"maxImageHeight"}}})],u.prototype,"imageMaxHeight",void 0),e([d$6({json:{read:{source:"maxImageWidth"}}})],u.prototype,"imageMaxWidth",void 0),e([d$6({type:String,json:{type:o$2.jsonValues,read:o$2.read,write:o$2.write}})],u.prototype,"interpolation",void 0),e([d$6()],u.prototype,"minScale",void 0),e([o("service","minScale")],u.prototype,"readMinScale",null),e([d$6()],u.prototype,"maxScale",void 0),e([o("service","maxScale")],u.prototype,"readMaxScale",null),e([d$6({type:y$2})],u.prototype,"mosaicRule",null),e([o("mosaicRule",["mosaicRule","defaultMosaicMethod"])],u.prototype,"readMosaicRule",null),e([r("mosaicRule")],u.prototype,"writeMosaicRule",null),e([d$6({readOnly:!0}),o$1("serviceRasterInfo.multidimensionalInfo")],u.prototype,"multidimensionalInfo",void 0),e([d$6({json:{type:S$1}})],u.prototype,"noData",void 0),e([r("noData")],u.prototype,"writeNoData",null),e([d$6({type:String,json:{type:i$3.jsonValues,read:i$3.read,write:i$3.write}})],u.prototype,"noDataInterpretation",void 0),e([d$6({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],u.prototype,"objectIdField",void 0),e([o("objectIdField")],u.prototype,"readObjectIdField",null),e([d$6({})],u.prototype,"geometryType",void 0),e([d$6({})],u.prototype,"typeIdField",void 0),e([d$6({})],u.prototype,"types",void 0),e([d$6({readOnly:!0})],u.prototype,"parsedUrl",null),e([d$6({readOnly:!0}),o$1("serviceRasterInfo.pixelSize.x")],u.prototype,"pixelSizeX",void 0),e([d$6({readOnly:!0}),o$1("serviceRasterInfo.pixelSize.y")],u.prototype,"pixelSizeY",void 0),e([d$6({type:Function})],u.prototype,"pixelFilter",void 0),e([d$6()],u.prototype,"raster",void 0),e([d$6()],u.prototype,"viewId",void 0),e([d$6({types:d$8,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:i$5,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],u.prototype,"renderer",void 0),e([o("renderer")],u.prototype,"readRenderer",null),e([r("renderer")],u.prototype,"writeRenderer",null),e([d$6(u$3)],u.prototype,"opacity",void 0),e([d$6({readOnly:!0}),o$1("serviceRasterInfo.attributeTable")],u.prototype,"rasterAttributeTable",void 0),e([d$6({readOnly:!0})],u.prototype,"rasterFields",null),e([d$6({constructOnly:!0})],u.prototype,"rasterFunctionInfos",void 0),e([d$6({type:h$3})],u.prototype,"renderingRule",null),e([o("renderingRule",["renderingRule","rasterFunctionInfos"])],u.prototype,"readRenderingRule",null),e([r("renderingRule")],u.prototype,"writeRenderingRule",null),e([d$6()],u.prototype,"serviceDataType",void 0),e([d$6({readOnly:!0,type:k})],u.prototype,"spatialReference",void 0),e([o("spatialReference",["spatialReference","extent"])],u.prototype,"readSpatialReference",null),e([d$6({json:{type:ue.jsonValues}})],u.prototype,"pixelType",void 0),e([o("pixelType")],u.prototype,"readPixelType",null),e([r("pixelType")],u.prototype,"writePixelType",null),e([d$6({constructOnly:!0,type:l$5})],u.prototype,"serviceRasterInfo",void 0),e([d$6()],u.prototype,"sourceJSON",void 0),e([d$6(f$4)],u.prototype,"url",void 0),e([d$6({readOnly:!0})],u.prototype,"version",void 0),e([o("version",["currentVersion","fields","timeInfo"])],u.prototype,"readVersion",null),u=e([i$2("esri.layers.mixins.ArcGISImageService")],u),u};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let I=class extends(i$6(a$3(n$5(s$6(y$7(w$2(de(o$3(p$8(l$6(b$4))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery";}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const r=r$2(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(b$5).then((()=>this._fetchService(r)))),Promise.resolve(this)}writeOperationalLayerType(e,r,t){var o;const i="vector-field"===(null==(o=this.renderer)?void 0:o.type);r[t]=i?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer";}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const r=this.rasterFields,t=this.title,o=new Set;let i=!1,s=!1;this.capabilities&&(i=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s=i&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const a=new Set;i&&(a.add("raster.itempixelvalue"),s&&a.add("raster.magnitude").add("raster.direction"));for(const p of r){const e=p.name.toLowerCase();a.has(e)||e.indexOf("raster.servicepixelvalue.")>-1||o.add(p.name);}return a$4({fields:r,title:t},{...e,visibleFieldNames:o})}queryFeatures(e,r){return this.queryRasters(e,r).then((e=>{if(null!=e&&e.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))}queryFeatureCount(e,r){return this.queryRasterCount(e,r)}redraw(){this.emit("redraw");}};e([d$6(c$7)],I.prototype,"legendEnabled",void 0),e([d$6({type:["show","hide"]})],I.prototype,"listMode",void 0),e([d$6({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],I.prototype,"isReference",void 0),e([d$6({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],I.prototype,"operationalLayerType",void 0),e([r("web-map","operationalLayerType")],I.prototype,"writeOperationalLayerType",null),e([d$6(p$9)],I.prototype,"popupEnabled",void 0),e([d$6({type:M$2,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],I.prototype,"popupTemplate",void 0),e([d$6({readOnly:!0})],I.prototype,"defaultPopupTemplate",null),e([d$6({readOnly:!0,json:{read:!1}})],I.prototype,"type",void 0),I=e([i$2("esri.layers.ImageryLayer")],I);const L=I;

export default L;
