import { aW as c$1, dL as I$2, af as t$1, A as r, c as s$2, e, d, i as i$1, p as p$1, u as u$1, $, ai as l$1, V as e$1, b as d$1, T, aN as n, aR as v, n as n$1, S as S$4, s as s$3, bo as s$4, k as a$2, a as i$2, D as l$3, bv as m$3, q as d$2, r as n$2, cP as n$3 } from './messageBundle-f75b4090.js';
import { I as I$3, d as c$3 } from './ColorMaterial-cf44e08d.js';
import { a as a$3 } from './asyncUtils-fe35d349.js';
import { y as y$1 } from './arcgisLayerUrl-49ef2818.js';
import { projectGeometry as l$4 } from './geometryServiceUtils-ba2d6c3e.js';
import { b, a as a$1, m as m$2 } from './Query-d6335b3a.js';
import { c as c$2, k as k$1, E as E$1, a, H as H$1, u, G, e as e$2, h as h$1, m as m$1 } from './aaBoundingRect-9468599b.js';
import { w, A as A$2, O as O$2, S as S$3 } from './dehydratedFeatures-7a1dd0b3.js';
import './mathUtils-e16f9389.js';
import { v as v$1 } from './geometry-7e07b1ba.js';
import './Field-bfaa8af9.js';
import { o as o$1 } from './dehydratedFeatureComparison-789e4e87.js';
import { m } from './arcgis-webscene-b45ae58e.js';
import { D as D$1, f } from './Scheduler-3464f717.js';
import { h as h$3 } from './Graphic-3961df6c.js';
import { a as h$2, E as f$1, L as L$1, v as y } from './symbols-b414aa72.js';
import { M } from './Viewing-639f1e51.js';
import { l as l$2 } from './HandleOwner-88326c19.js';
import { t as a$4, u as s$5 } from './LayerView3D-ad87e12d.js';
import { v as v$2, p as p$2 } from './Graphics3DFeatureLikeLayerView-d3d6cb8c.js';
import { l as l$5 } from './projectExtentUtils-613dce26.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class s$1{constructor(e,s){this.highestResolutionVersion=null,this.versions=[],this.ref(e,s);}get isReferenced(){return 0!==this.versions.length}get isSingle(){return 1===this.versions.length&&1===this.versions[0].refCount}ref(s,t){const r=this.feature;i.oldVersion=r,this.feature&&Object.defineProperty(s,"uid",{value:this.feature.uid,configurable:!0});for(const o of this.versions)if(o.resolution===t){o.refCount++;const t=this.highestResolutionVersion===o&&!o$1(s,o.feature);return (t||this.highestResolutionVersion!==o)&&(o.feature=s),i.newVersion=t?s:r,i}const n={feature:s,resolution:t,refCount:1};return this.versions.push(n),!this.highestResolutionVersion||t<this.highestResolutionVersion.resolution?(i.newVersion=s,this.highestResolutionVersion=n):i.newVersion=r,i}unref(e){for(let s=0;s<this.versions.length;s++){const t=this.versions[s];if(t.resolution===e)return t.refCount--,i.oldVersion=this.feature,0===t.refCount&&(this.versions[s]=this.versions[this.versions.length-1],this.versions.length--,this.highestResolutionVersion===t&&(this.recalculateHighestResolutionVersion(),i.oldVersion=t.feature)),i.newVersion=this.feature,i}return null}get feature(){return this.highestResolutionVersion?this.highestResolutionVersion.feature:null}recalculateHighestResolutionVersion(){if(0===this.versions.length)return void(this.highestResolutionVersion=null);let e=this.versions[0];for(let s=1;s<this.versions.length;s++){const t=this.versions[s];t.resolution<e.resolution&&(e=t);}this.highestResolutionVersion=e;}}class t{constructor(e){this._feature=e,this.refCount=1;}get isReferenced(){return 0!==this.refCount}get isSingle(){return 1===this.refCount}ref(s){return ++this.refCount,i.oldVersion=this._feature,this.feature&&Object.defineProperty(s,"uid",{value:this.feature.uid,configurable:!0}),o$1(this._feature,s)||(this._feature=s),i.newVersion=this._feature,i}unref(){return i.oldVersion=this._feature,this.refCount>0&&(this.refCount--,!this.isReferenced)?(i.newVersion=null,i):(i.newVersion=this._feature,i)}get feature(){return this._feature}}const i={oldVersion:null,newVersion:null};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const _$1=16438,c=new Set;class g{constructor(t){this.descriptor=t,this.fetchStatus=0,this._features=null,this._numVertices=0,this._featureLimit=0,this.featuresMissing=!0,this._shuffled=!1,this._numFeatures=o,this._emptyFeatureRatio=0,this._estimatedSize=-1,this._estimatedUnusedSize=0,this._estimatedUnusedSizeDirty=!1,this._availableFields=c,this._displayingFeatures=null,this.alive=!0,this.filtered=!1;}get displayingFeatures(){return this._displayingFeatures}set displayingFeatures(t){this._displayingFeatures=t,this.extentIncludingBorrowedFeatures=null;}get perTileMaximumNumberOfFeaturesExceeded(){return !this.filtered&&(this.featuresMissing||this.features&&this.featureLimit!==this.features.length)}get features(){return this._features}get featureLimit(){return this._featureLimit}set featureLimit(t){this._featureLimit!==t&&(this._featureLimit=t,this._estimatedUnusedSizeDirty=!0);}get availableFields(){return this._availableFields}setFeatures(t,s,i){this._availableFields=c$1(i,c),this._features=t,this._shuffled=!1,this._estimatedSize=-1,this._estimatedUnusedSizeDirty=!0,t&&t.length>0?(this._emptyFeatureRatio=s/(t.length+s),this._numVertices=t.reduce(((t,e)=>t+w(e.geometry)),0)):(this._emptyFeatureRatio=0,this._numVertices=0);}get emptyFeatureRatio(){return this._emptyFeatureRatio}get numFeatures(){return this.hasPreciseFeatureCount?this._numFeatures:this._features?this._features.length:0}set numFeatures(t){this._numFeatures=t;}get hasPreciseFeatureCount(){return this._numFeatures>o}get needsFeatureCount(){return this._numFeatures===o}get numVertices(){return this._numVertices}get id(){return this.descriptor.id}get estimatedSize(){return this.updateMemoryEstimates(),this._estimatedSize}get estimatedUnusedSize(){return this._estimatedUnusedSize}updateMemoryEstimates(){if(this._estimatedSize<0){if(this._estimatedSize=0,this._estimatedUnusedSize=0,this._features)for(let t=0;t<this._features.length;++t){const e=A$2(this._features[t]);this._estimatedSize+=e,t>=this.featureLimit&&(this._estimatedUnusedSize+=e);}return !0}if(this._estimatedUnusedSizeDirty){if(this._estimatedUnusedSize=0,this._estimatedUnusedSizeDirty=!1,this._features)for(let t=this.featureLimit;t<this._features.length;++t)this._estimatedUnusedSize+=A$2(this._features[t]);return !0}return !1}get isFetching(){return 2===this.fetchStatus||3===this.fetchStatus}get isRefetching(){return 3===this.fetchStatus}get needsFetching(){return 0===this.fetchStatus||1===this.fetchStatus}get needsRefetching(){return 1===this.fetchStatus}get isFetched(){return 4===this.fetchStatus||5===this.fetchStatus}resetFetching(){this.fetchStatus=3===this.fetchStatus?1:0;}get needsDisplayUpdate(){return !!this._features&&!S$2(this._features,this.displayingFeatures,this.featureLimit)}intersects(t){return !t||!this.descriptor.extent||(c$2(t,p),k$1(this.descriptor.extent,p))}intersectionIncludingBorrowed(t,e){const i=r(this.extentIncludingBorrowedFeatures)?this.extentIncludingBorrowedFeatures:this.descriptor.extent;return t||i?(t?(c$2(t,e),E$1(e,i,e)):a(e,i),e):(a(e,H$1),e)}_shuffle(e){this._features.sort(((t,s)=>O$2(t,e)-O$2(s,e))),I$2(this._features,_$1),this._shuffled=!0,this._estimatedUnusedSizeDirty=!0;}reduceFeatures(t,e,s){if(t<=0)return !1;if(!this._features)return this.featureLimit=0,!1;let i=!1;this.featureLimit=Math.ceil(this.numFeatures*t),this.featureLimit>this._features.length&&(this.featureLimit=this._features.length,4===this.fetchStatus&&this._features.length>0&&(this.fetchStatus=1,i=!0)),!this._shuffled&&t<1&&this._shuffle(s);const r=Math.max(this.featureLimit,Math.ceil(e*this.numFeatures));return this._features.length>r&&(this._features.length=r,this.featuresMissing=!0,5===this.fetchStatus&&(this.fetchStatus=4)),i}get cache(){return {availableFields:this._availableFields,features:this.features,numFeatures:this._numFeatures,emptyFeatureRatio:this._emptyFeatureRatio,fetchStatus:this.fetchStatus,featuresMissing:this.featuresMissing}}set cache(t){this.requestController=null,this._availableFields=t.availableFields,this._features=t.features,this._numFeatures=t.numFeatures,this._emptyFeatureRatio=t.emptyFeatureRatio,this.fetchStatus=t.fetchStatus,this.featuresMissing=t.featuresMissing,this._estimatedSize=-1,this._estimatedUnusedSizeDirty=!0;}}const o=-1,F=-2;function S$2(t,e,s){if(t$1(e)||t$1(t)||s!==e.length||s>t.length)return !1;for(let i=0;i<s;++i)if(t[i]!==e[i])return !1;return !0}const p=u();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const O$1=s$2.getLogger("esri.views.3d.layers.support.FeatureTileFetcher3D");let P=class extends p$1{constructor(e){super(e),this._useTileCount=!1,this.updating=!1,this.updatingTotal=0,this.updatingRemaining=0,this.expectedFeatureDiff=0,this.maximumNumberOfFeaturesExceeded=!1,this.maximumNumberOfFeaturesExceededThrottle=1e3,this._fullRatio=1,this._farRatio=1,this.changes={updates:{adds:new Array,removes:new Array},adds:new Array,removes:new Array},this.handles=new u$1,this._frameTask=D$1,this._dirty=!1,this.featureTiles=new Map,this.displayingFeatureReferences=new Map,this.numDisplayingFeatureReferences=0,this.suspended=!0,this.pendingEdits=null;}set maximumNumberOfFeatures(e){e=e||1/0;const t=this._get("maximumNumberOfFeatures");e===t||e<1||(this._set("maximumNumberOfFeatures",e),this.maximumFeaturesUpdated(t,e));}set memoryFactor(e){this.memoryFactor!==e&&(this._set("memoryFactor",e),this.setDirty());}set lodFactor(e){this.lodFactor!==e&&(this._set("lodFactor",e),this.supportsResolution&&this.refetch());}get useTileCount(){return this._useTileCount&&r(this.context.query.queryFeatureCount)}set useTileCount(e){this._useTileCount=e,this.notifyChange("useTileCount");}get memoryForUnusedFeatures(){let e=0;return this.featureTiles.forEach((t=>e+=t.estimatedUnusedSize)),e}get totalVertices(){let e=0;return this.featureTiles.forEach((t=>e+=t.numVertices)),e}get totalFeatures(){let e=0;return this.featureTiles.forEach((t=>e+=t.numFeatures)),e}set filterExtent(e){if(e&&this.context.tilingScheme&&!e.spatialReference.equals(this.context.tilingScheme.spatialReference))return void O$1.error("#filterExtent=","extent needs to be in the same spatial reference as the tiling scheme");const t=this._get("filterExtent");if(t===e||t&&e&&t.equals(e))return;const s=e?e.clone():null;this._set("filterExtent",s),this.reclip(s,t);}initialize(){this.handles.add($(this,"tileDescriptors","change",(()=>this.setDirty()),(()=>this.setDirty()))),this.objectIdField=this.context.objectIdField,this.FeatureReferenceClass=this.context.capabilities.supportsMultipleResolutions?s$1:t;const e=this.context.scheduler;r(e)&&(this._frameTask=e.registerTask(f.FEATURE_TILE_FETCHER,this)),this.setDirty();}destroy(){this._frameTask.remove(),this.handles=l$1(this.handles),this.featureTiles.forEach((e=>{this.cancelFetchTile(e),this.removeTile(e);})),this.featureTiles.clear(),this.displayingFeatureReferences.clear(),this.pendingEdits&&(this.pendingEdits.controller.abort(),this.pendingEdits=null);}get paused(){return this.suspended||!!this.pendingEdits}restart(){this.featureTiles.forEach((e=>{this.cancelFetchTile(e),this.clearTile(e),this.resetFetchTile(e);})),r(this.context.memoryCache)&&this.context.memoryCache.clear(),this.setDirty();}refetch(){this.featureTiles.forEach((e=>{this.cancelFetchTile(e),this.resetFetchTile(e);})),r(this.context.memoryCache)&&this.context.memoryCache.clear(),this.setDirty();}suspend(){this.suspended||(this.suspended=!0,this.pause(),this.setDirty());}resume(){this.suspended&&(this.suspended=!1,this.unpause());}pause(){this.paused&&(this.featureTiles.forEach((e=>this.cancelFetchTile(e))),this.updated());}unpause(){this.paused||(this.setDirty(),this.updated());}get availableFields(){let e=null;return this.featureTiles.forEach((t=>{t$1(t.displayingFeatures)||0===t.displayingFeatures.length||(t$1(e)?e=new Set(t.availableFields):e.forEach((s=>{t.availableFields.has(s)||e$1(e).delete(s);})));})),r(e)?e:new Set}applyEdits(e){this.pendingEdits||(this.pendingEdits={edits:Promise.resolve(),count:0,controller:new AbortController},this.pause());const t=this.pendingEdits;t.count++;const s=t.edits.then((()=>e.result.catch((e=>{if(d$1(e))throw e;return null})).then((e=>e?(this.applyEditsDeleteFeatures(e.deletedFeatures),this.applyEditsAddUpdateFeatures(e.addedFeatures,e.updatedFeatures,t.controller.signal).then((()=>e))):e)).then((e=>(0==--t.count&&(this.pendingEdits===t&&(this.pendingEdits=null),r(this.context.memoryCache)&&this.context.memoryCache.clear(),this.unpause(),this.updated()),e)))));return t.edits=s,this.updated(),s}applyEditsDeleteFeatures(e){if(0===e.length)return;const t=this.context.globalIdField,s=t&&this.availableFields.has(t),i=new Set,r=this.objectIdField;e.forEach((({objectId:e,globalId:a})=>{if((!e||e<0)&&t){s||O$1.errorOncePerTick(`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected in the view`);const e=this.features.find((e=>e.attributes&&e.attributes[t]===a));e&&i.add(O$2(e,r));}else i.add(e);})),this.featureTiles.forEach((e=>{if(!e.features)return;const t=e.features.filter((e=>!i.has(O$2(e,this.objectIdField))));t.length!==e.features.length&&(e.setFeatures(t,0,e.availableFields),this.invalidateCounts());}));}async applyEditsAddUpdateFeatures(e,t,s){const i=[],r=new Set;if(e.forEach((e=>i.push(e.objectId))),t.forEach((e=>{i.push(e.objectId),r.add(e.objectId);})),0===i.length)return;const a=[];this.featureTiles.forEach((e=>{const t=this.applyEditsAddUpdateTile(e,i,r,s);t&&a.push(t);})),await T(a);}async applyEditsAddUpdateTile(e,t,s,i){if(!e.features)return;const r=this.createQuery(e);r.resultType=void 0,r.cacheHint=!1,r.objectIds=t;const a=await this.queryFeatures(r,i);let n=null;if(s.size>0){const t=e.features.filter((e=>!s.has(O$2(e,this.objectIdField))));t.length!==e.features.length&&(n=t);}if(a.features.length>0){n||(n=e.features.slice());for(const e of a.features)n.push(e);}n&&(e.hasPreciseFeatureCount&&(e.numFeatures=Math.max(e.numFeatures,n.length)),e.setFeatures(n,0,Q(e.availableFields,a.fields)),this.invalidateCounts());}queryFeatures(e,t){return this.context.query.queryFeaturesDehydrated(e,{signal:t,timeout:z})}setDirty(){this._dirty=!0,this.updated();}get running(){return this.updating}runTask(e){if(this._frameTask.processQueue(e),!this._dirty||!this.constructed)return;this._dirty=!1;const t=this.getListOfTiles();if(this.markTilesNotAlive(t),!e.run((()=>this.addTiles(t,e)))||!e.run((()=>this.filterExtentTiles(t,e)))||!e.run((()=>this.removeTiles(t,e)))||e.done)return void this.setDirty();const s=this.sortTiles(t);e.run((()=>this.displayTiles(s,e)))&&e.run((()=>this.fetchTiles(s,e)))&&e.run((()=>this.updateMemoryEstimates(s,e)))||this.setDirty(),this.updated(),this.updating||this.updateMaximumNumberOfFeaturesExceeded();}markTilesNotAlive(e){for(const t of e)t.alive=!1;}addTiles(e,t){return !this.suspended&&(this.tileDescriptors.forEach((s=>{const i=this.featureTiles.get(s.id);i?i.alive=!0:t.done||(e.push(this.addTile(s)),t.madeProgress());})),t.hasProgressed)}filterExtentTiles(e,t){for(const s of e){if(t.done)break;s.alive&&(s.filtered=!s.intersects(this.filterExtent),s.filtered&&(this.clearTile(s),t.madeProgress()));}return t.hasProgressed}removeTiles(e,t){for(let s=e.length-1;s>=0&&!t.done;s--){const i=e[s];i.alive||(this.removeTile(i),s!==e.length-1&&(e[s]=e[e.length-1]),e.pop(),t.madeProgress());}return t.hasProgressed}sortTiles(e){return e.sort(((e,t)=>e.descriptor.loadPriority-t.descriptor.loadPriority)),e}displayTiles(e,t){const s=this.updateRatio(e),i=e=>{const t=this._fullRatio<1?s(e)*this._farRatio:1;return e.reduceFeatures(t,this.memoryFactor,this.objectIdField)&&this.setDirty(),this.showTile(e)};for(const r of e)if(!t.run((()=>i(r)))){this.setDirty();break}return t.hasProgressed}fetchTiles(e,t){if(this.paused)return !1;let s=!1;for(const i of e){if(!i.needsFetching)continue;const e=r(this.context.memoryCache)?this.context.memoryCache.pop(i.id):null;if(r(e))i.cache=e,this.setDirty(),this.scheduleUpdated(),t.madeProgress();else {if(this.needsNumFeatures(i)){const e=new AbortController,r=this.fetchTileCount(i,e.signal);this._handleRequest(i,r,e,(()=>i.numFeatures=F)),s=!0,t.madeProgress();}if(t.done)return !0}}if(s)return t.hasProgressed;for(const i of e)if(i.needsFetching){const e=new AbortController,s=this.fetchTile(i,e.signal);if(this._handleRequest(i,s,e,(e=>{i.setFeatures([],0,null),this.invalidateCounts(),i.featuresMissing=!1,this.context.logFetchError(O$1,e);})),t.madeProgress(),t.done)return !0}return t.hasProgressed}updateMemoryEstimates(e,t){return e.some((e=>!t.run((()=>e.updateMemoryEstimates()))&&(this.setDirty(),!0))),t.hasProgressed}reclip(e,t){if(!this.constructed)return;const s=new Array;this.featureTiles.forEach((i=>{t$1(i.displayingFeatures)||0===i.displayingFeatures.length||(i.intersectionIncludingBorrowed(t,L),i.intersectionIncludingBorrowed(e,V$1),G(L,V$1)||s.push(i));})),this.refreshDisplayingFeatures(s),this.updated();}refreshDisplayingFeatures(e){const t=new Set,s=this.changes.updates;for(const i of e)if(!t$1(i.displayingFeatures))for(const e of i.displayingFeatures){const i=O$2(e,this.objectIdField);if(t.has(i))continue;t.add(i);const{feature:r}=this.displayingFeatureReferences.get(i);s.removes.push(r),s.adds.push(r);}this.applyChanges();}updated(){let e=0;this.paused||this.featureTiles.forEach((t=>t.isFetching?++e:0));const t=this._dirty||e>0||!!this.pendingEdits;if(this._set("updating",t),t){let t=0,s=0,i=0,r$1=0,n=0;const o=this.displayingFeatureReferences.size/this.numDisplayingFeatureReferences;this.featureTiles.forEach((e=>{if(++s,e.isFetching&&e.hasPreciseFeatureCount){const t=this.maximumFeaturesForTile(e)*(1-e.emptyFeatureRatio),s=r(e.displayingFeatures)?e.displayingFeatures.length*o:0;n+=t-s;}e.needsFetching?++r$1:e.numFeatures>0&&(++i,t+=e.numFeatures);})),r$1+=e;let u=0,l=0;t?(l=t,u=Math.min(r$1*t/i,t)):(l=s,u=r$1),n=Math.min(this.maximumNumberOfFeatures-this.features.length,n),this._set("updatingTotal",l),this._set("updatingRemaining",u),this._set("expectedFeatureDiff",n);}else this._set("updatingTotal",0),this._set("updatingRemaining",0),this._set("expectedFeatureDiff",0);this.debugger&&this.debugger.update();}updateMaximumNumberOfFeaturesExceeded(){const e=n(this.featureTiles,(e=>e.perTileMaximumNumberOfFeaturesExceeded));this._set("maximumNumberOfFeaturesExceeded",e);}updateRatio(e){const t=I$1(e),s=e=>1/(1<<Math.max(0,t-e.descriptor.lij[0]));let i=0,r=0;for(const a of e){const e=a.numFeatures;i+=e,r+=e*s(a);}return this._fullRatio=Math.min(1,this.maximumNumberOfFeatures/i),this._farRatio=this.maximumNumberOfFeatures/r,this.scheduleUpdated(),s}maximumFeaturesUpdated(e,t){e!==t&&(t>e&&this.featureTiles.forEach((e=>{if(!e.featuresMissing)return;const t=this.maximumFeaturesForTile(e);e.features&&(e.features.length>=t||5===e.fetchStatus)||(this.cancelFetchTile(e),this.resetFetchTile(e));})),this.setDirty());}addTile(e){const t=new g(e);return this.featureTiles.set(t.id,t),this.resetFetchTile(t),this.referenceDisplayingFeaturesFromRelatedTiles(t),t}referenceDisplayingFeaturesFromRelatedTiles(e){const t=e.descriptor.resolution;this.featureTiles.forEach((s=>{if(!(t$1(s.displayingFeatures)||e===s||e.descriptor.lij&&s.descriptor.lij&&!m(e.descriptor.lij,s.descriptor.lij))){t$1(e.displayingFeatures)&&(e.displayingFeatures=[]),e.descriptor.extent&&s.descriptor.extent&&(t$1(e.extentIncludingBorrowedFeatures)&&(e.extentIncludingBorrowedFeatures=e$2(e.descriptor.extent)),h$1(e.extentIncludingBorrowedFeatures,s.descriptor.extent,e.extentIncludingBorrowedFeatures));for(const i of s.displayingFeatures){e.displayingFeatures.push(i);const s=this.displayingFeatureReferences.get(O$2(i,this.objectIdField));s.ref(s.feature,t),this.numDisplayingFeatureReferences++;}}})),e.featureLimit=r(e.displayingFeatures)?e.displayingFeatures.length:0;}removeTile(e){this.clearTile(e),this.featureTiles.delete(e.id);}resetFetchTile(e){e.filtered=!e.intersects(this.filterExtent),e.filtered?e.needsFetching&&(e.fetchStatus=4):e.fetchStatus=0;}cancelFetchTile(e){const t=e.requestController;r(t)&&(e.requestController=null,e.resetFetching(),t.abort());}async fetchTileCount(e,t){return e.numFeatures=await this.fetchCount(e,t),this.updateRatio(this.getListOfTiles()),3===e.fetchStatus?1:0}async fetchTile(e,t){const s=this.maximumFeaturesForTile(e);if(s<=0)return S$1(e);const i=this.getMaxRecordCount(e),r=Math.ceil(s/i);if(q(e)||!this.context.capabilities.supportsMaxRecordCountFactor||e.numFeatures<=s&&r>b.MAX_MAX_RECORD_COUNT_FACTOR)return this.fetchPagedTile(e,t);const a=this.createQuery(e);if(a.maxRecordCountFactor=Math.ceil(s/i),e.isRefetching&&e.features&&e.features.length>0){const t=Math.ceil(e.features.length/(1-e.emptyFeatureRatio)/i);a.maxRecordCountFactor=Math.max(t+1,a.maxRecordCountFactor);}const{features:n,exceededTransferLimit:o,fields:u}=await this.queryFeatures(a,t),l=o?a.maxRecordCountFactor>=b.MAX_MAX_RECORD_COUNT_FACTOR?5:4:5;return await this._frameTask.schedule((()=>{e.featuresMissing=n.length<e.numFeatures||o;const t=this._removeEmptyFeatures(n);e.setFeatures(n,t,N(u));}),t),this.invalidateCounts(),l}async fetchCount(e,t){return this.context.query.queryFeatureCount(this.createFeatureCountQuery(e),{signal:t})}async fetchPagedTile(e,t){let s,i=0,r=0,a=0,n=this.maximumFeaturesForTile(e)-a;const o=this.getMaxRecordCount(e);let l=null;for(;;){const h=this.createQuery(e),c=this.setPagingParameters(h,i,n,o),{features:d,exceededTransferLimit:p,fields:f}=await this.queryFeatures(h,t);if(await this._frameTask.schedule((()=>{c&&(i+=e$1(h.num)),a+=d.length,r+=this._removeEmptyFeatures(d),e.featuresMissing=i<e.numFeatures||p,s=s?s.concat(d):d,l=Q(l,f),e.setFeatures(s,r,l);}),t),this.invalidateCounts(),this.setDirty(),n=this.maximumFeaturesForTile(e)-a,!c||!p||n<=0)return p?4:5}}createFeatureCountQuery(e){const t=this.createQuery(e);return this.context.capabilities.supportsCacheHint&&(t.resultType=void 0,t.cacheHint=!0),t}createQuery(e){const t=this.context.createQuery(),s=e.descriptor.extent;if(s){const e=this.context.tilingScheme.spatialReference;t.geometry=m$1(s,e);}return this.setResolutionParams(t,e),this.useTileQuery(e)?t.resultType="tile":this.context.capabilities.supportsCacheHint&&(t.cacheHint=!0),t}setPagingParameters(e,t,s,i){return !!this.context.capabilities.supportsPagination&&(e.start=t,s>0&&this.context.capabilities.supportsMaxRecordCountFactor?(e.maxRecordCountFactor=Math.ceil(s/i),e.num=Math.min(e.maxRecordCountFactor*i,s)):e.num=Math.min(i),!0)}getEffectiveTileResolution(e){if(null==e.descriptor.resolution)return null;const t=1===this.context.viewingMode?this.context.tilingScheme.resolutionAtLevel(3):1/0;return Math.min(e.descriptor.resolution,t)/this.lodFactor}get supportsResolution(){return this.context.capabilities.supportsMultipleResolutions&&"point"!==this.context.geometryType}setResolutionParams(e,t){if(!this.supportsResolution)return;const s=this.getEffectiveTileResolution(t);null!=s&&(this.context.capabilities.supportsQuantization?e.quantizationParameters=new a$1({mode:"view",originPosition:"upper-left",tolerance:s,extent:this.context.fullExtent}):"polyline"===this.context.geometryType&&(e.maxAllowableOffset=s));}_removeEmptyFeatures(e){const t=e.length;for(let s=0;s<e.length;){const t=e[s];S$3(t.geometry)?++s:(e[s]=e[e.length-1],--e.length);}return t-e.length}needsNumFeatures(e){return this.useTileCount&&e.needsFeatureCount&&!q(e)}getMaxRecordCount(e){const{tileMaxRecordCount:t,maxRecordCount:s}=this.context;return this.useTileQuery(e)&&r(t)&&t>0&&this.context.capabilities.supportsResultType?t:r(s)&&s>0?s:k}useTileQuery(e){return (!q(e)||!this.context.capabilities.supportsCacheHint)&&this.context.capabilities.supportsResultType}_handleRequest(e,t,s,i){e.fetchStatus=e.needsRefetching?3:2,e.requestController=s;let r=!1;t.then((t=>{e.requestController=null,e.fetchStatus=t;})).catch((t=>{e.requestController===s&&(e.requestController=null,e.fetchStatus=4),d$1(t)?r=!0:i(t);})).then((()=>{r||this.setDirty(),this.scheduleUpdated();}));}scheduleUpdated(){this.handles&&!this.handles.has("scheduleUpdated")&&this.handles.add(v((()=>{this.handles.remove("scheduleUpdated"),this.updated();})),"scheduleUpdated");}showTile(e){if(r(e.displayingFeatures)&&!e.needsDisplayUpdate)return !1;const t=e.features;if(0===e.featureLimit||!t){const t=r(e.displayingFeatures)&&e.displayingFeatures.length>0;return this.hideTileFeatures(e),e.displayingFeatures=[],t}const s=e.descriptor.resolution,i=this.changes.updates,r$1=this.changes.adds,n=Math.min(e.featureLimit,t.length);e.featureLimit=n;for(let a=0;a<n;++a){const e=t[a],n=O$2(e,this.objectIdField),o=this.displayingFeatureReferences.get(n);if(o){const t=o.ref(e,s);t.oldVersion!==t.newVersion&&(i.removes.push(t.oldVersion),i.adds.push(t.newVersion));}else this.displayingFeatureReferences.set(n,new this.FeatureReferenceClass(e,s)),r$1.push(e);this.numDisplayingFeatureReferences++;}return this.hideTileFeatures(e),this.applyChanges(),e.displayingFeatures=t.slice(0,n),!0}hideTile(e){this.cancelFetchTile(e),this.hideTileFeatures(e);}hideTileFeatures(e){if(t$1(e.displayingFeatures))return;const t=this.changes.updates,s=this.changes.removes;for(const i of e.displayingFeatures){const r=O$2(i,this.objectIdField),a=this.displayingFeatureReferences.get(r);if(!a)continue;const n=a.unref(e.descriptor.resolution);this.numDisplayingFeatureReferences--,n?n.oldVersion!==n.newVersion&&(null==n.newVersion?(this.displayingFeatureReferences.delete(r),s.push(n.oldVersion)):(t.adds.push(n.newVersion),t.removes.push(n.oldVersion))):console.error("Hiding unreferenced feature");}this.applyChanges(),e.displayingFeatures=null;}applyChanges(){const e=this.changes.updates;e.removes.length>0&&(this.features.removeMany(e.removes),e.removes.length=0),e.adds.length>0&&(this.features.addMany(e.adds),e.adds.length=0);const t=this.changes.adds,s=this.changes.removes,i=Math.min(t.length,s.length);let r=0;for(;r<i;){const e=Math.min(r+H,i);this.features.addMany(t.slice(r,e)),this.features.removeMany(s.slice(r,e)),r=e;}t.length>i&&this.features.addMany(0===r?t:t.slice(r)),s.length>i&&this.features.removeMany(0===r?s:s.slice(r)),t.length=0,s.length=0;}clearTile(e){if(this.hideTile(e),e.features&&r(this.context.memoryCache)){const t=16+e.estimatedSize;this.context.memoryCache.put(e.id,e.cache,t);}e.setFeatures(null,0,null),this.invalidateCounts();}invalidateCounts(){this.notifyChange("totalVertices"),this.notifyChange("totalFeatures"),this.notifyChange("memoryForUnusedFeatures");}getListOfTiles(){return Array.from(this.featureTiles.values())}get storedFeatures(){return this.getListOfTiles().reduce(((e,t)=>e+(t.features?t.features.length:0)),0)}maximumFeaturesForTile(e){const t=e.hasPreciseFeatureCount?e.numFeatures:1/0,s=e.hasPreciseFeatureCount?t:this.maximumNumberOfFeatures,i=this._fullRatio<1?this._farRatio:1;return Math.min(Math.ceil(s*i/(1-e.emptyFeatureRatio)),t)}get test(){return {process:e=>this.runTask(e),getFeatureTileById:e=>this.featureTiles.get(e),forEachFeatureTile:e=>this.featureTiles.forEach(e)}}};function q(e){return "dummy-tile-full-extent"===e.id}function I$1(e){let t=0;for(const s of e)s.features&&s.features.length>0&&s.alive&&(t=Math.max(t,s.descriptor.lij[0]));return t}function U$1(e){const t=e.capabilities.query;return {supportsMultipleResolutions:A$1(e),supportsPagination:!(!t||!t.supportsPagination),supportsResultType:!(!t||!t.supportsResultType),supportsCacheHint:!(!t||!t.supportsCacheHint),supportsQuantization:!(!t||!t.supportsQuantization),supportsQuantizationEditMode:!(!t||!t.supportsQuantizationEditMode),supportsMaxRecordCountFactor:!(!t||!t.supportsMaxRecordCountFactor),supportsFormatPBF:!(!t||!t.supportsFormatPBF)}}function A$1(e){switch(e.geometryType){case"polyline":return !0;case"polygon":return e.capabilities&&e.capabilities.query&&e.capabilities.query.supportsQuantization;default:return !1}}function S$1(e){return e.setFeatures([],0,null),e.featuresMissing=!1,4}function N(e){return t$1(e)?new Set:new Set(e.map((e=>e.name)))}function Q(e,t){if(t$1(e)||t$1(t))return N(t);const s=new Set;for(const{name:i}of t)e.has(i)&&s.add(i);return s}e([d({constructOnly:!0})],P.prototype,"features",void 0),e([d()],P.prototype,"tileDescriptors",void 0),e([d({value:1/0})],P.prototype,"maximumNumberOfFeatures",null),e([d({value:1})],P.prototype,"memoryFactor",null),e([d({value:1})],P.prototype,"lodFactor",null),e([d()],P.prototype,"useTileCount",null),e([d({readOnly:!0})],P.prototype,"updating",void 0),e([d({readOnly:!0})],P.prototype,"updatingTotal",void 0),e([d({readOnly:!0})],P.prototype,"updatingRemaining",void 0),e([d({readOnly:!0})],P.prototype,"expectedFeatureDiff",void 0),e([d({readOnly:!0})],P.prototype,"memoryForUnusedFeatures",null),e([d({readOnly:!0})],P.prototype,"maximumNumberOfFeaturesExceeded",void 0),e([d({constructOnly:!0})],P.prototype,"maximumNumberOfFeaturesExceededThrottle",void 0),e([d({readOnly:!0})],P.prototype,"totalVertices",null),e([d({readOnly:!0})],P.prototype,"totalFeatures",null),e([d()],P.prototype,"filterExtent",null),e([d({constructOnly:!0})],P.prototype,"context",void 0),P=e([i$1("esri.views.3d.layers.support.FeatureTileFetcher3D")],P);const k=2e3,L=u(),V$1=u(),z=6e5,H=200;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const h=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];class l{constructor(e,t,s){this.loadingGraphics=new Map,this.loadedGraphics=new Map,this.pendingGraphics=new Map,this._enabled=!0,this.tileFetcher=e,this.view=s,this.tilingScheme=new M(t),this.loadedSymbols=h.map((e=>new h$2(new f$1({material:{color:[e[0],e[1],e[2],.6]},outline:{color:"black",size:1}})))),this.loadingSymbols=[new h$2(new f$1({material:{color:[200,200,200,.4]},outline:{color:[30,30,30],size:1}}))],this.pendingSymbols=[new h$2(new f$1({material:{color:[100,100,100,.4]},outline:{color:[30,30,30],size:1}}))],this.dataExtentSymbol=new h$2(new f$1({material:{color:[0,0,0,0]},outline:{color:"green",size:4}}));}destroy(){this.enabled=!1;}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this.update();}update(){this._enabled?(this.synchronizeMaps(this.loadingGraphics,{filter:e=>e.isFetching,symbols:this.loadingSymbols}),this.synchronizeMaps(this.loadedGraphics,{filter:e=>!e.isFetching,symbols:this.loadedSymbols}),this.synchronizeMaps(this.pendingGraphics,{filter:e=>!e.isFetching,symbols:this.pendingSymbols}),this.showDataExtent(this.tileFetcher.filterExtent)):(this.loadingGraphics.forEach((e=>{this.view.graphics.removeMany(e);})),this.loadingGraphics.clear(),this.loadedGraphics.forEach((e=>{this.view.graphics.removeMany(e);})),this.loadedGraphics.clear(),this.pendingGraphics.forEach((e=>{this.view.graphics.removeMany(e);})),this.pendingGraphics.clear(),this.dataExtentGraphic&&(this.view.graphics.remove(this.dataExtentGraphic),this.dataExtentGraphic=null));}showDataExtent(i){if(this.dataExtentGraphic&&(this.view.graphics.remove(this.dataExtentGraphic),this.dataExtentGraphic=null),!i)return;const s=v$1.fromExtent(i);this.dataExtentGraphic=new h$3({geometry:s,symbol:this.dataExtentSymbol}),this.view.graphics.add(this.dataExtentGraphic);}synchronizeMaps(t,i){const a=[];t.forEach(((e,t)=>{const s=this.tileFetcher.test.getFeatureTileById(t);s&&i.filter(s)||(this.view.graphics.removeMany(e),a.push(t));})),a.forEach((e=>t.delete(e))),this.tileFetcher.test.forEachFeatureTile((a=>{if(i.filter(a)&&!t.has(a.id)){const[r,h,l]=a.descriptor.lij;this.tilingScheme.ensureMaxLod(r);const n=this.tilingScheme.getExtentGeometry(r,h,l),c=[new h$3({geometry:n,symbol:i.symbols[r%i.symbols.length]}),new h$3({geometry:n.center,symbol:new L$1({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new y({text:`${r}/${h}/${l}`,halo:{color:"white",size:1/.75},material:{color:"black"},size:16})]})})];t.set(a.id,c),this.view.graphics.addMany(c);}}));}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const D=s$2.getLogger("esri.layers.graphics.controllers.FeatureTileController3D");let S=class extends(n$1(p$1)){constructor(e){super(e),this.type="feature-tile-3d",this.watchUpdatingTracking=new l$2,this.serviceDataExtent=null,this.serviceDataCount=A.NO_SERVICE_DATA_COUNT,this.vertexLimitExceeded=!1,this.displayFeatureLimit=null,this.suspended=!1,this.tileFetcher=null,this.handles=new u$1,this.fetchDataInfoPromise=null,this.fetchDataInfoAbortController=null,this.lifeCycleAbortController=new AbortController;}set extent(e){if(e&&!e.spatialReference.equals(this.layerView.view.spatialReference))return void D.error("#extent=","extent needs to be in the same spatial reference as the view");const t=this._get("extent");if(t===e)return;if(t&&e&&t.equals(e))return;const i=e?e.clone():null;this._set("extent",i);}get updating(){return !!(r(this.tileFetcher)&&this.tileFetcher.updating||null!=this.fetchDataInfoPromise||"tiles"===this.mode&&this.layerView.view.featureTiles&&this.layerView.view.featureTiles.updating||this.watchUpdatingTracking&&this.watchUpdatingTracking.updating)}get updatingTotal(){return this.updating&&r(this.tileFetcher)?this.tileFetcher.updatingTotal:0}get updatingRemaining(){return this.updating&&r(this.tileFetcher)?this.tileFetcher.updatingRemaining:0}get expectedFeatureDiff(){return this.updating&&r(this.tileFetcher)?this.tileFetcher.expectedFeatureDiff:0}get memoryForUnusedFeatures(){return r(this.tileFetcher)?this.tileFetcher.memoryForUnusedFeatures:0}get maximumNumberOfFeaturesExceeded(){return !(!r(this.tileFetcher)||!this.tileFetcher.maximumNumberOfFeaturesExceeded)}get maximumNumberOfFeatures(){return r(this.displayFeatureLimit)?this.displayFeatureLimit.maximumNumberOfFeatures:0}set maximumNumberOfFeatures(e){e!==this.maximumNumberOfFeatures&&(null==e?this._clearOverride("maximumNumberOfFeatures"):this._override("maximumNumberOfFeatures",e));}get hasMaximumNumberOfFeaturesOverride(){return this._isOverridden("maximumNumberOfFeatures")}get mode(){var e,t;const i=this.layerView.layer;if("feature"===i.type&&r(i.infoFor3D))return "snapshot";if(!1===(null==(e=this.layerView.view.qualitySettings)||null==(t=e.graphics3D)?void 0:t.snapshotAvailable)||this.serviceDataCount===A.NO_SERVICE_DATA_COUNT||this.vertexLimitExceeded)return "tiles";const r$1=this.layerView.view,s=r$1&&r$1.featureTiles,a=s&&s.tilingScheme;if(i&&i.minScale&&this.serviceDataExtent&&a){const e=this.approximateExtentSizeAtScale(i.minScale,a);if((this.serviceDataExtent.width/e+this.serviceDataExtent.height/e)/2>A.MAX_SNAPSHOT_MIN_SCALE_FACTOR)return "tiles"}return !this.maximumNumberOfFeatures||this.serviceDataCount<=this.maximumNumberOfFeatures?"snapshot":"tiles"}get maxTotalSnapshotVertices(){const e=this._get("maxTotalSnapshotVertices")||0,t="snapshot"===this.mode&&r(this.tileFetcher)&&this.tileFetcher.totalVertices||0;return Math.max(e,t)}approximateExtentSizeAtScale(e,t){const i=this.layerView.view,r=Math.ceil((i.width/t.pixelSize+i.height/t.pixelSize)/2),s=t.levels[0];return r*((s.tileSize[0]/(s.scale/e)+s.tileSize[1]/(s.scale/e))/2)}get tileDescriptors(){return "snapshot"===this.mode?new S$4([{id:"dummy-tile-full-extent",lij:[0,0,0]}]):this.layerView.view.featureTiles?this.layerView.view.featureTiles.tiles:new S$4}get test(){return {fetchDataInfoPromise:this.fetchDataInfoPromise,tileFetcher:this.tileFetcher}}initialize(){this.watchUpdatingTracking.add(this,"vertexLimitInfo",(()=>this.watchUpdatingTracking.addPromise(this.updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal)))),this.watchUpdatingTracking.add(this,"mode",(()=>this.modeChanged()),2),this.addResolvingPromise(Promise.resolve().then((()=>this.verifyCapabilities())).then((()=>this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo()))).then((()=>this.initializeTileFetcher())));}verifyCapabilities(){const e=this.layerView.layer;if(!e.get("capabilities.operations.supportsQuery")&&"ogc-feature"!==e.type)throw new s$3("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",{layer:e})}destroy(){this.cancelFetchServiceDataInfo(),this.tileFetcher=l$1(this.tileFetcher),this.handles=l$1(this.handles),this.tilesHandle=s$4(this.tilesHandle),this.lifeCycleAbortController&&(this.lifeCycleAbortController.abort(),this.lifeCycleAbortController=null),this.watchUpdatingTracking.destroy(),this._set("watchUpdatingTracking",null);}suspend(){this.suspended||(this.suspended=!0,r(this.tileFetcher)&&this.tileFetcher.suspend());}resume(){this.suspended&&(this.suspended=!1,r(this.tileFetcher)&&this.tileFetcher.resume());}restart(){const e=()=>{r(this.tileFetcher)&&this.tileFetcher.restart();};this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo().then(e,e));}refetch(){const e=()=>{r(this.tileFetcher)&&this.tileFetcher.refetch();};this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo().then(e,e));}initializeTileFetcher(){const e=this.layerView.view;if(!e)return;const t=a$2(e.featureTiles,"tilingScheme",this.lifeCycleAbortController.signal);this.watchUpdatingTracking.addPromise(t),t.then((()=>{const{layerView:t,tileDescriptors:i}=this,r=t.layer,s=new P({context:this.context,filterExtent:this.extent,tileDescriptors:i,features:this.graphics});this.tileFetcher=s,this.suspended?this.tileFetcher.suspend():this.tileFetcher.resume();const a=this.layerView.view.resourceController;a&&(this.handles.add(a.memoryController.events.on("quality-changed",(e=>{s.memoryFactor=e;}))),this.tileFetcher.memoryFactor=a.memoryController.memoryFactor);const o="polygon"===this.context.geometryType?"polygonLodFactor":"polyline"===this.context.geometryType?"polylineLodFactor":null;o&&this.handles.add(i$2(this.layerView.view,"qualitySettings.graphics3D."+o,(e=>{s.lodFactor=e||1;})));const n=e=>{s.maximumNumberOfFeatures=e,s.useTileCount=this.serviceDataCount>e;},l$1=e=>s.useTileCount=e>this.maximumNumberOfFeatures;this.watchUpdatingTracking.add(r,"createQueryVersion",(()=>this.dataFilterChanged())),this.watchUpdatingTracking.add(t,"availableFields",((e,t)=>this.availableFieldsChanged(t,e))),this.watchUpdatingTracking.add(t,"requiredFields",((e,t)=>this.requiredFieldsChanged(t,e))),this.handles.add([r.on("apply-edits",(e=>this.applyEdits(e))),this.watch("extent",(e=>s.filterExtent=e),!0),this.watch("tileDescriptors",(e=>s.tileDescriptors=e),!0),i$2(this,"maximumNumberOfFeatures",n,!0),i$2(this,"serviceDataCount",l$1,!0),i$2(I$3,"FEATURE_TILE_FETCH_SHOW_TILES",(t=>{t&&s&&!s.debugger?(s.debugger=new l(s,e.featureTiles.tilingScheme.toTileInfo(),e),s.debugger.update()):!t&&this.tileFetcher&&s.debugger&&(s.debugger.destroy(),s.debugger=null);}))]),this.supportsExceedsLimitQuery||this.watchUpdatingTracking.add(this,"maxTotalSnapshotVertices",(()=>this.watchUpdatingTracking.addPromise(this.updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal))));})).catch((()=>{}));}modeChanged(){switch(this.mode){case"tiles":this.tilesHandle||(this.tilesHandle=this.layerView.view.featureTiles.addClient());break;default:D.warn("Unhandled feature layer mode "+this.mode);case"snapshot":r(this.tilesHandle)&&(this.tilesHandle.remove(),this.tilesHandle=null);}}dataFilterChanged(){this._set("maxTotalSnapshotVertices",0),this.notifyChange("maxTotalSnapshotVertices"),this.refetch();}applyEdits(e){t$1(this.tileFetcher)||this.tileFetcher.applyEdits(e).then((e=>{e&&(e.deletedFeatures.length||e.updatedFeatures.length||e.addedFeatures.length)&&this.watchUpdatingTracking.addPromise(this.updateServiceDataExtent(this.lifeCycleAbortController.signal));})).catch((e=>{if(!d$1(e))throw e}));}availableFieldsChanged(e,t){r(this.tileFetcher)&&U(this.tileFetcher.availableFields,t)&&this.refetch();}requiredFieldsChanged(e,t){r(this.tileFetcher)&&U(this.tileFetcher.availableFields,t)&&this.restart();}createVertexLimitExceededQuery(e){const t=this.layerView.layer,i=t.createQuery();return i.outStatistics=[new m$2({statisticType:"exceedslimit",maxVertexCount:e,outStatisticFieldName:"exceedslimit",maxPointCount:1e8,maxRecordCount:1e8})],t.capabilities.query.supportsCacheHint&&(i.cacheHint=!0),i}createDataInfoQuery(){const e=this.layerView.layer,t=e.createQuery();return t.outSpatialReference=this.layerView.view.spatialReference,e.capabilities.query.supportsCacheHint&&(t.cacheHint=!0),t}fullExtentIsAccurate(){const e=this.layerView.layer;if(e.definitionExpression)return !1;switch(e.type){case"feature":return y$1(e.url);case"csv":case"geojson":case"ogc-feature":case"wfs":return !0;default:return}}async updateServiceDataExtent(e){try{await this.tryUpdateServiceDataExtent(e);}catch(t){d$1(t)||this._set("serviceDataExtent",l$3(this.layerView.fullExtentInLocalViewSpatialReference));}}async tryUpdateServiceDataExtent(e){const t=this.layerView,i=t.layer,r$1=i.capabilities.query.supportsExtent,s=l$3(t.fullExtentInLocalViewSpatialReference),a=i.fullExtent,n=this.fullExtentIsAccurate(),h=this.serviceDataCount;if(r$1&&h<=A.MAX_FEATURE_COUNT_FOR_EXTENT&&(!s||!n)&&"queryExtent"in i){const t=this.createDataInfoQuery(),r=await i.queryExtent(t,{timeout:A.QUERY_EXTENT_TIMEOUT,signal:e});this._set("serviceDataExtent",r.extent);}else if(s)this._set("serviceDataExtent",s);else if(r(a)){const r="portalItem"in i?i.portalItem:null,s=await l$4(a,t.view.spatialReference,r,e);this._set("serviceDataExtent",s);}else this._set("serviceDataExtent",null);}async updateServiceDataCount(e){const t=this.layerView.layer;if(!("queryFeatureCount"in t))return void this._set("serviceDataCount",A.NO_SERVICE_DATA_COUNT);const r=await a$3(t.queryFeatureCount(this.createDataInfoQuery(),{timeout:A.QUERY_STATISTICS_TIMEOUT,signal:e}));if(!0===r.ok)this._set("serviceDataCount",r.value);else {if(d$1(r.error))throw r.error;this._set("serviceDataCount",A.NO_SERVICE_DATA_COUNT);}}get vertexLimitInfo(){if(t$1(this.displayFeatureLimit)||t$1(this.displayFeatureLimit.averageSymbolComplexity))return null;const{averageSymbolComplexity:e,maximumTotalNumberOfPrimitives:t}=this.displayFeatureLimit,{primitivesPerCoordinate:i,primitivesPerFeature:r}=e,s=this._get("vertexLimitInfo");return t$1(s)||s.maximumTotalNumberOfPrimitives!==t||s.primitivesPerCoordinate!==i||s.primitivesPerFeature!==r?{primitivesPerCoordinate:i,primitivesPerFeature:r,maximumTotalNumberOfPrimitives:t}:s}get supportsExceedsLimitQuery(){const e=this.layerView.layer;return e.capabilities&&e.capabilities.operations&&e.capabilities.operations.supportsExceedsLimitStatistics}get minimumNumberOfVerticesForGeometry(){switch(this.layerView.layer.geometryType){case"point":case"multipoint":return 1;case"polygon":return 4;case"polyline":return 2;case"multipatch":case"mesh":return 3;default:return 0}}async updateVertexLimitExceeded(e,t){const r$1=this.vertexLimitInfo;if(t$1(r$1))return void this._set("vertexLimitExceeded",!1);const s=r$1.primitivesPerFeature<=0,a=this.minimumNumberOfVerticesForGeometry>1;if(!s&&!a)return void this._set("vertexLimitExceeded",!1);const{primitivesPerFeature:o,primitivesPerCoordinate:n,maximumTotalNumberOfPrimitives:h}=r$1;let c;0!==o&&r(e)&&await e;const d=this.serviceDataCount,p=d!==A.NO_SERVICE_DATA_COUNT;if(c=p?Math.ceil((h-d*o)/(n||1)):Math.ceil(h/(n||1)),a&&(c=Math.min(c,V)),p&&this.minimumNumberOfVerticesForGeometry*d>c)return void this._set("vertexLimitExceeded",!0);if(!this.supportsExceedsLimitQuery)return void this._set("vertexLimitExceeded",this.maxTotalSnapshotVertices>c);const f=await a$3(this.layerView.layer.queryFeatures(this.createVertexLimitExceededQuery(c),{timeout:A.QUERY_STATISTICS_TIMEOUT,signal:t}));if(!1===f.ok){if(d$1(f.error))throw f.error;return void this._set("vertexLimitExceeded",!1)}const y=f.value.features[0];y&&y.attributes?this._set("vertexLimitExceeded",!!y.attributes.exceedslimit):this._set("vertexLimitExceeded",!1);}async fetchServiceDataInfo(){this.cancelFetchServiceDataInfo();let e=new AbortController;const t=e.signal,i=this.updateServiceDataCount(t),r=T([i,this.updateVertexLimitExceeded(i,t)]),s=r.then((()=>this.updateServiceDataExtent(t))).catch((e=>{d$1(e)||D.error("#fetchServiceDataInfo()",e);})).then((()=>{s===this.fetchDataInfoPromise&&(this.fetchDataInfoPromise=null,this.fetchDataInfoAbortController=null),e=null;}));return e&&(this.fetchDataInfoPromise=s),this.fetchDataInfoAbortController=e,r.then((()=>{}),(()=>{}))}cancelFetchServiceDataInfo(){const e=this.fetchDataInfoAbortController;e&&(this.fetchDataInfoAbortController=null,this.fetchDataInfoPromise=null,e.abort());}get debug(){return {storedFeatures:r(this.tileFetcher)?this.tileFetcher.storedFeatures:0,totalFeatures:r(this.tileFetcher)?this.tileFetcher.totalFeatures:0,totalVertices:r(this.tileFetcher)?this.tileFetcher.totalVertices:0}}};e([d({readOnly:!0})],S.prototype,"type",void 0),e([d({constructOnly:!0})],S.prototype,"graphics",void 0),e([d({constructOnly:!0})],S.prototype,"layerView",void 0),e([d({constructOnly:!0})],S.prototype,"context",void 0),e([d()],S.prototype,"extent",null),e([d()],S.prototype,"updating",null),e([d({readOnly:!0})],S.prototype,"watchUpdatingTracking",void 0),e([d()],S.prototype,"updatingTotal",null),e([d()],S.prototype,"updatingRemaining",null),e([d()],S.prototype,"expectedFeatureDiff",null),e([d()],S.prototype,"memoryForUnusedFeatures",null),e([d()],S.prototype,"maximumNumberOfFeaturesExceeded",null),e([d({readOnly:!0})],S.prototype,"serviceDataExtent",void 0),e([d({readOnly:!0})],S.prototype,"serviceDataCount",void 0),e([d({readOnly:!0})],S.prototype,"vertexLimitExceeded",void 0),e([d()],S.prototype,"displayFeatureLimit",void 0),e([d({type:Number})],S.prototype,"maximumNumberOfFeatures",null),e([d({readOnly:!0})],S.prototype,"mode",null),e([d({readOnly:!0})],S.prototype,"maxTotalSnapshotVertices",null),e([d({readOnly:!0,dependsOn:["mode"]})],S.prototype,"tileDescriptors",null),e([d()],S.prototype,"tileFetcher",void 0),e([d()],S.prototype,"fetchDataInfoPromise",void 0),e([d({readOnly:!0})],S.prototype,"vertexLimitInfo",null),S=e([i$1("esri.layers.graphics.controllers.FeatureTileController3D")],S);const _=1e4,O=12e3,I=1e4,V=5e6;function U(e,t){if(!t)return !1;for(const i of t)if(!e.has(i))return !0;return !1}var A;!function(e){function t(){e.MAX_FEATURE_COUNT_FOR_EXTENT=_,e.QUERY_STATISTICS_TIMEOUT=O,e.QUERY_EXTENT_TIMEOUT=I;}e.NO_SERVICE_DATA_COUNT=1/0,e.MAX_SNAPSHOT_MIN_SCALE_FACTOR=5,e.reset=t;}(A||(A={})),A.reset();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const E=E=>{let b$1=class extends E{constructor(){super(...arguments),this.controller=null,this.updatePolicy=1,this.suspendResumeExtentMode="computed",this.slicePlaneEnabled=!1,this.drapeSourceType=1,this.fullExtentInLocalViewSpatialReference=null,this.suspendResumeExtent=null,this._controllerCreated=!1,this.clippingExtent=null,this.supportsHeightUnitConversion=!0,this.pendingController=null,this.queryEngine=null;}initialize(){const e=this.layer;"isTable"in e&&e.isTable?this.addResolvingPromise(Promise.reject(new s$3("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:e}))):(this._set("graphics3d",new v$2({owner:this,layer:e,frustumVisibilityEnabled:!0,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentVisibilityEnabled:!0,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!0,preferredUpdatePolicy:this.updatePolicy,suspendResumeExtentMode:this.suspendResumeExtentMode,updateClippingExtent:e=>this.updateClippingExtent(e)})),this.updatingHandles.add(this,"updatePolicy",(e=>this.graphics3d.graphicsCore.preferredUpdatePolicy=e)),this.updatingHandles.add(this,"suspendResumeExtentMode",(e=>{this.graphics3d.suspendResumeExtentMode=e;})),this.addResolvingPromise(this.graphics3d.setup().then((()=>this.validateGeometryType())).then((()=>this.queryEngine=new p$2({layerView:this,priority:f.FEATURE_QUERY_ENGINE}))).then((()=>l$5(this))).then((e=>this.fullExtentInLocalViewSpatialReference=e)).then((()=>this.initializeController()))),this.notifyChange("updating"));}destroy(){this.destroyPendingController(),this.controller=l$1(this.controller),this._set("graphics3d",l$1(this.graphics3d)),this.queryEngine=l$1(this.queryEngine),this.loadedGraphics=null;}destroyPendingController(){this.pendingController&&(this.pendingController.destroy(),this.pendingController=null);}get legendEnabled(){var e,t;return this.canResume()&&!(null!=(e=this.graphics3d)&&null!=(t=e.frustumVisibility)&&t.suspended)}notifyGraphicGeometryChanged(e){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(e);}notifyGraphicVisibilityChanged(e){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(e);}getRenderingInfo(e,t,r$1){const s=a$4(e,{renderer:t,arcade:r$1});if(r(s)&&s.color){const e=s.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255;}return s}async getRenderingInfoAsync(e,t,r,i){return s$5(e,{renderer:t,arcade:r,...i})}getGraphicFromGraphicUid(e){var t;let r=null;return null==(t=this.loadedGraphics)||t.forEach((t=>{t.uid===e&&(r=c$3(t,this.layer));})),r}get graphics3DGraphics(){return this.graphics3d?this.graphics3d.graphicsCore.graphics3DGraphics:null}get graphics3DGraphicsByObjectID(){return this.graphics3d?this.graphics3d.graphicsCore.graphics3DGraphicsByObjectID:null}get symbolUpdateType(){return this.graphics3d?this.graphics3d.graphicsCore.symbolUpdateType:null}whenGraphicBounds(e,t){return this.graphics3d?this.graphics3d.graphicsCore.whenGraphicBounds(e,t):null}computeAttachmentOrigin(e,t){return this.graphics3d?this.graphics3d.graphicsCore.computeAttachmentOrigin(e,t):null}getSymbolLayerSize(e,t){return this.graphics3d?this.graphics3d.graphicsCore.getSymbolLayerSize(e,t):null}queryFeatures(e,t){return this.queryEngine.executeQuery(this._ensureQuery(e),m$3(t,"signal"))}queryObjectIds(e,t){return this.queryEngine.executeQueryForIds(this._ensureQuery(e),m$3(t,"signal"))}queryFeatureCount(e,t){return this.queryEngine.executeQueryForCount(this._ensureQuery(e),m$3(t,"signal"))}queryExtent(e,t){return this.queryEngine.executeQueryForExtent(this._ensureQuery(e),m$3(t,"signal"))}_ensureQuery(e){return t$1(e)?this.createQuery():b.from(e)}highlight(e){return this.graphics3d.highlight(e,this.layer.objectIdField)}maskOccludee(e){return this.graphics3d.maskOccludee(e)}canResume(){return super.canResume()&&(!this.graphics3d||!this.graphics3d.suspended)}getSuspendInfo(){const e=super.getSuspendInfo();return this.graphics3d?{...e,...this.graphics3d.suspendInfo}:e}isUpdating(){var e,t;return !(!this.graphics3d||this.graphics3d.destroyed)&&!(this._controllerCreated&&(null==(e=this.controller)||!e.updating)&&null!=(t=this.view.basemapTerrain)&&t.ready&&!this.graphics3d.updating)}async initializeController(){const e=this.createController();this.pendingController=e,await e.when(),this.setControllerWhenInitialized(e);}async setControllerWhenInitialized(e){try{await this.when();}catch(t){}this._controllerCreated=!0,this.notifyChange("updating"),this.isResolved()&&!this.destroyed?(await d$2(this.view,"basemapTerrain.ready"),this.beforeSetController(e),this.pendingController=null,this.controller=e,this.loadedGraphics=e.graphics,this.notifyChange("updating")):this.destroyPendingController();}updateClippingExtent(e){if(this.clippingExtent=e,!this.controller)return !1;switch(this.controller.type){case"stream":return !1;case"feature-tile-3d":return this.controller.extent=e,!0}}validateGeometryType(){switch(this.layer.geometryType){case"multipatch":case"multipoint":return Promise.reject(new s$3("featurelayerview3d:unsupported-geometry-type","Unsupported geometry type ${geometryType}",{geometryType:this.layer.geometryType}))}}_getResourceInfo(){const e=this.controller&&this.controller instanceof S?this.controller:null;return {displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:e?e.maximumNumberOfFeatures:-1,totalNumberOfFeatures:e?e.serviceDataCount:-1,nodes:0,core:this.graphics3d.graphicsCore.performanceInfo,elevationUpdating:this.graphics3d.elevationAlignment.updating,visibilityFrustum:!this.graphics3d.frustumVisibility.suspended,visibilityScale:!this.graphics3d.scaleVisibility.suspended}}get performanceInfo(){return this._getResourceInfo()}};return e([d()],b$1.prototype,"loadedGraphics",void 0),e([d()],b$1.prototype,"suspended",void 0),e([d({readOnly:!0})],b$1.prototype,"legendEnabled",null),e([d()],b$1.prototype,"updating",void 0),e([d()],b$1.prototype,"controller",void 0),e([d()],b$1.prototype,"graphics3d",void 0),e([d({readOnly:!0})],b$1.prototype,"updatePolicy",void 0),e([d({readOnly:!0})],b$1.prototype,"suspendResumeExtentMode",void 0),e([d({type:Boolean})],b$1.prototype,"slicePlaneEnabled",void 0),e([d({readOnly:!0})],b$1.prototype,"suspendInfo",void 0),b$1=e([i$1("esri.views.3d.layers.FeatureLikeLayerView3D")],b$1),b$1};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class s extends n$2{constructor(){super(...arguments),this._set=new Set;}clear(){if(this._set.size>0){const e=this.toArray();this._set.clear(),this.emit("after-changes",{type:2}),this.emit("change",{added:[],removed:e});}}get length(){return this._set.size}addMany(e){if(0!==e.length){for(const t of e)this._set.add(t);this.emit("after-changes",{type:1}),this.emit("change",{added:e,removed:[]});}}remove(e){this._set.delete(e)&&(this.emit("after-changes",{type:2}),this.emit("change",{added:[],removed:[e]}));}removeMany(e){const t=[];for(const s of e)this._set.delete(s)&&t.push(s);t.length>0&&(this.emit("after-changes",{type:2}),this.emit("change",{added:[],removed:t}));}toArray(){return [...this._set]}find(e){let s;return n$3(this._set,(t=>!!e(t)&&(s=t,!0))),s}forEach(e){this._set.forEach((t=>e(t)));}}

export { E, S, U$1 as U, s };
