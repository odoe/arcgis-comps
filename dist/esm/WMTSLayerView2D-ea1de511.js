import { u, b as d$1, e, d as d$2, i as i$1 } from './messageBundle-f75b4090.js';
import { r } from './BitmapTileLayerView2D-a1cffa3a.js';
import { l } from './LayerView2D-270877b3.js';
import { h } from './TileStore-53d2d3f6.js';
import { p as p$1, r as r$1 } from './TileStrategy-e8f4a676.js';
import { u as u$1 } from './LayerView-f319a853.js';
import { i } from './RefreshableLayerView-843d03f3.js';
import './index-b157fcf2.js';
import './BitmapTileContainer-91472583.js';
import './aaBoundingRect-9468599b.js';
import './mathUtils-e16f9389.js';
import './common-d5b993de.js';
import './DefaultUI-022795b8.js';
import './Basemap-409fdf8e.js';
import './Portal-c5cfa317.js';
import './loadAll-9b2a160e.js';
import './asyncUtils-fe35d349.js';
import './PortalItem-155284f3.js';
import './writeUtils-04a97640.js';
import './Color-d1b9b54f.js';
import './colorUtils-37750ea3.js';
import './compilerUtils-848c8917.js';
import './enumeration-d3301938.js';
import './opacityUtils-5e864561.js';
import './geometry-7e07b1ba.js';
import './CollectionFlattener-2d3512bc.js';
import './HandleOwner-88326c19.js';
import './reactiveUtils-8f9c3a3d.js';
import './basemapUtils-d3dee4db.js';
import './TablesMixin-95a0923b.js';
import './Layer-b50ea610.js';
import './Identifiable-da047c47.js';
import './TimeExtent-a024c0d8.js';
import './GraphicsCollection-58a35288.js';
import './Graphic-3961df6c.js';
import './PopupTemplate-6e5ecad2.js';
import './symbols-b414aa72.js';
import './Symbol-cad56b52.js';
import './screenUtils-9bb7e30c.js';
import './aaBoundingBox-876621e6.js';
import './persistableUrlUtils-40bbec67.js';
import './jsonUtils-13b1f6fd.js';
import './HeightModelInfo-1a6d7a08.js';
import './unitUtils-38774114.js';
import './Scheduler-3464f717.js';
import './debugFlags-e9d86cce.js';
import './screenUtils-49015526.js';
import './executeQueryJSON-97747696.js';
import './utils-ab350511.js';
import './query-87b92407.js';
import './normalizeUtils-25a1ce55.js';
import './pbfQueryUtils-18f884ce.js';
import './pbf-6bd45926.js';
import './OptimizedFeature-44d5df5b.js';
import './OptimizedFeatureSet-27736f1f.js';
import './queryZScale-f42386f8.js';
import './zscale-faf9ffc2.js';
import './Query-d6335b3a.js';
import './Field-bfaa8af9.js';
import './fieldType-66a19d8a.js';
import './FeatureSet-58481609.js';
import './TopFeaturesQuery-cc717439.js';
import './Heading-960a88b2.js';
import './widget-c014d189.js';
import './QueryTask-23c14fd1.js';
import './featureConversionUtils-cbd79ea2.js';
import './Task-21abc82a.js';
import './FeatureLayer-91daf6b1.js';
import './UniqueValueRenderer-3c55992d.js';
import './VisualVariablesMixin-0befdf7b.js';
import './colorRamps-22c88e98.js';
import './ColorStop-d4fc22fe.js';
import './sizeVariableUtils-4d3662df.js';
import './visualVariableUtils-26c41ea6.js';
import './lengthUtils-f033d4fe.js';
import './diffUtils-849b3672.js';
import './jsonUtils-ade233cd.js';
import './styleUtils-cb28c5ef.js';
import './DictionaryRenderer-bea76550.js';
import './LRUCache-d5842b88.js';
import './MemCache-78a9f000.js';
import './jsonUtils-aa645e92.js';
import './MultiOriginJSONSupport-cb4804f4.js';
import './workers-c4ad1958.js';
import './APIKeyMixin-d7a9a0ad.js';
import './ArcGISService-49a9bda6.js';
import './arcgisLayerUrl-49ef2818.js';
import './BlendLayer-38b8abf7.js';
import './mat4-f34c6460.js';
import './CustomParametersMixin-758e21ed.js';
import './labelingInfo-1bb19962.js';
import './OperationalLayer-d609e521.js';
import './ElevationInfo-be94499b.js';
import './LabelClass-47fb4a25.js';
import './labelUtils-8999bd11.js';
import './defaultsJSON-0b68054b.js';
import './OrderedLayer-7fa2fd9d.js';
import './PortalLayer-290979fa.js';
import './RefreshableLayer-f4d1c27c.js';
import './ScaleRangeLayer-584ce37b.js';
import './TemporalLayer-5a7f466a.js';
import './TimeInfo-44dec2e0.js';
import './FeatureType-aa59abbf.js';
import './fieldProperties-d7b323c6.js';
import './FieldsIndex-2a111e7e.js';
import './LayerFloorInfo-c2959bac.js';
import './styleUtils-61c488eb.js';
import './popupUtils-c3247ec1.js';
import './utils-c84cc443.js';
import './ItemCache-5d2cf877.js';
import './utils-f8425723.js';
import './Queue-a7e7a3e5.js';
import './layerViewUtils-4127a8cf.js';
import './GoTo-148cc420.js';
import './accessibleHandler-feb312a0.js';
import './vmEvent-6b909beb.js';
import './heightModelInfoUtils-b573abf5.js';
import './Viewpoint-f60966b5.js';
import './mathUtils-8e5ad7fe.js';
import './mat2d-13076132.js';
import './mat2df32-93736424.js';
import './mat2df64-30d0a354.js';
import './mat3-6a23d9ad.js';
import './vec2-5672471e.js';
import './vec2f32-29d55de5.js';
import './vec2f64-35868783.js';
import './capabilities-ffdc19e3.js';
import './Bitmap-12fbb247.js';
import './DisplayObject-d9d14391.js';
import './Texture-f0375c04.js';
import './TiledDisplayObject-ec3aafee.js';
import './TileKey-284eee69.js';
import './brushes-40f92a01.js';
import './definitions-6a5ca2d9.js';
import './FramebufferObject-3d2e79da.js';
import './vec4f32-d544d091.js';
import './Utils-e4b23428.js';
import './ShaderCompiler-47ed1d9b.js';
import './number-851eb983.js';
import './config-768959de.js';
import './GeometryUtils-491632d8.js';
import './MaterialKey-853b7040.js';
import './pixelUtils-38f5d4af.js';
import './rasterUtils-da611f50.js';
import './TileContainer-627eb1a4.js';
import './WGLContainer-4d1cbe95.js';
import './Container-c0a182ff.js';
import './EffectList-649b8e46.js';
import './earcut-05cd758b.js';
import './quickselect-ccfd8cff.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const f=[102113,102100,3857,3785,900913];let p=class extends(i(r(l(u$1)))){constructor(){super(...arguments),this._handles=new u,this._tileStrategy=null,this._fetchQueue=null,this._tileRequests=new Map,this.layer=null;}get tileMatrixSet(){if(this.layer.activeLayer.tileMatrixSetId)return this.layer.activeLayer.tileMatrixSet;const e=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return e?(this.layer.activeLayer.tileMatrixSetId=e.id,e):null}hitTest(){return null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating");}attach(){if(!this.tileMatrixSet)return;const{tileInfo:e}=this.tileMatrixSet;this._tileInfoView=new h(e),this._fetchQueue=new p$1({tileInfoView:this._tileInfoView,process:e=>this.fetchTile(e)}),this._tileStrategy=new r$1({cachePolicy:"keep",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this._handles.add(this.watch(["layer.activeLayer.styleId","tileMatrixSet"],(()=>this._refresh()))),super.attach();}detach(){super.detach(),this._handles.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null;}moveStart(){this.requestUpdate();}viewChange(){this.requestUpdate();}moveEnd(){this.requestUpdate();}async doRefresh(){this.updateRequested||this.suspended||this._refresh();}isUpdating(){return this._fetchQueue.length>0}acquireTile(e){const t=this._bitmapView.createTile(e),s=t.bitmap;[s.x,s.y]=this._tileInfoView.getTileCoords([0,0],t.key),s.resolution=this._tileInfoView.getTileResolution(t.key),[s.width,s.height]=this._tileInfoView.tileInfo.size,this._tileInfoView.getTileCoords(s,t.key);const r={id:e.id,fulfilled:!1,promise:this._fetchQueue.push(t.key).then((e=>{t.bitmap.source=e,t.once("attach",(()=>this.requestUpdate())),this._bitmapView.addChild(t);})).catch((e=>{d$1(e)||(t.bitmap.source=null,t.once("attach",(()=>this.requestUpdate())),this._bitmapView.addChild(t));}))};return r.promise.finally((()=>r.fulfilled=!0)),this._tileRequests.set(t,r),this.requestUpdate(),t}releaseTile(e){const t=this._tileRequests.get(e);t.fulfilled||this._fetchQueue.abort(t.id),this._tileRequests.delete(e),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate();}async fetchTile(e){return this.layer.fetchTile(e.level,e.row,e.col)}canResume(){const e=super.canResume();return e?null!==this.tileMatrixSet:e}_refresh(){this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>{if(!e.bitmap.source)return;const t={id:e.key.id,fulfilled:!1,promise:this._fetchQueue.push(e.key).then((t=>{e.bitmap.source=t;})).catch((t=>{d$1(t)||(e.bitmap.source=null);})).finally((()=>{e.requestRender(),this.notifyChange("updating"),t.fulfilled=!0;}))};this._tileRequests.set(e,t);})),this.notifyChange("updating");}_getTileMatrixSetBySpatialReference(e){const t=this.view.spatialReference;if(!e.tileMatrixSets)return null;let i=e.tileMatrixSets.find((e=>e.tileInfo.spatialReference.wkid===t.wkid));return !i&&t.isWebMercator&&(i=e.tileMatrixSets.find((e=>f.indexOf(e.tileInfo.spatialReference.wkid)>-1))),i}};e([d$2()],p.prototype,"suspended",void 0),e([d$2({readOnly:!0})],p.prototype,"tileMatrixSet",null),p=e([i$1("esri.views.2d.layers.WMTSLayerView2D")],p);const d=p;

export default d;
