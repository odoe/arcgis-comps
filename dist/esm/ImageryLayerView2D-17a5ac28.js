import { c as s, e, d as d$1, i, p as p$1, I as z, _ as M, A as r$1, b as d$2, Q as E, a as i$4, g as f } from './messageBundle-f75b4090.js';
import { l } from './LayerView2D-270877b3.js';
import { h } from './Graphic-3961df6c.js';
import { c as c$1 } from './screenUtils-9bb7e30c.js';
import { r } from './enumeration-d3301938.js';
import { j as j$1 } from './rasterProjectionHelper-0dac9318.js';
import { m } from './vectorFieldUtils-b4f5845a.js';
import { c } from './GraphicsCollection-58a35288.js';
import { n } from './Container-c0a182ff.js';
import { i as i$1 } from './GraphicContainer-c7d5bf74.js';
import { r as rt } from './BaseGraphicContainer-21f282d8.js';
import { d as d$3 } from './pixelUtils-38f5d4af.js';
import { t } from './BitmapContainer-4ad3bb4f.js';
import { i as i$2 } from './Bitmap-12fbb247.js';
import { S } from './ExportStrategy-c8e66c04.js';
import { u } from './ImageryLayerView-e0dc4621.js';
import { u as u$1 } from './LayerView-f319a853.js';
import { i as i$3 } from './RefreshableLayerView-843d03f3.js';
import './index-b157fcf2.js';
import './Portal-c5cfa317.js';
import './geometry-7e07b1ba.js';
import './jsonUtils-13b1f6fd.js';
import './PopupTemplate-6e5ecad2.js';
import './opacityUtils-5e864561.js';
import './Identifiable-da047c47.js';
import './symbols-b414aa72.js';
import './Symbol-cad56b52.js';
import './Color-d1b9b54f.js';
import './colorUtils-37750ea3.js';
import './mathUtils-e16f9389.js';
import './common-d5b993de.js';
import './aaBoundingBox-876621e6.js';
import './aaBoundingRect-9468599b.js';
import './persistableUrlUtils-40bbec67.js';
import './unitUtils-38774114.js';
import './projection-f3d8779d.js';
import './mat4-f34c6460.js';
import './geodesicConstants-54cb88d4.js';
import './HandleOwner-88326c19.js';
import './reactiveUtils-8f9c3a3d.js';
import './DefaultUI-022795b8.js';
import './Basemap-409fdf8e.js';
import './loadAll-9b2a160e.js';
import './asyncUtils-fe35d349.js';
import './PortalItem-155284f3.js';
import './writeUtils-04a97640.js';
import './compilerUtils-848c8917.js';
import './CollectionFlattener-2d3512bc.js';
import './basemapUtils-d3dee4db.js';
import './TablesMixin-95a0923b.js';
import './Layer-b50ea610.js';
import './TimeExtent-a024c0d8.js';
import './HeightModelInfo-1a6d7a08.js';
import './Scheduler-3464f717.js';
import './debugFlags-e9d86cce.js';
import './screenUtils-49015526.js';
import './executeQueryJSON-97747696.js';
import './utils-ab350511.js';
import './query-87b92407.js';
import './normalizeUtils-25a1ce55.js';
import './pbfQueryUtils-18f884ce.js';
import './pbf-6bd45926.js';
import './OptimizedFeature-44d5df5b.js';
import './OptimizedFeatureSet-27736f1f.js';
import './queryZScale-f42386f8.js';
import './zscale-faf9ffc2.js';
import './Query-d6335b3a.js';
import './Field-bfaa8af9.js';
import './fieldType-66a19d8a.js';
import './FeatureSet-58481609.js';
import './TopFeaturesQuery-cc717439.js';
import './Heading-960a88b2.js';
import './widget-c014d189.js';
import './QueryTask-23c14fd1.js';
import './featureConversionUtils-cbd79ea2.js';
import './Task-21abc82a.js';
import './FeatureLayer-91daf6b1.js';
import './UniqueValueRenderer-3c55992d.js';
import './VisualVariablesMixin-0befdf7b.js';
import './colorRamps-22c88e98.js';
import './ColorStop-d4fc22fe.js';
import './sizeVariableUtils-4d3662df.js';
import './visualVariableUtils-26c41ea6.js';
import './lengthUtils-f033d4fe.js';
import './diffUtils-849b3672.js';
import './jsonUtils-ade233cd.js';
import './styleUtils-cb28c5ef.js';
import './DictionaryRenderer-bea76550.js';
import './LRUCache-d5842b88.js';
import './MemCache-78a9f000.js';
import './jsonUtils-aa645e92.js';
import './MultiOriginJSONSupport-cb4804f4.js';
import './workers-c4ad1958.js';
import './APIKeyMixin-d7a9a0ad.js';
import './ArcGISService-49a9bda6.js';
import './arcgisLayerUrl-49ef2818.js';
import './BlendLayer-38b8abf7.js';
import './CustomParametersMixin-758e21ed.js';
import './labelingInfo-1bb19962.js';
import './OperationalLayer-d609e521.js';
import './ElevationInfo-be94499b.js';
import './LabelClass-47fb4a25.js';
import './labelUtils-8999bd11.js';
import './defaultsJSON-0b68054b.js';
import './OrderedLayer-7fa2fd9d.js';
import './PortalLayer-290979fa.js';
import './RefreshableLayer-f4d1c27c.js';
import './ScaleRangeLayer-584ce37b.js';
import './TemporalLayer-5a7f466a.js';
import './TimeInfo-44dec2e0.js';
import './FeatureType-aa59abbf.js';
import './fieldProperties-d7b323c6.js';
import './FieldsIndex-2a111e7e.js';
import './LayerFloorInfo-c2959bac.js';
import './styleUtils-61c488eb.js';
import './popupUtils-c3247ec1.js';
import './utils-c84cc443.js';
import './ItemCache-5d2cf877.js';
import './utils-f8425723.js';
import './Queue-a7e7a3e5.js';
import './layerViewUtils-4127a8cf.js';
import './GoTo-148cc420.js';
import './accessibleHandler-feb312a0.js';
import './vmEvent-6b909beb.js';
import './heightModelInfoUtils-b573abf5.js';
import './Viewpoint-f60966b5.js';
import './mathUtils-8e5ad7fe.js';
import './mat2d-13076132.js';
import './mat2df32-93736424.js';
import './mat2df64-30d0a354.js';
import './mat3-6a23d9ad.js';
import './vec2-5672471e.js';
import './vec2f32-29d55de5.js';
import './vec2f64-35868783.js';
import './capabilities-ffdc19e3.js';
import './EffectList-649b8e46.js';
import './DisplayObject-d9d14391.js';
import './Utils-e4b23428.js';
import './Texture-f0375c04.js';
import './CIMSymbolHelper-4df91506.js';
import './BidiEngine-8e81e59c.js';
import './floatRGBA-7e1629d8.js';
import './definitions-6a5ca2d9.js';
import './number-851eb983.js';
import './GeometryUtils-d5113f23.js';
import './normalizeUtilsSync-85ec8192.js';
import './projectionSupport-1a26f2e9.js';
import './json-cfa039ad.js';
import './FramebufferObject-3d2e79da.js';
import './FeatureContainer-16c9a761.js';
import './TiledDisplayObject-ec3aafee.js';
import './TileKey-284eee69.js';
import './visualVariablesUtils-7de7bc4d.js';
import './visualVariablesUtils-6a0305f7.js';
import './TileContainer-627eb1a4.js';
import './WGLContainer-4d1cbe95.js';
import './brushes-40f92a01.js';
import './vec4f32-d544d091.js';
import './ShaderCompiler-47ed1d9b.js';
import './config-768959de.js';
import './GeometryUtils-491632d8.js';
import './MaterialKey-853b7040.js';
import './rasterUtils-da611f50.js';
import './earcut-05cd758b.js';
import './Matcher-8d34bc06.js';
import './TileStrategy-e8f4a676.js';
import './TileStore-53d2d3f6.js';
import './quickselect-ccfd8cff.js';
import './ComputedAttributeStorage-a268633c.js';
import './FeatureSetReader-56d48eaa.js';
import './centroid-a2430753.js';
import './tileUtils-0e5508e9.js';
import './TileClipper-e23eb0f2.js';
import './cimAnalyzer-d76cb5c0.js';
import './callExpressionWithFeature-e06d2f0b.js';
import './quantizationUtils-e08f723c.js';
import './cimSymbolUtils-853b7c71.js';
import './devEnvironmentUtils-9331429c.js';
import './schemaUtils-31feb80d.js';
import './MD5-6027098a.js';
import './GraphicsView-22b5c12e.js';
import './vec3f32-109cf143.js';
import './TileInfo-052b02b9.js';
import './popupUtils-a43f7eb9.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const _=s.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let w=class extends p$1{constructor(){super(...arguments),this.attached=!1,this.container=new n,this.updateRequested=!1,this._graphicsView=null,this._projectFullExtentPromise=null,this._dataParameters={exportParametersVersion:0,extents:[],tileResolution:0,time:""},this.type="Graphics",this._graphics=new c,this._updateGraphics=z((async(e,t)=>{if(!e.stationary)return;const r=e.state,i=new M({xmin:r.extent.xmin,ymin:r.extent.ymin,xmax:r.extent.xmax,ymax:r.extent.ymax,spatialReference:r.spatialReference}),[s,o]=e.state.size,n={};n.timeExtent=this.timeExtent,n.requestAsImageElement=!1,n.signal=t,null==this._projectFullExtentPromise&&(this._projectFullExtentPromise=this._getProjectedFullExtent(i.spatialReference));const p="vector-field"===this.layer.renderer.type?this.layer.renderer.symbolTileSize:50,c=await this._projectFullExtentPromise,{extent:h,resolution:l,width:u,height:y}=m(i,s,o,p,c),g=await this.layer.fetchImage(h,u,y,n),x=this.layer.renderer;if("vector-field"===x.type){const t=g.pixelData.pixelBlock,r=x.sizeVariables[0];!r$1(t)||r.minDataValue&&r.maxDataValue||(r.minDataValue=t.statistics[0].minValue,r.maxDataValue=t.statistics[0].maxValue),this._pixelData={extent:h,pixelBlock:t};const i=h.clone().normalize(),s={exportParametersVersion:this.layer.exportImageServiceParameters.version,extents:i,tileResolution:l,time:JSON.stringify(this.timeExtent||"")},o=this._canReuseVectorFieldData(s)?this._dataParameters.extents:[],n=await x.getGraphicsFromPixelData(g.pixelData,"vector-uv"===this.layer.rasterInfo.dataType,o);if(o.length){const e=this._graphics.items.filter((e=>r$1(e.geometry)&&o.some((t=>t.intersects(e.geometry)))&&!i.some((t=>t.intersects(e.geometry)))));this._graphics.removeMany(e),this._graphics.addMany(n);}else this._graphics.set("items",n);this._graphicsView.update(e),this._dataParameters=s;}}));}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1;}get updating(){return !this.attached||this.isUpdating()}update(e){this._updateGraphics(e).catch((e=>{d$2(e)||_.error(e);}));}hitTest(e,r){const i=this.view.toMap(c$1(e,r));return Promise.resolve(new h({attributes:{},geometry:i,layer:this.layer}))}attach(){this._graphicsView=new rt({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new i$1(this.view.featuresTilingScheme)}),this.attached=!0;}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null;}install(e){this.container.addChild(this._graphicsView.container),e.addChild(this.container);}uninstall(e){this.container.removeChild(this._graphicsView.container),e.removeChild(this.container);}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate());}async _getProjectedFullExtent(e){try{return await j$1(this.layer.fullExtent,e)}catch(t){try{const t=(await E(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return t?M.fromJSON(t):null}catch{return null}}}_canReuseVectorFieldData(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,r=this._dataParameters.time===e.time,i=Math.abs(this._dataParameters.tileResolution-e.tileResolution)/e.tileResolution<.01,s=this._dataParameters.extents.some((t=>e.extents.some((e=>t.intersects(e)))));return t&&r&&i&&s}};e([d$1()],w.prototype,"attached",void 0),e([d$1()],w.prototype,"container",void 0),e([d$1()],w.prototype,"layer",void 0),e([d$1()],w.prototype,"timeExtent",void 0),e([d$1()],w.prototype,"view",void 0),e([d$1()],w.prototype,"updateRequested",void 0),e([d$1()],w.prototype,"updating",null),e([r({graphics:"Graphics"})],w.prototype,"type",void 0),w=e([i("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],w);const j=w;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const y=s.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let g=class extends p$1{constructor(){super(...arguments),this.attached=!1,this.container=new n,this.updateRequested=!1,this.type="Imagery",this._bitmapView=null;}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1;}get updating(){return !this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch((e=>{d$2(e)||y.error(e);}));}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren();}hitTest(e,r){const i=this.view.toMap(c$1(e,r));return Promise.resolve(new h({attributes:{},geometry:i,layer:this.layer}))}attach(){const e=this.layer.version>=10,t$1=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,r=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new t,this.strategy=new S({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t$1,imageMaxWidth:r,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()}),this.attached=!0;}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container);}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container);}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const r=e.source;r.pixelBlock=t.pixelBlock,r.filter=e=>this.layer.applyFilter(e),this.container.requestRender();}));}));}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate());}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(1===e.length&&e[0].source)return {extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,r=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),i=d$3(r,t);return r$1(i)?{extent:i.extent,pixelBlock:i.pixelBlock}:null}return null}_fetchImage(e,t,r,i){return (i=i||{}).timeExtent=this.timeExtent,i.requestAsImageElement=!0,this.layer.fetchImage(e,t,r,i).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:i.signal}).then((t=>{const r=new i$2(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return r.filter=e=>this.layer.applyFilter(e),r}))))}};e([d$1()],g.prototype,"attached",void 0),e([d$1()],g.prototype,"container",void 0),e([d$1()],g.prototype,"layer",void 0),e([d$1()],g.prototype,"strategy",void 0),e([d$1()],g.prototype,"timeExtent",void 0),e([d$1()],g.prototype,"view",void 0),e([d$1()],g.prototype,"updateRequested",void 0),e([d$1()],g.prototype,"updating",null),e([r({imagery:"Imagery"})],g.prototype,"type",void 0),g=e([i("esri.views.2d.layers.imagery.ImageryView2D")],g);const x=g;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let p=class extends(u(i$3(l(u$1)))){constructor(){super(...arguments),this._exportImageVersion=-1;}initialize(){this.handles.add([i$4(this,["layer.blendMode","layer.effects"],(e=>{this.subview&&(this.subview.container.blendMode=e);}),!0),i$4(this,"layer.effect",(e=>{this.subview&&(this.subview.container.effect=e);}),!0)]);}get pixelData(){return this.updating?null:this.subview.getPixelData()}get updating(){return !(this.subview&&!this.subview.updating)}hitTest(e,t){return this.suspended||!this.subview?Promise.resolve(null):this.subview.hitTest(e,t)}update(e){var t;null==(t=this.subview)||t.update(e);}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([i$4(this,"layer.exportImageServiceParameters.version",(e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate());})),this.watch("timeExtent",(()=>{this.subview.timeExtent=this.timeExtent,this.requestUpdate();})),this.layer.on("redraw",(()=>this.subview.redraw())),f(this.layer,"renderer",(()=>this._setSubView()))],"imagerylayerview-update");}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1;}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate();}async doRefresh(){this.requestUpdate();}isUpdating(){return !this.subview||!this.suspended&&this.subview.isUpdating()}_setSubView(){var e;let t="Imagery";var s,i;("vector-field"===(null==(e=this.layer.renderer)?void 0:e.type)&&"lerc"===this.layer.format&&(t="Graphics"),this.subview&&this.subview.type===t)||(null==(s=this.subview)||s.uninstall(this.container),null==(i=this.subview)||i.destroy(),this.subview="Imagery"===t?new x({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new j({layer:this.layer,view:this.view,timeExtent:this.timeExtent}),this.subview.attach(),this.subview.install(this.container),this.subview.container.blendMode=this.layer.blendMode,this.subview.container.effect=this.layer.effect);this.requestUpdate();}};e([d$1()],p.prototype,"pixelData",null),e([d$1({readOnly:!0})],p.prototype,"updating",null),e([d$1()],p.prototype,"subview",void 0),p=e([i("esri.views.2d.layers.ImageryLayerView2D")],p);const d=p;

export default d;
