import { s as s$1, A as r$1 } from './messageBundle-f75b4090.js';
import { v } from './HeightModelInfo-1a6d7a08.js';
import { d as d$1 } from './arcgisLayerUrl-49ef2818.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
function r(t,i){if(!t)return null;if(!o(t))return new s$1("webscene:unsupported-height-model-info","The vertical coordinate system of the scene is not supported",{heightModelInfo:t});const r=t.heightUnit,a=v.deriveUnitFromSR(t,i).heightUnit;return r!==a?new s$1("webscene:incompatible-height-unit",`The vertical units of the scene (${r}) must match the horizontal units of the scene (${a})`,{verticalUnit:r,horizontalUnit:a}):null}function a(t,i,r){const a=l(t),o=i,h=s(a,o,r);{let i=null;if(a){const s=v.deriveUnitFromSR(a,t.spatialReference).heightUnit;r||s===a.heightUnit||(i=new s$1("layerview:unmatched-height-unit",`The vertical units of the layer must match the horizontal units (${s})`,{horizontalUnit:s}));}if(!c(t)||4===h||i)return new s$1("layerview:unsupported-height-model-info","The vertical coordinate system of the layer is not supported",{heightModelInfo:a,error:i})}{let t=null;switch(h){case 1:{const n=a.heightUnit||"unknown",i=o.heightUnit||"unknown";t=new s$1("layerview:incompatible-height-unit",`The vertical units of the layer (${n}) must match the vertical units of the scene (${i})`,{layerUnit:n,sceneUnit:i});break}case 2:{const n=a.heightModel||"unknown",i=o.heightModel||"unknown";t=new s$1("layerview:incompatible-height-model",`The height model of the layer (${n}) must match the height model of the scene (${i})`,{layerHeightModel:n,sceneHeightModel:i});break}case 3:{const n=a.vertCRS||"unknown",i=o.vertCRS||"unknown";t=new s$1("layerview:incompatible-vertical-datum",`The vertical datum of the layer (${n}) must match the vertical datum of the scene (${i})`,{layerDatum:n,sceneDatum:i});break}}if(t)return new s$1("layerview:incompatible-height-model-info","The vertical coordinate system of the layer is incompatible with the scene",{layerHeightModelInfo:a,sceneHeightModelInfo:o,error:t})}return null}function s(e,t,n){if(!o(e)||!o(t))return 4;if(null==e||null==t)return 0;if(!n&&e.heightUnit!==t.heightUnit)return 1;if(e.heightModel!==t.heightModel)return 2;switch(e.heightModel){case"gravity-related-height":return 0;case"ellipsoidal":return e.vertCRS===t.vertCRS?0:3;default:return 4}}function o(e){return null==e||null!=e.heightModel&&null!=e.heightUnit}function c(e){return "heightModelInfo"in e&&null!=e.heightModelInfo||null!=e.spatialReference||!f(e)}function l(e){const r=e.url&&d$1(e.url);return !(null==(e.spatialReference&&e.spatialReference.vcsWkid)&&r$1(r)&&"ImageServer"===r.serverType)&&h(e)&&e.heightModelInfo?e.heightModelInfo:f(e)?v.deriveUnitFromSR(d,e.spatialReference):null}function h(e){return "heightModelInfo"in e}function u(e){if("unknown"===e.type||!("capabilities"in e))return !1;switch(e.type){case"csv":case"feature":case"geojson":case"subtype-group":case"ogc-feature":case"wfs":return !0;default:return !1}}function f(e){return u(e)?!!(e.capabilities&&e.capabilities.data&&e.capabilities.data.supportsZ):m(e)}function g(e){return null!=e.layers||m(e)||u(e)||h(e)}function m(e){switch(e.type){case"building-scene":case"elevation":case"integrated-mesh":case"point-cloud":case"scene":case"voxel":return !0;case"analysis":case"base-dynamic":case"base-elevation":case"base-tile":case"bing-maps":case"csv":case"geojson":case"feature":case"subtype-group":case"geo-rss":case"graphics":case"group":case"imagery":case"imagery-tile":case"kml":case"map-image":case"map-notes":case"ogc-feature":case"open-street-map":case"route":case"stream":case"tile":case"unknown":case"unsupported":case"vector-tile":case"wcs":case"web-tile":case"wfs":case"wms":case"wmts":case null:return !1}return !1}const d=new v({heightModel:"gravity-related-height"});

export { a, g, l, r };
