import { p, bm as E, A as r, af as t, cu as F, e, d, i as i$1, b9 as v$1 } from './messageBundle-f75b4090.js';
import { a } from './HandleOwner-88326c19.js';
import { v, a as i } from './geometry-7e07b1ba.js';
import { t as tn, O as O$1, r as rn } from './projection-f3d8779d.js';
import { u } from './normalizeUtilsSync-85ec8192.js';
import { e as et } from './featureConversionUtils-cbd79ea2.js';
import { s } from './OptimizedFeature-44d5df5b.js';
import { m } from './FeatureStore-72363bc6.js';
import { V } from './QueryEngine-5866832d.js';
import { z as p$1 } from './arcgis-editor-c0835cea.js';
import { o } from './queryEngineUtils-e3beda43.js';
import './index-b157fcf2.js';
import './reactiveUtils-8f9c3a3d.js';
import './mathUtils-e16f9389.js';
import './common-d5b993de.js';
import './unitUtils-38774114.js';
import './mat4-f34c6460.js';
import './aaBoundingRect-9468599b.js';
import './geodesicConstants-54cb88d4.js';
import './jsonUtils-13b1f6fd.js';
import './normalizeUtils-25a1ce55.js';
import './OptimizedFeatureSet-27736f1f.js';
import './aaBoundingBox-876621e6.js';
import './PooledRBush-f64ccc4a.js';
import './quickselect-ccfd8cff.js';
import './optimizedFeatureQueryEngineAdapter-4f73f201.js';
import './centroid-a2430753.js';
import './MemCache-78a9f000.js';
import './ItemCache-5d2cf877.js';
import './WhereClause-a0e7b548.js';
import './projectionSupport-1a26f2e9.js';
import './json-cfa039ad.js';
import './QueryEngineCapabilities-d289cd19.js';
import './quantizationUtils-e08f723c.js';
import './utils-cd454be4.js';
import './ClassBreaksDefinition-14276201.js';
import './colorRamps-22c88e98.js';
import './Color-d1b9b54f.js';
import './colorUtils-37750ea3.js';
import './enumeration-d3301938.js';
import './Symbol-cad56b52.js';
import './spatialQuerySupport-8e60e1e7.js';
import './opacityUtils-5e864561.js';
import './FieldsIndex-2a111e7e.js';
import './Scheduler-3464f717.js';
import './debugFlags-e9d86cce.js';
import './screenUtils-49015526.js';
import './Graphic-3961df6c.js';
import './PopupTemplate-6e5ecad2.js';
import './Identifiable-da047c47.js';
import './symbols-b414aa72.js';
import './screenUtils-9bb7e30c.js';
import './persistableUrlUtils-40bbec67.js';
import './Portal-c5cfa317.js';
import './executeQueryJSON-97747696.js';
import './utils-ab350511.js';
import './query-87b92407.js';
import './pbfQueryUtils-18f884ce.js';
import './pbf-6bd45926.js';
import './queryZScale-f42386f8.js';
import './zscale-faf9ffc2.js';
import './Query-d6335b3a.js';
import './TimeExtent-a024c0d8.js';
import './Field-bfaa8af9.js';
import './fieldType-66a19d8a.js';
import './FeatureSet-58481609.js';
import './TopFeaturesQuery-cc717439.js';
import './Heading-960a88b2.js';
import './widget-c014d189.js';
import './QueryTask-23c14fd1.js';
import './Task-21abc82a.js';
import './FeatureLayer-91daf6b1.js';
import './UniqueValueRenderer-3c55992d.js';
import './VisualVariablesMixin-0befdf7b.js';
import './ColorStop-d4fc22fe.js';
import './sizeVariableUtils-4d3662df.js';
import './visualVariableUtils-26c41ea6.js';
import './lengthUtils-f033d4fe.js';
import './diffUtils-849b3672.js';
import './jsonUtils-ade233cd.js';
import './styleUtils-cb28c5ef.js';
import './DictionaryRenderer-bea76550.js';
import './LRUCache-d5842b88.js';
import './jsonUtils-aa645e92.js';
import './MultiOriginJSONSupport-cb4804f4.js';
import './HeightModelInfo-1a6d7a08.js';
import './Layer-b50ea610.js';
import './workers-c4ad1958.js';
import './APIKeyMixin-d7a9a0ad.js';
import './ArcGISService-49a9bda6.js';
import './arcgisLayerUrl-49ef2818.js';
import './BlendLayer-38b8abf7.js';
import './CustomParametersMixin-758e21ed.js';
import './labelingInfo-1bb19962.js';
import './OperationalLayer-d609e521.js';
import './ElevationInfo-be94499b.js';
import './LabelClass-47fb4a25.js';
import './labelUtils-8999bd11.js';
import './defaultsJSON-0b68054b.js';
import './OrderedLayer-7fa2fd9d.js';
import './PortalLayer-290979fa.js';
import './asyncUtils-fe35d349.js';
import './PortalItem-155284f3.js';
import './RefreshableLayer-f4d1c27c.js';
import './ScaleRangeLayer-584ce37b.js';
import './TemporalLayer-5a7f466a.js';
import './TimeInfo-44dec2e0.js';
import './FeatureType-aa59abbf.js';
import './fieldProperties-d7b323c6.js';
import './LayerFloorInfo-c2959bac.js';
import './styleUtils-61c488eb.js';
import './popupUtils-c3247ec1.js';
import './utils-c84cc443.js';
import './utils-f8425723.js';
import './Queue-a7e7a3e5.js';
import './layerViewUtils-4127a8cf.js';
import './GoTo-148cc420.js';
import './accessibleHandler-feb312a0.js';
import './vmEvent-6b909beb.js';
import './InputField-3a8ab041.js';
import './luxon-ec6026e9.js';
import './_commonjsHelpers-80e09147.js';
import './GraphicsLayer-86475574.js';
import './GraphicsCollection-58a35288.js';
import './drapedUtils-4802ed0b.js';
import './hitTestSelectUtils-779b69ca.js';
import './geodesicUtils-32a18b56.js';
import './vec2-5672471e.js';
import './vec2f64-35868783.js';
import './geometry2dUtils-4e41c21e.js';
import './PointSnappingHint-bb0669ef.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let k=class extends(a(p)){constructor(e){super(e),this.availability=1,this.sources={multipoint:null,point:null,polygon:null,polyline:null},this.loadedWkids=new Set,this.loadedWkts=new Set,this.pendingAdds=[];}get updating(){return this.updatingHandles.updating}get layer(){return this.layerSource.layer}destroy(){const e=this.pendingAdds;this.pendingAdds.length=0;for(const t of e)t.task.abort();this.mapSources((e=>this.destroySource(e)));}initialize(){this.handles.add([this.layer.on("graphic-update",(e=>this.onGraphicUpdate(e))),this.updatingHandles.addOnCollectionChange(this.layer.graphics,(e=>this.onGraphicsChanged(e)))]),this.addMany(this.layer.graphics.toArray());}async fetchCandidates(e,t){const r$1=await E(this.mapSources((r$1=>r$1.queryEngine.executeQueryForSnapping({point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),distance:e.distance,types:e.types,query:r(e.filter)?e.filter.createQuery().toJSON():{where:"1=1"}},t).then((({candidates:e})=>e))))),s=r$1.flat().map((t=>o(t,e.coordinateHelper)));return p$1(e.point,s),s}refresh(){}onGraphicUpdate(e){switch(e.property){case"geometry":case"visible":this.remove(e.graphic),this.addMany([e.graphic]);}}onGraphicsChanged(e){for(const t of e.removed)this.remove(t);this.addMany(e.added);}addMany(e){const t$1=[],r=new Map;for(const s of e)t(s.geometry)||(this.needsInitializeProjection(s.geometry.spatialReference)?(t$1.push(s.geometry.spatialReference),r.set(s.uid,s)):this.add(s));this.createPendingAdd(t$1,r);}createPendingAdd(e,t){if(!e.length)return;const s=F((async r=>{await rn(e.map((e=>({source:e,dest:this.spatialReference}))),{signal:r}),this.markLoadedSpatialReferences(e);for(const[,e]of t)this.add(e);}));this.updatingHandles.addPromise(s.promise);const o={task:s,graphics:t},i=()=>v$1(this.pendingAdds,o);s.promise.then(i,i),this.pendingAdds.push(o);}markLoadedSpatialReferences(e){for(const t of e)null!=t.wkid&&this.loadedWkids.add(t.wkid),null!=t.wkt&&this.loadedWkts.add(t.wkt);}add(e){if(t(e.geometry)||!e.visible)return;let t$1=e.geometry;if("mesh"===t$1.type)return;"extent"===t$1.type&&(t$1=v.fromExtent(t$1));const r$1=this.ensureSource(t$1.type);if(t(r$1))return;const s=this.createOptimizedFeature(e.uid,t$1);r(s)&&r$1.featureStore.add(s);}needsInitializeProjection(e){return (null==e.wkid||!this.loadedWkids.has(e.wkid))&&((null==e.wkt||!this.loadedWkts.has(e.wkt))&&!tn(e,this.spatialReference))}createOptimizedFeature(e,t){const r=O$1(u(t),this.spatialReference);return r?new s(et(r,!1,!1),{[O]:e},null,e):null}ensureSource(e){const t=this.sources[e];if(r(t))return t;const r$1=this.createSource(e);return this.sources[e]=r$1,r$1}createSource(e){const t=i.toJSON(e),r$1=new m({geometryType:t,hasZ:!1,hasM:!1});return {featureStore:r$1,queryEngine:new V({featureStore:r$1,fields:[{name:O,type:"esriFieldTypeOID",alias:O}],geometryType:t,hasM:!1,hasZ:!1,objectIdField:O,spatialReference:this.spatialReference,scheduler:r(this.view)&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:e}}remove(e){this.mapSources((t=>this.removeFromSource(t,e)));for(const t of this.pendingAdds)t.graphics.delete(e.uid),0===t.graphics.size&&t.task.abort();}removeFromSource(e,t){const r=t.uid;e.featureStore.has(r)&&e.featureStore.removeById(t.uid);}destroySource(e){e.queryEngine.destroy(),this.sources[e.type]=null;}mapSources(e){const{point:t,polygon:r$1,polyline:s,multipoint:i}=this.sources,a=[];return r(t)&&a.push(e(t)),r(r$1)&&a.push(e(r$1)),r(s)&&a.push(e(s)),r(i)&&a.push(e(i)),a}};e([d({constructOnly:!0})],k.prototype,"spatialReference",void 0),e([d({constructOnly:!0})],k.prototype,"layerSource",void 0),e([d({constructOnly:!0})],k.prototype,"view",void 0),e([d({readOnly:!0})],k.prototype,"updating",null),e([d({readOnly:!0})],k.prototype,"availability",void 0),k=e([i$1("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],k);const O="OBJECTID";

export { k as GraphicsSnappingSource };
