import { e, d as d$1, i as i$1, m as s, a0 as T, r, v as s$2, N as d$2, t } from './messageBundle-8a146a9b.js';
import { r as r$1 } from './BitmapTileLayerView2D-271cf103.js';
import { l, u } from './LayerView-755bba7e.js';
import { h } from './TileStore-21b1bb99.js';
import { e as e$1 } from './TileKey-761e63f3.js';
import { p, r as r$2 } from './TileStrategy-d2661b3c.js';
import { i as i$2 } from './RefreshableLayerView-73266a31.js';
import { s as s$1 } from './clickToleranceUtils-b5cfb431.js';
import { a } from './drapedUtils-f13edc68.js';
import './index-41925fe8.js';
import './BitmapTileContainer-f7d6bc52.js';
import './aaBoundingRect-6f84e6b7.js';
import './unitUtils-c707ba3c.js';
import './JSONSupport-4e29e63d.js';
import './MapView-6cbca3ba.js';
import './CollectionFlattener-2797ca68.js';
import './HandleOwner-6cdc634d.js';
import './reactiveUtils-a5f838c7.js';
import './workers-c79250a3.js';
import './executeQueryJSON-4dc0a2fa.js';
import './utils-3a45351e.js';
import './query-70db7072.js';
import './normalizeUtils-c91b4ce9.js';
import './pbfQueryUtils-861d8d5b.js';
import './pbf-bb65af95.js';
import './OptimizedFeature-d5cd2d1c.js';
import './OptimizedFeatureSet-27736f1f.js';
import './queryZScale-f92acabb.js';
import './zscale-5703857d.js';
import './Query-71270a43.js';
import './TimeExtent-16986fe0.js';
import './Field-fbfaf20d.js';
import './fieldType-f80f0b3d.js';
import './FeatureSet-e481fbb3.js';
import './TopFeaturesQuery-5a679b50.js';
import './symbolUtils-d248a142.js';
import './utils-94a817af.js';
import './asyncUtils-c98101f9.js';
import './ItemCache-fb7de9d2.js';
import './MemCache-73bb45e2.js';
import './utils-f8425723.js';
import './widget-6ffe6c9e.js';
import './QueryTask-dd4aeb97.js';
import './featureConversionUtils-e2de20bf.js';
import './Task-3d644895.js';
import './FeatureLayer-52da5e2e.js';
import './UniqueValueRenderer-75e84d49.js';
import './VisualVariablesMixin-66f084f4.js';
import './colorRamps-b0e37c54.js';
import './ColorStop-ff4a3943.js';
import './sizeVariableUtils-4d3662df.js';
import './visualVariableUtils-3ac464e8.js';
import './lengthUtils-a6878787.js';
import './diffUtils-14ca3884.js';
import './jsonUtils-7105a0de.js';
import './styleUtils-5fe9231e.js';
import './DictionaryRenderer-4a77ed62.js';
import './LRUCache-b68d19e5.js';
import './jsonUtils-f2130780.js';
import './Layer-455faab4.js';
import './HeightModelInfo-899d5d07.js';
import './APIKeyMixin-f2be3dfc.js';
import './ArcGISService-adf08a63.js';
import './arcgisLayerUrl-30839db3.js';
import './BlendLayer-286c847c.js';
import './jsonUtils-433a912a.js';
import './mat4-1ee7ce2f.js';
import './CustomParametersMixin-05dda462.js';
import './labelingInfo-136b2123.js';
import './commonProperties-0e370622.js';
import './LabelClass-080f9590.js';
import './labelUtils-17428bb2.js';
import './defaultsJSON-f90363d8.js';
import './OperationalLayer-52601c7c.js';
import './OrderedLayer-1aa033f7.js';
import './PortalLayer-faa3179f.js';
import './PortalItem-3f93baa8.js';
import './RefreshableLayer-f326088d.js';
import './ScaleRangeLayer-aeac5429.js';
import './TemporalLayer-f8f255e9.js';
import './TimeInfo-3ee9ad62.js';
import './FeatureType-30442694.js';
import './fieldProperties-530951df.js';
import './FieldsIndex-041474f9.js';
import './LayerFloorInfo-e1a08643.js';
import './styleUtils-32c9f97f.js';
import './popupUtils-b5ee0759.js';
import './GoTo-759476d4.js';
import './mathUtils-056ec719.js';
import './TileInfo-9ceca7da.js';
import './Basemap-4d7f7799.js';
import './loadAll-446fc3cf.js';
import './writeUtils-a3943f03.js';
import './compilerUtils-844f852c.js';
import './TablesMixin-8c331347.js';
import './GraphicsCollection-d1498daf.js';
import './Scheduler-9fe99f02.js';
import './unitBezier-0f2e6a45.js';
import './mat2df32-1cb93af7.js';
import './vec2-3a86c352.js';
import './vec2f64-7f47d8e4.js';
import './projection-b812ba08.js';
import './mat3-315ee4cf.js';
import './vec2f32-29d55de5.js';
import './screenshotUtils-d9738486.js';
import './capabilities-d8a3b872.js';
import './Bitmap-5bc79c2c.js';
import './Container-0b6d10e4.js';
import './EffectList-96b1a6dd.js';
import './Texture-2c5b5ae1.js';
import './TileContainer-cd65bef4.js';
import './Utils-d0125060.js';
import './WGLContainer-fb6cd8ae.js';
import './definitions-6a5ca2d9.js';
import './VertexArrayObject-fe436e16.js';
import './ShaderCompiler-4e39b343.js';
import './number-851eb983.js';
import './config-768959de.js';
import './GeometryUtils-491632d8.js';
import './MaterialKey-319bd7d7.js';
import './pixelUtils-fc1bd760.js';
import './earcut-05cd758b.js';
import './quickselect-ccfd8cff.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const i=i=>{let c=class extends i{async fetchPopupFeatures(e,s$2){const{layer:a}=this;if(!e)return Promise.reject(new s("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));if("tile"!==a.type)return Promise.reject(new s("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:a.type}));const i=this.get("view.scale"),c=a.allSublayers.toArray().filter((e=>{const r=0===e.minScale||i<=e.minScale,t=0===e.maxScale||i>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&r&&t}));return T(c.map((async r$1=>{const o=r$1.createQuery(),a=r(s$2)?s$2.event:null,i=s$1({renderer:r$1.renderer,event:a});o.geometry=this.createFetchPopupFeaturesQueryGeometry(e,i),o.outFields=await r$1.popupTemplate.getRequiredFields();return (await r$1.queryFeatures(o)).features}))).then((e=>[].concat(...e.map((e=>e.value)).filter(Boolean))))}};return e([d$1()],c.prototype,"layer",void 0),c=e([i$1("esri.layers.mixins.TileLayerView")],c),c};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const w=s$2.getLogger("esri.views.2d.layers.TileLayerView2D"),d=[0,0];let _=class extends(i(i$2(r$1(l(u))))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null;}initialize(){const e=this.layer.tileInfo,i=e&&e.spatialReference;let r;i||(r=new s("layerview:tiling-information-missing","The layer doesn't provide tiling information",{layer:this.layer})),i.equals(this.view.spatialReference)||(r=new s("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer})),this.watch("resampling",(()=>{this.doRefresh();})),r&&this.addResolvingPromise(Promise.reject(r));}get resampling(){return !("resampling"in this.layer)||!1!==this.layer.resampling}hitTest(){return null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating");}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null;this._tileInfoView=new h(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new p({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new r$2({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.requestUpdate(),this.container.requestRender(),super.attach();}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null;}moveStart(){this.requestUpdate();}viewChange(){this.requestUpdate();}moveEnd(){this.requestUpdate();}createFetchPopupFeaturesQueryGeometry(e,t){return a(e,t,this.view)}async doRefresh(){this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>this._enqueueTileFetch(e))),this.notifyChange("updating"));}isUpdating(){var e;return (null==(e=this._fetchQueue)?void 0:e.length)>0}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return [i.x,i.y]=this._tileInfoView.getTileCoords(d,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate();}async fetchTile(e,t$1){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,a=!t(t$1)&&t$1.signal;if(!i)try{return await this._fetchImage(e,a)}catch(m){if(!d$2(m)&&!this.resampling)return this._createBlankImage();throw m}const l=new e$1(0,0,0,0);let o;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,l,{signal:a}),l.level!==e.level&&!this.resampling)return this._createBlankImage();o=await this._fetchImage(l,a);}catch(m){if(d$2(m))throw m;o=await this._fetchImage(e,a);}const{level:h,row:n,col:u}=l;return this.resampling&&h!==e.level?this._resampleImage(o,h,n,u,e.level,e.row,e.col):o}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()));}catch(t){d$2(t)||w.error(t);}this.requestUpdate();}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{signal:t})}_resampleImage(e,t,i,r,s,a,l){const o=this._tileInfoView.tileInfo.size,h=this._tileInfoView.getTileResolution(t),n=this._tileInfoView.getTileResolution(s);let c=this._tileInfoView.getLODInfoAt(s);const u=c.getXForColumn(l),m=c.getYForRow(a);c=this._tileInfoView.getLODInfoAt(t);const p=c.getXForColumn(r),f=c.getYForRow(i),g=Math.round((u-p)/h),y=Math.round(-(m-f)/h),w=Math.round(o[0]*(n/h)),d=Math.round(o[1]*(n/h)),_=this._createBlankImage();return _.getContext("2d").drawImage(e,g,y,w,d,0,0,o[0],o[1]),_}_createBlankImage(){const e=this._tileInfoView.tileInfo.size,t=document.createElement("canvas");return [t.width,t.height]=e,t}};e([d$1()],_.prototype,"resampling",null),_=e([i$1("esri.views.2d.layers.TileLayerView2D")],_);const I=_;

export default I;
