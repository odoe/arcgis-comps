import { e, u as u$1, af as t$5, A as r$2, d as d$1, i, p as p$2, k as a$2, F as g$5, ai as l$1, G as u$3, aW as c$5 } from './messageBundle-f75b4090.js';
import { v as v$1, f, _ as _$2, l as l$2, c as g$6, h as h$1, d as b$1, i as f$1, s, k, j as g$7, t as t$6, e as e$4, b as e$6 } from './viewUtils-4b72a9ab.js';
import { e as e$5 } from './AnalysisView3D-b50a297f.js';
import { o as o$2, a as j, c as c$2, _ as _$1, I as I$1, q as q$2, a9 as g$4, d as d$2, u as u$2, a8 as f$2, M, m as m$5, l as l$3 } from './mathUtils-e16f9389.js';
import { i as i$1, p as p$3 } from './reactiveUtils-8f9c3a3d.js';
import { x as x$1, s as s$1 } from './screenUtils-9bb7e30c.js';
import { O, p as p$4, D, a as G$1, R as R$1, d as O$1 } from './unitUtils-38774114.js';
import { j as j$1 } from './vec2-5672471e.js';
import { n as n$3 } from './common-d5b993de.js';
import { r as r$3 } from './vec4f32-d544d091.js';
import { c as c$3, m as m$2 } from './LineVisualElement-7e3bfc5b.js';
import { e as e$3 } from './mat4f64-677a419d.js';
import { n as n$4 } from './vec4f64-2ec4ac08.js';
import { c as c$4 } from './vectorStacks-9205ea46.js';
import { P, aS as a$3, i as i$2 } from './ColorMaterial-cf44e08d.js';
import { A } from './InterleavedLayout-4358b016.js';
import { n, t, e as e$1, b as t$1, c as t$2, d as n$1, o as o$1, k as t$3, a7 as a, f as t$4, aa as a$1, ar as e$2, ad as n$2 } from './Texture-1e5e4be2.js';
import { g as g$3, u, c as c$1, l, r as r$1 } from './OrderIndependentTransparency-3e6c26be.js';
import { y as y$2 } from './RightAngleQuadVisualElement-dedbfc92.js';
import { geodesicLength as C$1 } from './geometryEngine-49b64dd5.js';
import { m as m$3 } from './geometry-7e07b1ba.js';
import { t as tn, w as wn, c as En } from './projection-f3d8779d.js';
import { m as m$4, M as M$1, R } from './geodesicUtils-32a18b56.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
function o(){const o=new n;o.vertex.uniforms.add("proj","mat4").add("view","mat4").add("width","float"),o.attributes.add("position","vec3"),o.attributes.add("normal","vec3"),o.attributes.add("uv0","vec2"),o.attributes.add("auxpos1","float"),o.varyings.add("vtc","vec2"),o.varyings.add("vlength","float"),o.varyings.add("vradius","float"),o.vertex.code.add(t`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),o.fragment.uniforms.add("outlineSize","float").add("outlineColor","vec4").add("stripeLength","float").add("stripeEvenColor","vec4").add("stripeOddColor","vec4");const r=1/Math.sqrt(2);return o.fragment.code.add(t`
    const float INV_SQRT2 = ${t.float(r)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      gl_FragColor = color;
    }
  `),o}const r=Object.freeze({__proto__:null,build:o});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class c extends t$2{constructor(r,e,t){super(r,e,t);}initializeProgram(r){const e=c.shader.get().build();return new n$1(r.rctx,e,o$1)}bindPass(r,t){t$3(this.program,t.camera.projectionMatrix),this.program.setUniform1f("width",r.width),this.program.setUniform1f("outlineSize",r.outlineSize),this.program.setUniform4fv("outlineColor",r.outlineColor),this.program.setUniform1f("stripeLength",r.stripeLength),this.program.setUniform4fv("stripeEvenColor",r.stripeEvenColor),this.program.setUniform4fv("stripeOddColor",r.stripeOddColor);}bindDraw(r){a(this.program,r),this.program.rebindTextures();}setPipelineState(r){const e=3===r,t=this.configuration;return g$3({blending:t.transparent?e?u:c$1(r):null,polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:513},depthWrite:l,colorWrite:r$1})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return 5}}c.shader=new t$4(r,(()=>import('./MeasurementArrow.glsl-85e5cb74.js')));class g$2 extends t$1{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=3;}}e([e$1()],g$2.prototype,"polygonOffsetEnabled",void 0),e([e$1()],g$2.prototype,"transparent",void 0),e([e$1({count:4})],g$2.prototype,"transparencyPassType",void 0);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class h extends a$1{constructor(e){super(e,d),this.techniqueConfig=new g$2;}getTechniqueConfig(e,t){var r;return this.techniqueConfig.polygonOffsetEnabled=this.parameters.polygonOffset,this.techniqueConfig.transparent=this.parameters.stripeEvenColor[3]<1||this.parameters.stripeOddColor[3]<1||this.parameters.outlineColor[3]<1,this.techniqueConfig.transparencyPassType=null!=(r=null==t?void 0:t.transparencyPassType)?r:3,this.techniqueConfig}dispose(){}getPassParameters(){return this.parameters}intersect(){}requiresSlot(e){return 2===e}createGLMaterial(e){return 0===e.output?new m$1(e):null}createBufferWriter(){return new x}}class m$1 extends e$2{updateParameters(e){return this.ensureTechnique(c,e)}beginSlot(e){return this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e);}}const d={width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1,...n$2},g$1=A().vec3f("position").vec3f("normal").vec2f("uv0").f32("auxpos1"),v=n$3(),C=n$3(),y$1=n$3(),b=n$3(),q$1=n$3();class x{constructor(){this.vertexBufferLayout=g$1;}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 2*(e.indices.get("position").length/2+1)}write(i,a,u,c){const l=a.vertexAttributes.get("position").data,p=a.vertexAttributes.get("normal").data,f=l.length/3,h=a&&a.indices&&a.indices.get("position");h&&h.length!==2*(f-1)&&console.warn("MeasurementArrowMaterial does not support indices");const m=v,d=C,g=y$1,x=b,P=q$1,w=i.transformation,T=i.invTranspTransformation,j$1=u.position,L=u.normal,M=u.uv0;let O=0;for(let v=0;v<f;++v){const i=3*v;if(o$2(m,l[i],l[i+1],l[i+2]),v<f-1){const n=3*(v+1);o$2(d,l[n],l[n+1],l[n+2]),o$2(P,p[n],p[n+1],p[n+2]),j(P,P),c$2(g,d,m),j(g,g),_$1(x,P,g),j(x,x);}const a=q$2(m,d);w&&T&&(I$1(m,m,w),I$1(d,d,w),I$1(x,x,T));const u=c+2*v,h=u+1;j$1.setVec(u,m),j$1.setVec(h,m),L.setVec(u,x),L.setVec(h,x),M.set(u,0,O),M.set(u,1,-1),M.set(h,0,O),M.set(h,1,1),v<f-1&&(O+=a);}const A=u.auxpos1;for(let e=0;e<2*f;++e)A.set(c+e,O);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class p$1 extends c$3{constructor(e){super(e),this._parameters=m,this._handles=null,this._origin=n$3(),this._originTransform=e$3(),this._arrowCenter=n$3(),this._renderOccluded=4,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._opacity=1,this.applyProps(e);}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:e}));}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged();}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength});}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this.opacity,{arrowStripeEvenColor:t,arrowStripeOddColor:s}=this._parameters,i=g$4(_,this._stripesEnabled?t:s,e);this._arrowMaterial.setParameters({stripeEvenColor:i});}}get opacity(){return this._opacity}set opacity(e){e!==this._opacity&&(this._opacity=e,this._updateArrowOpacity());}createExternalResources(){const{arrowStripeEvenColor:r,arrowStripeOddColor:t,arrowOutlineColor:s}=this._parameters,i=this._stripesEnabled?r:t;this._arrowMaterial=new h({outlineColor:s,stripeEvenColor:i,stripeOddColor:t,renderOccluded:this.renderOccluded,polygonOffset:!0}),this._handles=new u$1,this._handles.add(this.view.state.watch("camera",(()=>{this.viewChanged();})));}destroyExternalResources(){this._arrowMaterial=null,this._handles.destroy(),this._handles=null;}forEachExternalMaterial(e){e(this._arrowMaterial);}createGeometries(e){if(t$5(this._geometry)||t$5(this._geometry.startRenderSpace)||t$5(this._geometry.endRenderSpace))return;const r=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);e.addGeometry(r,this._arrowMaterial,this._originTransform),this.viewChanged();}_createArrowGeometry(e,r,t,s){const i=this.view.renderCoordsHelper,a=[],n=[],l=(e,r)=>{const s=c$4.get();c$2(s,e,t),a.push(s),n.push(r);};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const t=c$4.get();i.worldUpAtPosition(this._arrowCenter,t),l(e,t),l(r,t);}else {s.eval(.5,this._arrowCenter);const e=this._parameters.arrowSubdivisions+1&-2;for(let r=0;r<e;++r){const t=r/(e-1),o=c$4.get(),a=c$4.get();s.eval(t,o),i.worldUpAtPosition(o,a),l(o,a);}}return P.createPolylineGeometry(a,n)}geometryChanged(){this.recreateGeometry();}viewChanged(){if(this.view.ready&&this.attached&&r$2(this._geometry)){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._parameters.arrowWidth*e});}}_updateArrowOpacity(){const e=this.opacity,{arrowStripeEvenColor:t,arrowStripeOddColor:s,arrowOutlineColor:i}=this._parameters,o=g$4(_,this._stripesEnabled?t:s,e),a=g$4(w,i,e),n=g$4(g,s,e);this._arrowMaterial.setParameters({stripeEvenColor:o,outlineColor:a,stripeOddColor:n});}}const m={arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128},_=n$4(),w=n$4(),g=n$4();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let T=class extends p$2{constructor(e){super(e),this._params={...Q},this._handles=new u$1,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=n$3(),this._endPosition=n$3(),this._cornerPosition=n$3(),this._startPositionAtSeaLevel=n$3(),this._endPositionAtSeaLevel=n$3(),this._state=0,this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=0,this.triangleCollapseRatioThreshold=.03;}get ready(){return 1===this._state}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(t$5(e)||t$5(t)||e.equals(t))return 0;const i=this.analysisView.result;if(t$5(i))return 1;if("geodesic"===i.mode)return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?3:1;const{verticalDistance:s,horizontalDistance:n}=i,o=s.value,r=n.value;return Math.min(o/r,r/o)<this.triangleCollapseRatioThreshold?1:2}get actualVisualizedMeasurement(){return t$5(this.analysisView.result)?2===this.analysisView.measurementMode?"geodesic":"euclidean":this.analysisView.result.mode}get allowVisualElementsOrientationChange(){return t$5(this._triangleOrientationOverride)}set allowVisualElementsOrientationChange(e){t$5(this._triangleOrientationOverride)!==e&&(t$5(this._triangleOrientationOverride)?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null);}get labels(){const e="geodesic"===this.actualVisualizedMeasurement;return {direct:this._segmentLabel,horizontal:e?this._segmentLabel:this._horizontalLabel,vertical:this._verticalLabel}}get testData(){var e;return {labels:this.labels,stripeLength:null==(e=this._segmentVisualElement)?void 0:e.stripeLength}}initialize(){this._handles.add(a$2(this.view,"ready",(()=>this._initialize()),!0));}_initialize(){switch(this._state){case 1:throw new Error("invalid state");case 2:return}const e=this._params,t={attached:!0,view:this.view};this._segmentVisualElement=new p$1({...t,geometry:null,renderOccluded:4}),this._triangleVisualElement=new m$2({...t,width:e.triangleLineWidth,color:e.triangleColor,renderOccluded:4}),this._rightAngleQuad=new y$2({...t,color:W,renderOccluded:4});const i={...t,polygonOffset:!0,stippleIntegerRepeats:!1,renderOccluded:4};this._projectedGeodesicLine=new m$2({...i,width:e.geodesicProjectionLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:a$3(e.guideStippleLengthPixels)}),this._geodesicStartHint=new m$2({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:a$3(e.guideStippleLengthPixels)}),this._geodesicEndHint=new m$2({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:a$3(e.guideStippleLengthPixels)}),this._segmentLabel=new v$1({...t,fontSize:e.direcLabelFontSize}),this._verticalLabel=new v$1({...t,fontSize:e.verticalLabelFontSize}),this._horizontalLabel=new v$1({...t,fontSize:e.horizontalLabelFontSize}),this._handles.add([i$1((()=>{const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView,i=this.view;return {view:i,camera:i.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}}),(e=>this._updateGeometryAndViewMode(e)),p$3),i$1((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateVisualElementVisibility(e)),p$3),i$1((()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement})),(e=>this._updateLabelText(e)),p$3),i$1((()=>({visible:this.visible,viewMode:this.viewMode,state:this._state})),(e=>this._updateLabelVisibility(e)),p$3),i$1((()=>this._measurementArrowStripeLength),(e=>this._updateSegmentStripeLength(e)),p$3),g$5((async()=>this._updateMessageBundle()))]),this._state=1,this._updateMessageBundle();}destroy(){2!==this._state&&(this._handles=l$1(this._handles),this._segmentVisualElement=l$1(this._segmentVisualElement),this._triangleVisualElement=l$1(this._triangleVisualElement),this._rightAngleQuad=l$1(this._rightAngleQuad),this._projectedGeodesicLine=l$1(this._projectedGeodesicLine),this._geodesicStartHint=l$1(this._geodesicStartHint),this._geodesicEndHint=l$1(this._geodesicEndHint),this._segmentLabel=l$1(this._segmentLabel),this._verticalLabel=l$1(this._verticalLabel),this._horizontalLabel=l$1(this._horizontalLabel),this.set("view",null),this._state=2);}async whenReady(){await a$2(this,"ready");}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case 0:break;case 1:this._segmentVisualElement.visible=!0;break;case 2:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case 3:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0;}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:n,orientation:o,visualizedMeasurement:r,stripeLength:l}){const c=e.renderCoordsHelper;if(t$5(s)||t$5(n)||s.equals(n))return;let h=this._startPosition,d=this._endPosition;c.toRenderCoords(s,h),c.toRenderCoords(n,d);const u=1===o?1:-1,m=u*(c.getAltitude(d)-c.getAltitude(h));m<0&&(h=this._endPosition,d=this._startPosition);const g="geodesic"===r?new f(this._startPosition,this._endPosition,c.spatialReference):new _$2(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=g,this._updateSegmentStripeLength(l),i){case 1:this._updateSegment(g,o);break;case 2:this._updateSegmentAndTriangle({view:e,camera:t,segment:g,orientation:o,startPosition:h,endPosition:d,deltaSign:u,altitudeDelta:m});break;case 3:this._updateSegmentAndProjection({view:e,orientation:o,startPosition:h,endPosition:d});}}_updateSegment(e,t){this._segmentLabel.anchor=1===t?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"};}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:n,endPosition:a,deltaSign:o,altitudeDelta:r}){const l=this._cornerPosition;e.worldUpAtPosition(n,l),d$2(l,l,o*Math.abs(r)),u$2(l,l,n),this._triangleVisualElement.geometry=[[[n[0],n[1],n[2]],[l[0],l[1],l[2]],[a[0],a[1],a[2]]]],this._rightAngleQuad.geometry={previous:n,center:l,next:a};const c=new _$2(n,l),h=new _$2(l,a),d=F(n,a,l,s,t);this._segmentLabel.anchor=d.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._verticalLabel.anchor=d.vertical,this._horizontalLabel.geometry={type:"segment",segment:h,sampleLocation:"center"},this._horizontalLabel.anchor=d.horizontal;}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const n=new f(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(n),this._geodesicStartHint.setGeometryFromSegment(new _$2(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new _$2(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:n,sampleLocation:"center"},this._segmentLabel.anchor=1===t?"top":"bottom";}_updateLabelText({text:e,visualizedMeasurement:t}){r$2(e)?(this._segmentLabel.text="euclidean"===t?e.euclideanDistance:e.geodesicDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels");}_updateLabelVisibility({state:e,visible:t,viewMode:i}){if(1!==e)return;const s=this._segmentLabel,n=this._horizontalLabel,a=this._verticalLabel;if(s.visible=!1,n.visible=!1,a.visible=!1,t)switch(i){case 1:case 3:s.visible=!0;break;case 2:s.visible=!0,n.visible=!0,a.visible=!0;}}get _labelsText(){if(1!==this._state)return null;const e=this.messages,t=this.analysisView.result;if(t$5(t)||t$5(e))return null;const{directDistance:i,horizontalDistance:s$1,verticalDistance:n,geodesicDistance:o,geodesicAngle:r}=t,g=this.analysisView.unit,p=e=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(g){case"metric":return p({euclideanDistance:i&&f$1(e,i),geodesicDistance:o&&f$1(e,o),horizontalDistance:s$1&&f$1(e,s$1),verticalDistance:n&&s(e,n)});case"imperial":return p({euclideanDistance:i&&h$1(e,i),geodesicDistance:o&&h$1(e,o),horizontalDistance:s$1&&h$1(e,s$1),verticalDistance:n&&b$1(e,n)});case"degrees":{const t=r&&l$2(e,r,"degrees");return p({euclideanDistance:t,geodesicDistance:t,horizontalDistance:t})}case"degrees-minutes-seconds":return p({horizontalDistance:r&&g$6(r)});default:return p({euclideanDistance:i&&l$2(e,i,g),geodesicDistance:o&&l$2(e,o,g),horizontalDistance:s$1&&l$2(e,s$1,g),verticalDistance:n&&l$2(e,n,g)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;r$2(e)?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1;}get _actualVisualElementsOrientation(){if(r$2(this._triangleOrientationOverride))return this._triangleOrientationOverride;const e=this.visualElementOrientation;return 0===e?this.view.state.camera.aboveGround?1:2:e}_requiresGeodesicGuideAt(e){const t=this.view;if(null==t||!t.state)return !1;const i=t.state.camera,s=t.renderCoordsHelper,n=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/n>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(t$5(e))return null;let i=null;const n=e.directDistance;switch(t){case"metric":i=n&&n.toUnit("meters");break;case"imperial":i=n&&n.toUnit(O(n.value,n.unit));break;case"degrees":case"degrees-minutes-seconds":{const t=e.geodesicAngle;i=t&&t.toUnit("degrees");break}default:i=n&&n.toUnit(t);}if(t$5(i))return null;return f$2(i.value/30)*("degrees"===i.unit?p$4(this.view.spatialReference).metersPerDegree:D(1,i.unit,"meters"))}_updateMessageBundle(){this.loadingMessages=!0,u$3("esri/core/t9n/Units").then((e=>{this.messages=e;})).finally((()=>{this.loadingMessages=!1;}));}};function F(e,t,i,s,n){const a=B,o=I;n.projectToRenderScreen(i,a),n.projectToRenderScreen(t,o);const r={segment:"bottom",horizontal:"top",vertical:a[0]<o[0]?"left":"right"};{const s=J,a=K;if(k(e,i,s,n),k(e,t,a,n),j$1(s,a)>=q){const e=Math.sign(s[1])===Math.sign(a[1]);r.segment=e?g$7(r.vertical):r.vertical;}else {const e=N;k(i,t,e,n),j$1(e,a)>=q&&(r.segment=Math.sign(e[0])===Math.sign(a[0])?g$7(r.horizontal):r.horizontal);}}if(2===s){const e=e=>"top"===e?"bottom":"top";r.segment=e(r.segment),r.horizontal=e(r.horizontal),r.vertical=e(r.vertical);}return r}e([d$1()],T.prototype,"_state",void 0),e([d$1()],T.prototype,"_triangleOrientationOverride",void 0),e([d$1()],T.prototype,"messages",void 0),e([d$1()],T.prototype,"view",void 0),e([d$1()],T.prototype,"analysis",void 0),e([d$1()],T.prototype,"analysisView",void 0),e([d$1()],T.prototype,"ready",null),e([d$1()],T.prototype,"loadingMessages",void 0),e([d$1()],T.prototype,"visible",null),e([d$1()],T.prototype,"viewMode",null),e([d$1()],T.prototype,"actualVisualizedMeasurement",null),e([d$1()],T.prototype,"visualElementOrientation",void 0),e([d$1()],T.prototype,"triangleCollapseRatioThreshold",void 0),e([d$1()],T.prototype,"allowVisualElementsOrientationChange",null),e([d$1()],T.prototype,"labels",null),e([d$1()],T.prototype,"testData",null),e([d$1()],T.prototype,"_labelsText",null),e([d$1()],T.prototype,"_actualVisualElementsOrientation",null),e([d$1()],T.prototype,"_measurementArrowStripeLength",null),T=e([i("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],T);const W=r$3(1,.5,0,.75),Q={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:W,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:W,guideLineWidth:2,guideLineColor:W,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},q=Math.cos(M(12)),B=x$1(),I=x$1(),J=s$1(),K=s$1(),N=s$1();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let G=class extends p$2{constructor(e){super(e),this._unitNormalizer=new t$6,this._handles=new u$1,this._tempStartPosition=n$3(),this._tempEndPosition=n$3(),this._tempCornerPosition=n$3();}initialize(){this._handles.add(a$2(this.view,"ready",(()=>this._initialize()),!0));}destroy(){this._handles=l$1(this._handles);}_initialize(){const e=this.view.spatialReference,t=O$1(e),i=t===G$1?R$1:t;this._sphericalPCPF=i;const s=tn(e,i);this._unitNormalizer.spatialReference=s?i:e,this._handles.add([i$1((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyElevationAlignment(t);}),p$3),i$1((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyElevationAlignment(t);}),p$3),i$1((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e;}),p$3)]);}_applyElevationAlignment(e){if(t$5(e)||e.hasZ)return e;const t=e.clone();return t.z=c$5(i$2(this.view.elevationProvider,t),0),t}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.viewData;if(t$5(e)||t$5(t))return null;const i=this._euclideanDistances(e,t),s=this._exactGeodesicDistanceAndAngle(e,t,i.horizontal.value);let o=null;switch(this.viewData.measurementMode){case 0:{var r;o="euclidean";const e=this.viewData.unit,t=(null==(r=i.horizontal)?void 0:r.value)>this.analysis.geodesicDistanceThreshold;("degrees"===e||"degrees-minutes-seconds"===e||t)&&(o="geodesic");break}case 1:o="euclidean";break;case 2:o="geodesic";}return {distance:"euclidean"===o?i.direct:s.distance,mode:o,directDistance:i.direct,horizontalDistance:i.horizontal,verticalDistance:i.vertical,geodesicDistance:s.distance,geodesicAngle:s.angle}}_euclideanDistances(e,t){const i=e.clone();i.z=t.z;const s=this._tempStartPosition,o=this._tempEndPosition,r=this._tempCornerPosition,a=this.view.spatialReference,n=this._sphericalPCPF,c=tn(a,n)?n:a;wn(e,s,c),wn(t,o,c),wn(i,r,c);const d=q$2(s,o),m=q$2(r,o),p=Math.abs(t.z-e.z),h=e=>this._unitNormalizer.normalizeDistance(e),u=h(d),g=h(m),f=h(p);return {direct:new e$4(u,"meters"),horizontal:new e$4(g,"meters"),vertical:new e$4(f,"meters")}}_exactGeodesicDistanceAndAngle(e,t,i){const s=e.spatialReference,o=new m$3({spatialReference:s});o.addPath([e,t]);const r=s.isGeographic&&m$4(s)?M$1([o],"meters")[0]:s.isWebMercator?C$1(o,"meters"):void 0,{distance:a,angle:n}=r?{distance:r,angle:this._fallbackGeodesicAngle(r,s)}:this._fallbackGeodesicDistance(e,t,i);return {distance:new e$4(a,"meters"),angle:new e$4(n,"degrees")}}_fallbackGeodesicAngle(e,t){return e/p$4(t).metersPerDegree}_fallbackGeodesicDistance(e,t,i){if(En(e,S)){En(t,U);const e=M(S[0]),i=M(S[1]),a=M(U[0]),n=M(U[1]),c=Math.abs(a-e),l=l$3(Math.sin(i)*Math.sin(n)+Math.cos(i)*Math.cos(n)*Math.cos(c)),d=m$5(l),m={distance:0};return R(m,[S[0],S[1]],[U[0],U[1]]),{distance:m.distance,angle:d}}const a=e.spatialReference,n=i;return {distance:n,angle:this._fallbackGeodesicAngle(n,a)}}};e([d$1()],G.prototype,"view",void 0),e([d$1()],G.prototype,"analysis",void 0),e([d$1()],G.prototype,"viewData",void 0),e([d$1()],G.prototype,"_computedResult",null),G=e([i("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],G);const S=n$3(),U=n$3();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let p=class extends(e$5(p$2)){constructor(t){super(t),this.type="direct-line-measurement-view-3d",this.result=null,this.measurementMode=0,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null;}initialize(){const t=this.view,e=this.analysis;this._analysisVisualization=new T({view:t,analysis:e,analysisView:this}),this._analysisController=new G({view:t,analysis:e,viewData:this});}destroy(){this._analysisController=l$1(this._analysisController),this._analysisVisualization=l$1(this._analysisVisualization);}whenReady(){return this._analysisVisualization.whenReady()}get updating(){var t;return !(null==(t=this._analysisVisualization)||!t.loadingMessages)}get viewMode(){return this._analysisVisualization.viewMode}get visualizedMeasurement(){return this.measurementMode}set visualizedMeasurement(t){this.measurementMode=t;}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(t){this._analysisVisualization.visualElementOrientation=t;}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(t){this._analysisVisualization.allowVisualElementsOrientationChange=t;}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(t){this._analysisVisualization.triangleCollapseRatioThreshold=t;}get directLabelText(){return this._analysisVisualization.labels.direct.text}get horizontalLabelText(){return this._analysisVisualization.labels.horizontal.text}get verticalLabelText(){return this._analysisVisualization.labels.vertical.text}get testData(){var t;return this.destroyed?{labels:null,stripeLength:null,visualization:null,controller:null}:{...null==(t=this._analysisVisualization)?void 0:t.testData,visualization:this._analysisVisualization,controller:this._analysisController}}get unit(){return c$5(this.analysis.unit,this._defaultUnit)}};e([d$1()],p.prototype,"updating",null),e([d$1()],p.prototype,"type",void 0),e([d$1()],p.prototype,"analysis",void 0),e([d$1()],p.prototype,"result",void 0),e([d$1()],p.prototype,"measurementMode",void 0),e([d$1()],p.prototype,"elevationAlignedStartPoint",void 0),e([d$1()],p.prototype,"elevationAlignedEndPoint",void 0),e([d$1({readOnly:!0})],p.prototype,"viewMode",null),e([d$1()],p.prototype,"visualizedMeasurement",null),e([d$1({readOnly:!0})],p.prototype,"actualVisualizedMeasurement",null),e([d$1()],p.prototype,"visualElementOrientation",null),e([d$1()],p.prototype,"allowVisualElementsOrientationChange",null),e([d$1()],p.prototype,"triangleCollapseRatioThreshold",null),e([d$1({readOnly:!0})],p.prototype,"directLabelText",null),e([d$1({readOnly:!0})],p.prototype,"horizontalLabelText",null),e([d$1({readOnly:!0})],p.prototype,"verticalLabelText",null),e([d$1()],p.prototype,"testData",null),e([d$1()],p.prototype,"_analysisVisualization",void 0),e([d$1()],p.prototype,"_analysisController",void 0),e([d$1()],p.prototype,"unit",null),e([d$1(e$6)],p.prototype,"_defaultUnit",void 0),p=e([i("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementView3D")],p);const y=p;

const DirectLineMeasurementView3D = /*#__PURE__*/Object.freeze({
  __proto__: null,
  'default': y
});

export { DirectLineMeasurementView3D as D, o };
