import { s, br as E, a as i, e, d as d$1, i as i$1 } from './messageBundle-f75b4090.js';
import { t } from './VoxelWasmManager-11d4154e.js';
import { p as p$1 } from './LayerView3D-ad87e12d.js';
import { u } from './LayerView-f319a853.js';
import './index-b157fcf2.js';
import './mathUtils-e16f9389.js';
import './common-d5b993de.js';
import './reactiveUtils-8f9c3a3d.js';
import './intersectorUtils-8d04b3d1.js';
import './mat4-f34c6460.js';
import './mat4f64-677a419d.js';
import './vec4f64-2ec4ac08.js';
import './boundedPlane-030abe8d.js';
import './vectorStacks-9205ea46.js';
import './quatf64-b9feea68.js';
import './vec2f64-35868783.js';
import './lineSegment-4881dbd9.js';
import './plane-f3c19202.js';
import './sphere-c3d60863.js';
import './mathUtils-8e5ad7fe.js';
import './utils-c65673fb.js';
import './Util-68fde664.js';
import './vec2-5672471e.js';
import './doublePrecisionUtils-68dc07e3.js';
import './symbols-b414aa72.js';
import './enumeration-d3301938.js';
import './opacityUtils-5e864561.js';
import './geometry-7e07b1ba.js';
import './Symbol-cad56b52.js';
import './Color-d1b9b54f.js';
import './colorUtils-37750ea3.js';
import './screenUtils-9bb7e30c.js';
import './aaBoundingBox-876621e6.js';
import './aaBoundingRect-9468599b.js';
import './persistableUrlUtils-40bbec67.js';
import './Portal-c5cfa317.js';
import './ColorMaterial-cf44e08d.js';
import './Texture-1e5e4be2.js';
import './mat3-6a23d9ad.js';
import './quat-2d7a417b.js';
import './vec3f32-109cf143.js';
import './Texture-f0375c04.js';
import './FramebufferObject-3d2e79da.js';
import './BlendLayer-38b8abf7.js';
import './geometryDataUtils-7e4c8d4a.js';
import './BufferView-35ef10d7.js';
import './OrderIndependentTransparency-3e6c26be.js';
import './InterleavedLayout-4358b016.js';
import './types-c8f64c05.js';
import './ElevationInfo-be94499b.js';
import './lengthUtils-f033d4fe.js';
import './unitUtils-38774114.js';
import './projection-f3d8779d.js';
import './geodesicConstants-54cb88d4.js';
import './dehydratedFeatures-7a1dd0b3.js';
import './byteSizeEstimations-b3396570.js';
import './quantizationUtils-e08f723c.js';
import './jsonUtils-13b1f6fd.js';
import './Field-bfaa8af9.js';
import './fieldType-66a19d8a.js';
import './floatRGBA-7e1629d8.js';
import './triangulationUtils-501cc2c4.js';
import './earcut-05cd758b.js';
import './deduplicate-c3c4ee02.js';
import './Graphic-3961df6c.js';
import './PopupTemplate-6e5ecad2.js';
import './Identifiable-da047c47.js';
import './vec2f32-29d55de5.js';
import './glUtil-240efd97.js';
import './MemCache-78a9f000.js';
import './Scheduler-3464f717.js';
import './debugFlags-e9d86cce.js';
import './asyncUtils-fe35d349.js';
import './featureConversionUtils-cbd79ea2.js';
import './OptimizedFeature-44d5df5b.js';
import './OptimizedFeatureSet-27736f1f.js';
import './vec33-df10f43c.js';
import './visualVariableUtils-26c41ea6.js';
import './sizeVariableUtils-4d3662df.js';
import './objectResourceUtils-46d77106.js';
import './devEnvironmentUtils-9331429c.js';
import './DefaultMaterial_COLOR_GAMMA-f230b01e.js';
import './compilerUtils-848c8917.js';
import './Version-9295fea2.js';
import './utils-c84cc443.js';
import './ItemCache-5d2cf877.js';
import './utils-f8425723.js';
import './callExpressionWithFeature-e06d2f0b.js';
import './MeshComponent-3b6a4fdf.js';
import './screenshotUtils-f9728729.js';
import './projection-5f2268ed.js';
import './heightModelInfoUtils-b573abf5.js';
import './HeightModelInfo-1a6d7a08.js';
import './arcgisLayerUrl-49ef2818.js';
import './HandleOwner-88326c19.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let d=class extends(p$1(u)){constructor(){super(...arguments),this.type="voxel-3d",this._wasmLayerId=-1;}initialize(){if("local"!==this.view.viewingMode)throw new s("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if("webgl2"!==this.view._stage.renderView.renderingContext.webglVersion)throw new s("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});const e=this.layer.spatialReference;if(!E(e,this.view.spatialReference))throw new s("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const t$1=t.getInstance(),i$1=t$1.addLayer(this.view,this).then((e=>{this._wasmLayerId=e,this._suspendedHandle=i(this,"suspended",(e=>{t.getInstance().setLayerEnabled(this.view,this,!e);}));})).catch((e=>{if(t$1.removeLayer(this.view,this),this._wasmLayerId=-1,-1===e)throw new s("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(-2===e)throw new s("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})}));this.addResolvingPromise(i$1);}destroy(){t.getInstance().removeLayer(this.view,this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null);}isUpdating(){return !(this._wasmLayerId<0)&&t.getInstance().isUpdating(this.view,this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating");}};e([d$1()],d.prototype,"layer",void 0),e([d$1({readOnly:!0,aliasOf:"layer.parsedUrl.path"})],d.prototype,"baseUrl",void 0),d=e([i$1("esri.views.3d.layers.VoxelLayerView3D")],d);const p=d;

export default p;
