import{c9 as e,aa as t,O as s,a5 as r,e as i,d as o,i as l,r as a}from"./p-9ae46e68.js";import{b5 as n,o as p,M as u,af as m,ap as d,aU as c,ax as y,Y as h}from"./p-566b0715.js";import{l as v,b as f}from"./p-8e6daf54.js";import{i as S}from"./p-c59d0a4d.js";import{y as j}from"./p-cf8dc9be.js";import{w as b}from"./p-5c89c68e.js";import{n as g}from"./p-0c91ebaf.js";import{s as C}from"./p-72355290.js";import{j as x,c as G,f as w}from"./p-f271906a.js";import"./p-84bf99cb.js";import"./p-fe01b82b.js";import"./p-3a5fe179.js";import"./p-138c2b2c.js";import"./p-57ae469d.js";import"./p-725fd184.js";import"./p-79553c8d.js";import"./p-c5b7f7c3.js";const P=["atom","xml"],k={base:m,key:"type",typeMap:{"simple-line":d},errorContext:"symbol"},F={base:m,key:"type",typeMap:{"picture-marker":c,"simple-marker":y},errorContext:"symbol"},M={base:m,key:"type",typeMap:{"simple-fill":h},errorContext:"symbol"};let R=class extends(S(g(j(b(C(v(f))))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{var t;const s=e.layerDefinition.drawingInfo.renderer.symbol;s&&"esriSFS"===s.type&&null!=(t=s.outline)&&t.style.includes("esriSFS")&&(s.outline.style="esriSLSSolid")})),t.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const t=this._get("title");return t&&"defaults"!==this.originOf("title")?t:this.url?e(this.url,P)||"GeoRSS":t||""}set title(e){this._set("title",e)}load(e){const s=a(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(t).then((()=>this._fetchService(s))).then((e=>{this.read(e,{origin:"service"})}))),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){var t;const i=this.spatialReference,{data:o}=await s(r.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:n(i)?void 0:null!=(t=i.wkid)?t:JSON.stringify(i)},signal:e});return o}_hasGeometry(e){var t,s;return null!=(t=null==(s=this.featureCollections)?void 0:s.some((t=>{var s,r;return(null==(s=t.featureSet)?void 0:s.geometryType)===e&&(null==(r=t.featureSet.features)?void 0:r.length)>0})))&&t}};i([o()],R.prototype,"description",void 0),i([o()],R.prototype,"featureCollections",void 0),i([p("service","featureCollections",["featureCollection.layers"])],R.prototype,"readFeatureCollections",null),i([o({type:u,json:{name:"lookAtExtent"}})],R.prototype,"fullExtent",void 0),i([o(x)],R.prototype,"id",void 0),i([o(G)],R.prototype,"legendEnabled",void 0),i([o({types:k,json:{write:!0}})],R.prototype,"lineSymbol",void 0),i([o({type:["show","hide"]})],R.prototype,"listMode",void 0),i([o({types:F,json:{write:!0}})],R.prototype,"pointSymbol",void 0),i([o({types:M,json:{write:!0}})],R.prototype,"polygonSymbol",void 0),i([o({type:["GeoRSS"]})],R.prototype,"operationalLayerType",void 0),i([o(w)],R.prototype,"url",void 0),i([o({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],R.prototype,"title",null),i([o({readOnly:!0,json:{read:!1},value:"geo-rss"})],R.prototype,"type",void 0),R=i([l("esri.layers.GeoRSSLayer")],R);const E=R;export default E;