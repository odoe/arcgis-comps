import{c as t,e,d as s,a2 as r,a3 as a,i,h as l,b as n,aj as o,af as u,az as h,a$ as p,Q as c,b1 as m,s as d,A as f}from"./p-e58503d5.js";import{a as y}from"./p-e654504b.js";import{B as I,p as w}from"./p-efbca0ca.js";import v from"./p-0eb619a6.js";const b=t.getLogger("esri.layers.mixins.PortalLayer"),g=t=>{let g=class extends t{constructor(){super(...arguments),this.resourceReferences={portalItem:null,paths:[]},this.userHasEditingPrivileges=!0}destroy(){var t;null==(t=this.portalItem)||t.destroy(),this.portalItem=null}set portalItem(t){t!==this._get("portalItem")&&(this.removeOrigin("portal-item"),this._set("portalItem",t))}readPortalItem(t,e,s){if(e.itemId)return new v({id:e.itemId,portal:s&&s.portal})}writePortalItem(t,e){t&&t.id&&(e.itemId=t.id)}async loadFromPortal(t,e){if(this.portalItem&&this.portalItem.id)try{const s=await import("./p-5e8844f3.js").then((function(t){return t.l}));return l(e),await s.load({instance:this,supportedTypes:t.supportedTypes,validateItem:t.validateItem,supportsData:t.supportsData},e)}catch(t){throw n(t)||b.warn(`Failed to load layer (${this.title}, ${this.id}) portal item (${this.portalItem.id})\n  ${t}`),t}}async finishLoadEditablePortalLayer(t){this._set("userHasEditingPrivileges",await this.fetchUserHasEditingPrivileges(t).catch((t=>(o(t),!0))))}async fetchUserHasEditingPrivileges(t){const e=this.url?null==h?void 0:h.findCredential(this.url):null;if(!e)return!0;const s=P.credential===e?P.user:await this.fetchEditingUser(t);return P.credential=e,P.user=s,u(s)||null==s.privileges||s.privileges.includes("features:user:edit")}async fetchEditingUser(t){var e,s;const r=null==(e=this.portalItem)||null==(s=e.portal)?void 0:s.user;if(r)return r;const a=h.findServerInfo(this.url);if(null==a||!a.owningSystemUrl)return null;const i=`${a.owningSystemUrl}/sharing/rest`,l=I.getDefault();if(l&&l.loaded&&p(l.restUrl)===p(i))return l.user;const n=`${i}/community/self`,o=f(t)?t.signal:null,u=await y(c(n,{authMode:"no-prompt",query:{f:"json"},signal:o}));return u.ok?w.fromJSON(u.value.data):null}read(t,e){e&&(e.layer=this),super.read(t,e)}write(t,e){const s=e&&e.portal,r=this.portalItem&&this.portalItem.id&&(this.portalItem.portal||I.getDefault());return s&&r&&!m(r.restUrl,s.restUrl)?(e.messages&&e.messages.push(new d("layer:cross-portal",`The layer '${this.title} (${this.id})' cannot be persisted because it refers to an item on a different portal than the one being saved to. To save the scene, set the layer.portalItem to null or save the scene to the same portal as the item associated with the layer`,{layer:this})),null):super.write(t,{...e,layer:this})}};return e([s({type:v})],g.prototype,"portalItem",null),e([r("web-document","portalItem",["itemId"])],g.prototype,"readPortalItem",null),e([a("web-document","portalItem",{itemId:{type:String}})],g.prototype,"writePortalItem",null),e([s()],g.prototype,"resourceReferences",void 0),e([s({readOnly:!0})],g.prototype,"userHasEditingPrivileges",void 0),g=e([i("esri.layers.mixins.PortalLayer")],g),g},P={credential:null,user:null};export{g as w}