import{bX as t,dh as s,eP as e,W as r,dp as i,dF as a,dM as o,N as h,a7 as n,ct as p,aH as c,s as u}from"./p-c8bc3433.js";import{m as d}from"./p-0610e8d0.js";import{g as m,f as l}from"./p-099e7dab.js";import{V as f}from"./p-c140f468.js";import{O as y,L as j}from"./p-126136cf.js";import{d as w}from"./p-b2408d11.js";import{B as b}from"./p-e8bb7a86.js";import"./p-84bf99cb.js";import"./p-e9338c35.js";import"./p-96687495.js";import"./p-50ff864e.js";import"./p-b4d5c79c.js";import"./p-06d309e6.js";import"./p-429d3db0.js";import"./p-fb037d4e.js";import"./p-3fd7e064.js";import"./p-023664b3.js";import"./p-9a8fa752.js";export default class{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async o=>{const{objectIdField:h}=this._queryEngine,n=await b(this._getFeatureUrl,this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((t=>t.name)),signal:o});await y(n),t(o);const p=j(n,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:h});if(!s(this._queryEngine.spatialReference,e))for(const t of p)r(t.geometry)&&(t.geometry=i(m(a(t.geometry,this._queryEngine.geometryType,!1,!1),e,this._queryEngine.spatialReference)));let c=1;for(const t of p){const s={};w(this._fieldsIndex,s,t.attributes,!0),t.attributes=s,null==t.attributes[h]&&(t.objectId=t.attributes[h]=c++)}return p}}destroy(){var t;null==(t=this._queryEngine)||t.destroy(),this._queryEngine=null}async load(s,e){const{getFeatureUrl:r,getFeatureOutputFormat:i,spatialReference:a,fields:n,geometryType:p,featureType:c,objectIdField:u,customParameters:m}=s;this._featureType=c,this._customParameters=m,this._getFeatureUrl=r,this._getFeatureOutputFormat=i,this._fieldsIndex=new o(n),await this._checkProjection(a),t(e),this._queryEngine=new f({fields:n,geometryType:p,hasM:!1,hasZ:!1,objectIdField:u,spatialReference:a,timeInfo:null,featureStore:new d({geometryType:p,hasM:!1,hasZ:!1})});const l=await this._snapshotFeatures(h(e.signal));return this._queryEngine.featureStore.addMany(l),{extent:this._queryEngine.fullExtent}}async applyEdits(){throw new n("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,s.signal)}async queryFeatureCount(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,s.signal)}async queryObjectIds(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,s.signal)}async queryExtent(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,s.signal)}async querySnapping(t,s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,s.signal)}async refresh(t){var s;return this._customParameters=t,null==(s=this._snapshotTask)||s.abort(),this._snapshotTask=p(this._snapshotFeatures),this._snapshotTask.promise.then((t=>{this._queryEngine.featureStore.clear(),t&&this._queryEngine.featureStore.addMany(t)}),(t=>{this._queryEngine.featureStore.clear(),c(t)||u.getLogger("esri.layers.WFSLayer").error(new n("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:t}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(t){try{await l(e,t)}catch{throw new n("unsupported-projection","Projection not supported",{spatialReference:t})}}}