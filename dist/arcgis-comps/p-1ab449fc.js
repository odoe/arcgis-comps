import{A as e,_ as r,a0 as i,e as a,d as t,a3 as n,i as o,ba as s,a6 as l,s as y,bb as c}from"./p-e58503d5.js";import{y as p,s as d}from"./p-7a5bfd29.js";import{p as u}from"./p-8a919d07.js";import{x as S}from"./p-a6c8fb32.js";import{r as m}from"./p-765e6c28.js";const w={"web-scene/operational-layers":{ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISMapServiceLayer:!0,ArcGISSceneServiceLayer:!0,ArcGISTiledElevationServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BuildingSceneLayer:!0,GroupLayer:!0,IntegratedMeshLayer:!0,OGCFeatureLayer:!0,PointCloudLayer:!0,WebTiledLayer:!0,CSV:!0,GeoJSON:!0,VectorTileLayer:!0,WFS:!0,WMS:!0,KML:!0,RasterDataLayer:!0,Voxel:!0},"web-scene/basemap":{ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,WebTiledLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,ArcGISImageServiceLayer:!0,WMS:!0,ArcGISMapServiceLayer:!0},"web-scene/ground":{ArcGISTiledElevationServiceLayer:!0,RasterDataElevationLayer:!0},"web-map/operational-layers":{ArcGISFeatureLayer:!0,ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISStreamLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,BingMapsAerial:!0,BingMapsHybrid:!0,BingMapsRoad:!0,CSV:!0,GeoRSS:!0,GeoJSON:!0,GroupLayer:!0,KML:!0,OGCFeatureLayer:!0,SubtypeGroupLayer:!0,VectorTileLayer:!0,WFS:!0,WMS:!0,WebTiledLayer:!0},"web-map/basemap":{ArcGISImageServiceLayer:!0,ArcGISImageServiceVectorLayer:!0,ArcGISMapServiceLayer:!0,ArcGISTiledImageServiceLayer:!0,ArcGISTiledMapServiceLayer:!0,OpenStreetMap:!0,VectorTileLayer:!0,WMS:!0,WebTiledLayer:!0,BingMapsAerial:!0,BingMapsRoad:!0,BingMapsHybrid:!0},"web-map/tables":{ArcGISFeatureLayer:!0},"portal-item/operational-layers":{ArcGISSceneServiceLayer:!0,PointCloudLayer:!0,BuildingSceneLayer:!0,IntegratedMeshLayer:!0}};function g(r){if(!r)return r;const{start:i,end:a}=r;return new p({start:e(i)?d(i,-i.getTimezoneOffset(),"minutes"):i,end:e(a)?d(a,-a.getTimezoneOffset(),"minutes"):a})}function v(r){if(!r)return r;const{start:i,end:a}=r;return new p({start:e(i)?d(i,i.getTimezoneOffset(),"minutes"):i,end:e(a)?d(a,a.getTimezoneOffset(),"minutes"):a})}const L={type:Boolean,value:!0,json:{origins:{service:{read:!1,write:!1},"web-map":{read:!1,write:!1}},name:"screenSizePerspective",write:!0}},b={type:Boolean,value:!0,json:{name:"disablePopup",read:{reader:(e,r)=>!r.disablePopup},write:{enabled:!0,writer(e,r,i){r[i]=!e}}}},I={type:Boolean,value:!0,json:{name:"showLabels",write:!0}},f={type:String,json:{origins:{"portal-item":{write:!1}},write:{isRequired:!0,ignoreOrigin:!0,writer:u}}},G={type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}},A={value:null,type:S,json:{origins:{service:{name:"elevationInfo",write:!0}},name:"layerDefinition.elevationInfo",write:!0}};function T(e){return{type:e,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}}}const M={type:Number,json:{origins:{"web-document":{write:!0,read:!0},"portal-item":{write:!0}}}},h={...M,json:{...M.json,origins:{"web-document":{...M.json.origins["web-document"],write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}}}},read:{source:["layerDefinition.drawingInfo.transparency","drawingInfo.transparency"],reader:(e,r,i)=>i&&"service"!==i.origin||!r.drawingInfo||void 0===r.drawingInfo.transparency?r.layerDefinition&&r.layerDefinition.drawingInfo&&void 0!==r.layerDefinition.drawingInfo.transparency?m(r.layerDefinition.drawingInfo.transparency):void 0:m(r.drawingInfo.transparency)}}},j={type:p,readOnly:!0,get(){var e,r;if(null==(e=this.layer)||!e.timeInfo)return null;const{datesInUnknownTimezone:i,timeOffset:a,useViewTime:t}=this.layer,n=null==(r=this.view)?void 0:r.timeExtent;let o=this.layer.timeExtent;i&&(o=v(o));let s=t?n&&o?n.intersection(o):n||o:o;if(!s||s.isEmpty||s.isAllTime)return s;a&&(s=s.offset(-a.value,a.unit)),i&&(s=g(s));const l=this._get("timeExtent");return s.equals(l)?l:s}},O={type:r,readOnly:!0,json:{origins:{service:{read:{source:["fullExtent","spatialReference"],reader:(e,a)=>{const t=r.fromJSON(e);return null!=a.spatialReference&&"object"==typeof a.spatialReference&&(t.spatialReference=i.fromJSON(a.spatialReference)),t}}}},read:!1}},B={type:String,json:{origins:{service:{read:!1},"portal-item":{read:!1}}}},N={type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.minScale"},write:{target:"layerDefinition.minScale"}}},R={type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.maxScale"},write:{target:"layerDefinition.maxScale"}}},V=e=>{let r=class extends e{constructor(){super(...arguments),this.title=null}writeListMode(e,r,i,a){(a&&"ground"===a.layerContainerType||e&&s(this,i,{},a))&&(r[i]=e)}writeOperationalLayerType(e,r,i,a){!e||a&&"tables"===a.layerContainerType||(r.layerType=e)}writeTitle(e,r){r.title=e||"Layer"}read(e,r){r&&(r.layer=this),l(this,e,(r=>super.read(e,r)),r)}write(e,r){if(null!=r&&r.origin){const e=`${r.origin}/${r.layerContainerType||"operational-layers"}`,a=w[e];let t=a&&a[this.operationalLayerType];var i;if("ArcGISTiledElevationServiceLayer"===this.operationalLayerType&&"web-scene/operational-layers"===e&&(t=!1),!t)return null==(i=r.messages)||i.push(new y("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this})),null}const a=super.write(e,{...r,layer:this}),t=!!r&&!!r.messages&&!!r.messages.filter((e=>e instanceof y&&"web-document-write:property-required"===e.name)).length;var n;return c(null==a?void 0:a.url)?(null==r||null==(n=r.messages)||n.push(new y("layer:invalid-url",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' using a Blob URL cannot be written to web scenes and web maps`,{layer:this})),null):!this.url&&t?null:a}beforeSave(){}};return a([t({type:String,json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0}},"portal-item":{write:!1}}}})],r.prototype,"id",void 0),a([t({json:{write:{ignoreOrigin:!0},origins:{"web-map":{read:!1,write:!1}}}})],r.prototype,"listMode",void 0),a([n("listMode")],r.prototype,"writeListMode",null),a([t({type:String,readOnly:!0,json:{read:!1,write:{target:"layerType",ignoreOrigin:!0},origins:{"portal-item":{write:!1}}}})],r.prototype,"operationalLayerType",void 0),a([n("operationalLayerType")],r.prototype,"writeOperationalLayerType",null),a([t(M)],r.prototype,"opacity",void 0),a([t({type:String,json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0},origins:{"web-scene":{write:{isRequired:!0,ignoreOrigin:!0,writerEnsuresNonNull:!0}},"portal-item":{write:!1}}},value:"Layer"})],r.prototype,"title",void 0),a([n("title")],r.prototype,"writeTitle",null),a([t({type:Boolean,json:{name:"visibility",origins:{"web-document":{name:"visibility",default:!0},"portal-item":{name:"visibility",read:{source:["visible","visibility"]}}}}})],r.prototype,"visible",void 0),r=a([o("esri.layers.mixins.OperationalLayer")],r),r};function W(e){return"operationalLayerType"in e}export{R as I,T as a,N as b,G as c,A as d,M as e,f,j as g,B as j,L as l,I as m,b as p,W as u,O as v,h as w,V as y}