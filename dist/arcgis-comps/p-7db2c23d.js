import{e as i,d as s,i as e,S as t}from"./p-e58503d5.js";import{t as r,n as h}from"./p-efbca0ca.js";import{u as a}from"./p-a63f7978.js";import"./p-53bb6ab4.js";import"./p-7731c620.js";import"./p-5d962998.js";import"./p-8747982c.js";let l=class extends a{constructor(i){super(i),this.type="group",this.layerViews=new t}initialize(){this.handles.add([this.layerViews.on("change",(i=>this._layerViewsChangeHandler(i))),this.layerViews.on("after-changes",(()=>this._layerViewsAfterChangesHandler())),this.layer.watch("visibilityMode",(()=>this._visibilityModeHandler()),!0),this.watch("visible",(()=>this._visibleHandler()),!0)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]}),this._layerViewsAfterChangesHandler()}set layerViews(i){this._set("layerViews",h(i,this._get("layerViews")))}isUpdating(){return this.layerViews.some((i=>i.updating))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce(((i,s)=>i+s.updatingProgress),0)/this.layerViews.length}_hasLayerViewVisibleOverrides(){return this.layerViews.some((i=>i._isOverridden("visible")))}_findLayerViewForLayer(i){return i&&this.layerViews.find((s=>s.layer===i))}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find((i=>{const s=this._findLayerViewForLayer(i);return s&&s.visible}));return i&&this._findLayerViewForLayer(i)}_enforceExclusiveVisibility(i){this._hasLayerViewVisibleOverrides()&&(i||!(i=this._firstVisibleOnLayerOrder())&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.getItemAt(0))),this.layerViews.forEach((s=>{s.visible=s===i})))}_layerViewsChangeHandler(i){this.handles.remove("grouplayerview:visible"),this.handles.add(this.layerViews.map((i=>i.watch("visible",(s=>this._layerViewVisibleHandler(s,i)),!0))).toArray(),"grouplayerview:visible");const s=i.added[i.added.length-1];let e=null;s&&s.visible&&(e=s),this._enforceVisibility(e)}_layerViewsAfterChangesHandler(){this.handles.remove("grouplayerview:updating"),this.handles.add(this.layerViews.map((i=>i.watch("updating",(()=>this._updateUpdating()),!0))).toArray(),"grouplayerview:updating"),this._updateUpdating()}_enforceVisibility(i){if(this._hasLayerViewVisibleOverrides())switch(this.layer.visibilityMode){case"inherited":{const i=this.visible;this.layerViews.forEach((s=>{s.visible=i}));break}case"exclusive":this._enforceExclusiveVisibility(i)}}_visibilityModeHandler(){this._enforceVisibility()}_layerViewVisibleHandler(i,s){if(this._hasLayerViewVisibleOverrides())switch(this.layer.visibilityMode){case"inherited":i!==this.visible&&(s.visible=this.visible);break;case"exclusive":this._enforceExclusiveVisibility(i&&s)}}_visibleHandler(){var i;this._hasLayerViewVisibleOverrides()&&"inherited"===(null==(i=this.layer)?void 0:i.visibilityMode)&&this._enforceVisibility()}_updateUpdating(){this.notifyChange("updating")}};i([s({cast:r})],l.prototype,"layerViews",null),i([s()],l.prototype,"view",void 0),i([s({readOnly:!0})],l.prototype,"updatingProgress",null),l=i([e("esri.views.layers.GroupLayerView")],l);const n=l;export default n;