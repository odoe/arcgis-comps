import{a as o}from"./p-e654504b.js";import{cL as e,T as r,h as n,s as t}from"./p-e58503d5.js";import{getSiblingOfSameTypeI as s}from"./p-4f86c37f.js";async function c(o,c,a){if(!c||!c.resources)return;const w=c.portalItem===o.portalItem?new Set(o.paths):new Set;o.paths.length=0,o.portalItem=c.portalItem;const u=new Set(c.resources.toKeep.map((o=>o.resource.path))),m=new Set,p=[];u.forEach((e=>{w.delete(e),o.paths.push(e)}));for(const r of c.resources.toUpdate)if(w.delete(r.resource.path),u.has(r.resource.path)||m.has(r.resource.path)){const{resource:n,content:t,finish:c,error:f}=r,w=s(n,e());o.paths.push(w.path),p.push(i({resource:w,content:t,finish:c,error:f},a))}else o.paths.push(r.resource.path),p.push(f(r,a)),m.add(r.resource.path);for(const e of c.resources.toAdd)p.push(i(e,a)),o.paths.push(e.resource.path);if(w.forEach((o=>{const e=c.portalItem.resourceFromPath(o);p.push(e.portalItem.removeResource(e).catch((()=>{})))})),0===p.length)return;const S=await r(p);n(a);const h=S.filter((o=>"error"in o)).map((o=>o.error));if(h.length>0)throw new t("save:resources","Failed to save one or more resources",{errors:h})}async function i(e,r){const n=await o(e.resource.portalItem.addResource(e.resource,e.content,r));if(!0!==n.ok)throw e.error&&e.error(n.error),n.error;e.finish&&e.finish(e.resource)}async function f(e,r){const n=await o(e.resource.update(e.content,r));if(!0!==n.ok)throw e.error(n.error),n.error;e.finish(e.resource)}export{c as a}