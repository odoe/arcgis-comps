import{e as t,u as e,af as i,A as s,d as n,i as r,p as a,k as o,F as l,ai as h,G as c,aW as d}from"./p-e58503d5.js";import{v as u,f as p,_ as v,l as g,c as m,h as w,d as f,i as b,s as y,k as C,j as D,t as L,e as O,b as M}from"./p-b9873014.js";import{e as S}from"./p-e06536a7.js";import{o as z,a as _,c as E,_ as P,I as x,q as j,a9 as A,d as V,u as T,a8 as R,M as k,m as G,l as W}from"./p-2f398ed1.js";import{i as I,p as F}from"./p-5d962998.js";import{x as q,s as N}from"./p-fb38a9d0.js";import{O as Q,p as B,D as H,a as U,R as $,d as J}from"./p-01e5a461.js";import{j as K}from"./p-e6fe5d89.js";import{n as X}from"./p-d3105731.js";import{r as Y}from"./p-09dd2137.js";import{c as Z,m as tt}from"./p-c96ccdbf.js";import{e as et}from"./p-2c84c65f.js";import{n as it}from"./p-4d38e149.js";import{c as st}from"./p-3c70d22f.js";import{P as nt,aS as rt,i as at}from"./p-340cd100.js";import{A as ot}from"./p-a72732f2.js";import{n as lt,t as ht,e as ct,b as dt,c as ut,d as pt,o as vt,k as gt,a7 as mt,f as wt,aa as ft,ar as bt,ad as yt}from"./p-eb48bb01.js";import{g as Ct,u as Dt,c as Lt,l as Ot,r as Mt}from"./p-bdf9e611.js";import{y as St}from"./p-e1aac252.js";import{geodesicLength as zt}from"./p-2f16d655.js";import{m as _t}from"./p-b79fcce3.js";import{t as Et,w as Pt,c as xt}from"./p-c93d2280.js";import{m as jt,M as At,R as Vt}from"./p-df35b79d.js";function Tt(){const t=new lt;t.vertex.uniforms.add("proj","mat4").add("view","mat4").add("width","float"),t.attributes.add("position","vec3"),t.attributes.add("normal","vec3"),t.attributes.add("uv0","vec2"),t.attributes.add("auxpos1","float"),t.varyings.add("vtc","vec2"),t.varyings.add("vlength","float"),t.varyings.add("vradius","float"),t.vertex.code.add(ht`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),t.fragment.uniforms.add("outlineSize","float").add("outlineColor","vec4").add("stripeLength","float").add("stripeEvenColor","vec4").add("stripeOddColor","vec4");const e=1/Math.sqrt(2);return t.fragment.code.add(ht`
    const float INV_SQRT2 = ${ht.float(e)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      gl_FragColor = color;
    }
  `),t}const Rt=Object.freeze({__proto__:null,build:Tt});class kt extends ut{constructor(t,e,i){super(t,e,i)}initializeProgram(t){const e=kt.shader.get().build();return new pt(t.rctx,e,vt)}bindPass(t,e){gt(this.program,e.camera.projectionMatrix),this.program.setUniform1f("width",t.width),this.program.setUniform1f("outlineSize",t.outlineSize),this.program.setUniform4fv("outlineColor",t.outlineColor),this.program.setUniform1f("stripeLength",t.stripeLength),this.program.setUniform4fv("stripeEvenColor",t.stripeEvenColor),this.program.setUniform4fv("stripeOddColor",t.stripeOddColor)}bindDraw(t){mt(this.program,t),this.program.rebindTextures()}setPipelineState(t){return Ct({blending:this.configuration.transparent?3===t?Dt:Lt(t):null,polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:513},depthWrite:Ot,colorWrite:Mt})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return 5}}kt.shader=new wt(Rt,(()=>import("./p-f726a52a.js")));class Gt extends dt{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=3}}t([ct()],Gt.prototype,"polygonOffsetEnabled",void 0),t([ct()],Gt.prototype,"transparent",void 0),t([ct({count:4})],Gt.prototype,"transparencyPassType",void 0);class Wt extends ft{constructor(t){super(t,Ft),this.techniqueConfig=new Gt}getTechniqueConfig(t,e){var i;return this.techniqueConfig.polygonOffsetEnabled=this.parameters.polygonOffset,this.techniqueConfig.transparent=this.parameters.stripeEvenColor[3]<1||this.parameters.stripeOddColor[3]<1||this.parameters.outlineColor[3]<1,this.techniqueConfig.transparencyPassType=null!=(i=null==e?void 0:e.transparencyPassType)?i:3,this.techniqueConfig}dispose(){}getPassParameters(){return this.parameters}intersect(){}requiresSlot(t){return 2===t}createGLMaterial(t){return 0===t.output?new It(t):null}createBufferWriter(){return new $t}}class It extends bt{updateParameters(t){return this.ensureTechnique(kt,t)}beginSlot(t){return this.updateParameters(t)}bind(t,e){e.bindPass(this._material.getPassParameters(),t)}}const Ft={width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1,...yt},qt=ot().vec3f("position").vec3f("normal").vec2f("uv0").f32("auxpos1"),Nt=X(),Qt=X(),Bt=X(),Ht=X(),Ut=X();class $t{constructor(){this.vertexBufferLayout=qt}allocate(t){return this.vertexBufferLayout.createBuffer(t)}elementCount(t){return 2*(t.indices.get("position").length/2+1)}write(t,e,i,s){const n=e.vertexAttributes.get("position").data,r=e.vertexAttributes.get("normal").data,a=n.length/3,o=e&&e.indices&&e.indices.get("position");o&&o.length!==2*(a-1)&&console.warn("MeasurementArrowMaterial does not support indices");const l=Nt,h=Qt,c=Bt,d=Ht,u=Ut,p=t.transformation,v=t.invTranspTransformation,g=i.position,m=i.normal,w=i.uv0;let f=0;for(let t=0;t<a;++t){const e=3*t;if(z(l,n[e],n[e+1],n[e+2]),t<a-1){const e=3*(t+1);z(h,n[e],n[e+1],n[e+2]),z(u,r[e],r[e+1],r[e+2]),_(u,u),E(c,h,l),_(c,c),P(d,u,c),_(d,d)}const i=j(l,h);p&&v&&(x(l,l,p),x(h,h,p),x(d,d,v));const o=s+2*t,b=o+1;g.setVec(o,l),g.setVec(b,l),m.setVec(o,d),m.setVec(b,d),w.set(o,0,f),w.set(o,1,-1),w.set(b,0,f),w.set(b,1,1),t<a-1&&(f+=i)}const b=i.auxpos1;for(let t=0;t<2*a;++t)b.set(s+t,f)}}class Jt extends Z{constructor(t){super(t),this._parameters=Kt,this._handles=null,this._origin=X(),this._originTransform=et(),this._arrowCenter=X(),this._renderOccluded=4,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._opacity=1,this.applyProps(t)}get renderOccluded(){return this._renderOccluded}set renderOccluded(t){t!==this._renderOccluded&&(this._renderOccluded=t,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:t}))}get geometry(){return this._geometry}set geometry(t){this._geometry=t,this.geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(t){this._stripeLength=t,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(t){if(this._stripesEnabled=t,this.attached){const t=this.opacity,{arrowStripeEvenColor:e,arrowStripeOddColor:i}=this._parameters,s=A(Xt,this._stripesEnabled?e:i,t);this._arrowMaterial.setParameters({stripeEvenColor:s})}}get opacity(){return this._opacity}set opacity(t){t!==this._opacity&&(this._opacity=t,this._updateArrowOpacity())}createExternalResources(){const{arrowStripeEvenColor:t,arrowStripeOddColor:i,arrowOutlineColor:s}=this._parameters;this._arrowMaterial=new Wt({outlineColor:s,stripeEvenColor:this._stripesEnabled?t:i,stripeOddColor:i,renderOccluded:this.renderOccluded,polygonOffset:!0}),this._handles=new e,this._handles.add(this.view.state.watch("camera",(()=>{this.viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles.destroy(),this._handles=null}forEachExternalMaterial(t){t(this._arrowMaterial)}createGeometries(t){if(i(this._geometry)||i(this._geometry.startRenderSpace)||i(this._geometry.endRenderSpace))return;const e=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);t.addGeometry(e,this._arrowMaterial,this._originTransform),this.viewChanged()}_createArrowGeometry(t,e,i,s){const n=this.view.renderCoordsHelper,r=[],a=[],o=(t,e)=>{const s=st.get();E(s,t,i),r.push(s),a.push(e)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const i=st.get();n.worldUpAtPosition(this._arrowCenter,i),o(t,i),o(e,i)}else{s.eval(.5,this._arrowCenter);const t=this._parameters.arrowSubdivisions+1&-2;for(let e=0;e<t;++e){const i=e/(t-1),r=st.get(),a=st.get();s.eval(i,r),n.worldUpAtPosition(r,a),o(r,a)}}return nt.createPolylineGeometry(r,a)}geometryChanged(){this.recreateGeometry()}viewChanged(){if(this.view.ready&&this.attached&&s(this._geometry)){const t=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._parameters.arrowWidth*t})}}_updateArrowOpacity(){const t=this.opacity,{arrowStripeEvenColor:e,arrowStripeOddColor:i,arrowOutlineColor:s}=this._parameters,n=A(Xt,this._stripesEnabled?e:i,t),r=A(Yt,s,t),a=A(Zt,i,t);this._arrowMaterial.setParameters({stripeEvenColor:n,outlineColor:r,stripeOddColor:a})}}const Kt={arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128},Xt=it(),Yt=it(),Zt=it();let te=class extends a{constructor(t){super(t),this._params={...ie},this._handles=new e,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=X(),this._endPosition=X(),this._cornerPosition=X(),this._startPositionAtSeaLevel=X(),this._endPositionAtSeaLevel=X(),this._state=0,this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=0,this.triangleCollapseRatioThreshold=.03}get ready(){return 1===this._state}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e}=this.analysisView;if(i(t)||i(e)||t.equals(e))return 0;const s=this.analysisView.result;if(i(s))return 1;if("geodesic"===s.mode)return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?3:1;const{verticalDistance:n,horizontalDistance:r}=s,a=n.value,o=r.value;return Math.min(a/o,o/a)<this.triangleCollapseRatioThreshold?1:2}get actualVisualizedMeasurement(){return i(this.analysisView.result)?2===this.analysisView.measurementMode?"geodesic":"euclidean":this.analysisView.result.mode}get allowVisualElementsOrientationChange(){return i(this._triangleOrientationOverride)}set allowVisualElementsOrientationChange(t){i(this._triangleOrientationOverride)!==t&&(this._triangleOrientationOverride=i(this._triangleOrientationOverride)?this._actualVisualElementsOrientation:null)}get labels(){return{direct:this._segmentLabel,horizontal:"geodesic"===this.actualVisualizedMeasurement?this._segmentLabel:this._horizontalLabel,vertical:this._verticalLabel}}get testData(){var t;return{labels:this.labels,stripeLength:null==(t=this._segmentVisualElement)?void 0:t.stripeLength}}initialize(){this._handles.add(o(this.view,"ready",(()=>this._initialize()),!0))}_initialize(){switch(this._state){case 1:throw new Error("invalid state");case 2:return}const t=this._params,e={attached:!0,view:this.view};this._segmentVisualElement=new Jt({...e,geometry:null,renderOccluded:4}),this._triangleVisualElement=new tt({...e,width:t.triangleLineWidth,color:t.triangleColor,renderOccluded:4}),this._rightAngleQuad=new St({...e,color:ee,renderOccluded:4});const i={...e,polygonOffset:!0,stippleIntegerRepeats:!1,renderOccluded:4};this._projectedGeodesicLine=new tt({...i,width:t.geodesicProjectionLineWidth,color:t.geodesicProjectionLineColor,stipplePattern:rt(t.guideStippleLengthPixels)}),this._geodesicStartHint=new tt({...i,width:t.guideLineWidth,color:t.geodesicProjectionLineColor,stipplePattern:rt(t.guideStippleLengthPixels)}),this._geodesicEndHint=new tt({...i,width:t.guideLineWidth,color:t.geodesicProjectionLineColor,stipplePattern:rt(t.guideStippleLengthPixels)}),this._segmentLabel=new u({...e,fontSize:t.direcLabelFontSize}),this._verticalLabel=new u({...e,fontSize:t.verticalLabelFontSize}),this._horizontalLabel=new u({...e,fontSize:t.horizontalLabelFontSize}),this._handles.add([I((()=>{const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e}=this.analysisView,i=this.view;return{view:i,camera:i.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:t,elevationAlignedEndPoint:e,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}}),(t=>this._updateGeometryAndViewMode(t)),F),I((()=>({visible:this.visible,viewMode:this.viewMode})),(t=>this._updateVisualElementVisibility(t)),F),I((()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement})),(t=>this._updateLabelText(t)),F),I((()=>({visible:this.visible,viewMode:this.viewMode,state:this._state})),(t=>this._updateLabelVisibility(t)),F),I((()=>this._measurementArrowStripeLength),(t=>this._updateSegmentStripeLength(t)),F),l((async()=>this._updateMessageBundle()))]),this._state=1,this._updateMessageBundle()}destroy(){2!==this._state&&(this._handles=h(this._handles),this._segmentVisualElement=h(this._segmentVisualElement),this._triangleVisualElement=h(this._triangleVisualElement),this._rightAngleQuad=h(this._rightAngleQuad),this._projectedGeodesicLine=h(this._projectedGeodesicLine),this._geodesicStartHint=h(this._geodesicStartHint),this._geodesicEndHint=h(this._geodesicEndHint),this._segmentLabel=h(this._segmentLabel),this._verticalLabel=h(this._verticalLabel),this._horizontalLabel=h(this._horizontalLabel),this.set("view",null),this._state=2)}async whenReady(){await o(this,"ready")}_updateVisualElementVisibility({visible:t,viewMode:e}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,t)switch(e){case 0:break;case 1:this._segmentVisualElement.visible=!0;break;case 2:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case 3:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:t,camera:e,viewMode:s,elevationAlignedStartPoint:n,elevationAlignedEndPoint:r,orientation:a,visualizedMeasurement:o,stripeLength:l}){const h=t.renderCoordsHelper;if(i(n)||i(r)||n.equals(r))return;let c=this._startPosition,d=this._endPosition;h.toRenderCoords(n,c),h.toRenderCoords(r,d);const u=1===a?1:-1,g=u*(h.getAltitude(d)-h.getAltitude(c));g<0&&(c=this._endPosition,d=this._startPosition);const m="geodesic"===o?new p(this._startPosition,this._endPosition,h.spatialReference):new v(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=m,this._updateSegmentStripeLength(l),s){case 1:this._updateSegment(m,a);break;case 2:this._updateSegmentAndTriangle({view:t,camera:e,segment:m,orientation:a,startPosition:c,endPosition:d,deltaSign:u,altitudeDelta:g});break;case 3:this._updateSegmentAndProjection({view:t,orientation:a,startPosition:c,endPosition:d})}}_updateSegment(t,e){this._segmentLabel.anchor=1===e?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:t,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:t},camera:e,segment:i,orientation:s,startPosition:n,endPosition:r,deltaSign:a,altitudeDelta:o}){const l=this._cornerPosition;t.worldUpAtPosition(n,l),V(l,l,a*Math.abs(o)),T(l,l,n),this._triangleVisualElement.geometry=[[[n[0],n[1],n[2]],[l[0],l[1],l[2]],[r[0],r[1],r[2]]]],this._rightAngleQuad.geometry={previous:n,center:l,next:r};const h=new v(n,l),c=new v(l,r),d=function(t,e,i,s,n){const r=ne,a=re;n.projectToRenderScreen(i,r),n.projectToRenderScreen(e,a);const o={segment:"bottom",horizontal:"top",vertical:r[0]<a[0]?"left":"right"};{const s=ae,r=oe;if(C(t,i,s,n),C(t,e,r,n),K(s,r)>=se){const t=Math.sign(s[1])===Math.sign(r[1]);o.segment=t?D(o.vertical):o.vertical}else{const t=le;C(i,e,t,n),K(t,r)>=se&&(o.segment=Math.sign(t[0])===Math.sign(r[0])?D(o.horizontal):o.horizontal)}}if(2===s){const t=t=>"top"===t?"bottom":"top";o.segment=t(o.segment),o.horizontal=t(o.horizontal),o.vertical=t(o.vertical)}return o}(n,r,l,s,e);this._segmentLabel.anchor=d.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:h,sampleLocation:"center"},this._verticalLabel.anchor=d.vertical,this._horizontalLabel.geometry={type:"segment",segment:c,sampleLocation:"center"},this._horizontalLabel.anchor=d.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:t},orientation:e,startPosition:i,endPosition:s}){t.setAltitude(this._startPositionAtSeaLevel,0,i),t.setAltitude(this._endPositionAtSeaLevel,0,s);const n=new p(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,t.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(n),this._geodesicStartHint.setGeometryFromSegment(new v(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new v(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:n,sampleLocation:"center"},this._segmentLabel.anchor=1===e?"top":"bottom"}_updateLabelText({text:t,visualizedMeasurement:e}){s(t)?(this._segmentLabel.text="euclidean"===e?t.euclideanDistance:t.geodesicDistance,this._horizontalLabel.text=t.horizontalDistance,this._verticalLabel.text=t.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({state:t,visible:e,viewMode:i}){if(1!==t)return;const s=this._segmentLabel,n=this._horizontalLabel,r=this._verticalLabel;if(s.visible=!1,n.visible=!1,r.visible=!1,e)switch(i){case 1:case 3:s.visible=!0;break;case 2:s.visible=!0,n.visible=!0,r.visible=!0}}get _labelsText(){if(1!==this._state)return null;const t=this.messages,e=this.analysisView.result;if(i(e)||i(t))return null;const{directDistance:s,horizontalDistance:n,verticalDistance:r,geodesicDistance:a,geodesicAngle:o}=e,l=this.analysisView.unit,h=t=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...t});switch(l){case"metric":return h({euclideanDistance:s&&b(t,s),geodesicDistance:a&&b(t,a),horizontalDistance:n&&b(t,n),verticalDistance:r&&y(t,r)});case"imperial":return h({euclideanDistance:s&&w(t,s),geodesicDistance:a&&w(t,a),horizontalDistance:n&&w(t,n),verticalDistance:r&&f(t,r)});case"degrees":{const e=o&&g(t,o,"degrees");return h({euclideanDistance:e,geodesicDistance:e,horizontalDistance:e})}case"degrees-minutes-seconds":return h({horizontalDistance:o&&m(o)});default:return h({euclideanDistance:s&&g(t,s,l),geodesicDistance:a&&g(t,a,l),horizontalDistance:n&&g(t,n,l),verticalDistance:r&&g(t,r,l)})}}_updateSegmentStripeLength(t){const e=this._segmentVisualElement;s(t)?(e.stripeLength=t,e.stripesEnabled=!0):e.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(s(this._triangleOrientationOverride))return this._triangleOrientationOverride;const t=this.visualElementOrientation;return 0===t?this.view.state.camera.aboveGround?1:2:t}_requiresGeodesicGuideAt(t){const e=this.view;if(null==e||!e.state)return!1;const i=e.renderCoordsHelper,s=e.state.camera.computeScreenPixelSizeAt(t);return i.getAltitude(t)/s>=10}get _measurementArrowStripeLength(){const{result:t,unit:e}=this.analysisView;if(i(t))return null;let s=null;const n=t.directDistance;switch(e){case"metric":s=n&&n.toUnit("meters");break;case"imperial":s=n&&n.toUnit(Q(n.value,n.unit));break;case"degrees":case"degrees-minutes-seconds":{const e=t.geodesicAngle;s=e&&e.toUnit("degrees");break}default:s=n&&n.toUnit(e)}return i(s)?null:R(s.value/30)*("degrees"===s.unit?B(this.view.spatialReference).metersPerDegree:H(1,s.unit,"meters"))}_updateMessageBundle(){this.loadingMessages=!0,c("esri/core/t9n/Units").then((t=>{this.messages=t})).finally((()=>{this.loadingMessages=!1}))}};t([n()],te.prototype,"_state",void 0),t([n()],te.prototype,"_triangleOrientationOverride",void 0),t([n()],te.prototype,"messages",void 0),t([n()],te.prototype,"view",void 0),t([n()],te.prototype,"analysis",void 0),t([n()],te.prototype,"analysisView",void 0),t([n()],te.prototype,"ready",null),t([n()],te.prototype,"loadingMessages",void 0),t([n()],te.prototype,"visible",null),t([n()],te.prototype,"viewMode",null),t([n()],te.prototype,"actualVisualizedMeasurement",null),t([n()],te.prototype,"visualElementOrientation",void 0),t([n()],te.prototype,"triangleCollapseRatioThreshold",void 0),t([n()],te.prototype,"allowVisualElementsOrientationChange",null),t([n()],te.prototype,"labels",null),t([n()],te.prototype,"testData",null),t([n()],te.prototype,"_labelsText",null),t([n()],te.prototype,"_actualVisualElementsOrientation",null),t([n()],te.prototype,"_measurementArrowStripeLength",null),te=t([r("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],te);const ee=Y(1,.5,0,.75),ie={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:ee,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:ee,guideLineWidth:2,guideLineColor:ee,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},se=Math.cos(k(12)),ne=q(),re=q(),ae=N(),oe=N(),le=N();let he=class extends a{constructor(t){super(t),this._unitNormalizer=new L,this._handles=new e,this._tempStartPosition=X(),this._tempEndPosition=X(),this._tempCornerPosition=X()}initialize(){this._handles.add(o(this.view,"ready",(()=>this._initialize()),!0))}destroy(){this._handles=h(this._handles)}_initialize(){const t=this.view.spatialReference,e=J(t),i=e===U?$:e;this._sphericalPCPF=i;const s=Et(t,i);this._unitNormalizer.spatialReference=s?i:t,this._handles.add([I((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:t,startPoint:e})=>{t.elevationAlignedStartPoint=this._applyElevationAlignment(e)}),F),I((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:t,endPoint:e})=>{t.elevationAlignedEndPoint=this._applyElevationAlignment(e)}),F),I((()=>({result:this._computedResult,viewData:this.viewData})),(({result:t,viewData:e})=>{e.result=t}),F)])}_applyElevationAlignment(t){if(i(t)||t.hasZ)return t;const e=t.clone();return e.z=d(at(this.view.elevationProvider,e),0),e}get _computedResult(){const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e}=this.viewData;if(i(t)||i(e))return null;const s=this._euclideanDistances(t,e),n=this._exactGeodesicDistanceAndAngle(t,e,s.horizontal.value);let r=null;switch(this.viewData.measurementMode){case 0:{var a;r="euclidean";const t=this.viewData.unit,e=(null==(a=s.horizontal)?void 0:a.value)>this.analysis.geodesicDistanceThreshold;("degrees"===t||"degrees-minutes-seconds"===t||e)&&(r="geodesic");break}case 1:r="euclidean";break;case 2:r="geodesic"}return{distance:"euclidean"===r?s.direct:n.distance,mode:r,directDistance:s.direct,horizontalDistance:s.horizontal,verticalDistance:s.vertical,geodesicDistance:n.distance,geodesicAngle:n.angle}}_euclideanDistances(t,e){const i=t.clone();i.z=e.z;const s=this._tempStartPosition,n=this._tempEndPosition,r=this._tempCornerPosition,a=this.view.spatialReference,o=this._sphericalPCPF,l=Et(a,o)?o:a;Pt(t,s,l),Pt(e,n,l),Pt(i,r,l);const h=j(s,n),c=j(r,n),d=Math.abs(e.z-t.z),u=t=>this._unitNormalizer.normalizeDistance(t),p=u(h),v=u(c),g=u(d);return{direct:new O(p,"meters"),horizontal:new O(v,"meters"),vertical:new O(g,"meters")}}_exactGeodesicDistanceAndAngle(t,e,i){const s=t.spatialReference,n=new _t({spatialReference:s});n.addPath([t,e]);const r=s.isGeographic&&jt(s)?At([n],"meters")[0]:s.isWebMercator?zt(n,"meters"):void 0,{distance:a,angle:o}=r?{distance:r,angle:this._fallbackGeodesicAngle(r,s)}:this._fallbackGeodesicDistance(t,e,i);return{distance:new O(a,"meters"),angle:new O(o,"degrees")}}_fallbackGeodesicAngle(t,e){return t/B(e).metersPerDegree}_fallbackGeodesicDistance(t,e,i){if(xt(t,ce)){xt(e,de);const t=k(ce[0]),i=k(ce[1]),s=k(de[0]),n=k(de[1]),r=Math.abs(s-t),a=W(Math.sin(i)*Math.sin(n)+Math.cos(i)*Math.cos(n)*Math.cos(r)),o=G(a),l={distance:0};return Vt(l,[ce[0],ce[1]],[de[0],de[1]]),{distance:l.distance,angle:o}}return{distance:i,angle:this._fallbackGeodesicAngle(i,t.spatialReference)}}};t([n()],he.prototype,"view",void 0),t([n()],he.prototype,"analysis",void 0),t([n()],he.prototype,"viewData",void 0),t([n()],he.prototype,"_computedResult",null),he=t([r("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],he);const ce=X(),de=X();let ue=class extends(S(a)){constructor(t){super(t),this.type="direct-line-measurement-view-3d",this.result=null,this.measurementMode=0,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const t=this.view,e=this.analysis;this._analysisVisualization=new te({view:t,analysis:e,analysisView:this}),this._analysisController=new he({view:t,analysis:e,viewData:this})}destroy(){this._analysisController=h(this._analysisController),this._analysisVisualization=h(this._analysisVisualization)}whenReady(){return this._analysisVisualization.whenReady()}get updating(){var t;return!(null==(t=this._analysisVisualization)||!t.loadingMessages)}get viewMode(){return this._analysisVisualization.viewMode}get visualizedMeasurement(){return this.measurementMode}set visualizedMeasurement(t){this.measurementMode=t}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(t){this._analysisVisualization.visualElementOrientation=t}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(t){this._analysisVisualization.allowVisualElementsOrientationChange=t}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(t){this._analysisVisualization.triangleCollapseRatioThreshold=t}get directLabelText(){return this._analysisVisualization.labels.direct.text}get horizontalLabelText(){return this._analysisVisualization.labels.horizontal.text}get verticalLabelText(){return this._analysisVisualization.labels.vertical.text}get testData(){var t;return this.destroyed?{labels:null,stripeLength:null,visualization:null,controller:null}:{...null==(t=this._analysisVisualization)?void 0:t.testData,visualization:this._analysisVisualization,controller:this._analysisController}}get unit(){return d(this.analysis.unit,this._defaultUnit)}};t([n()],ue.prototype,"updating",null),t([n()],ue.prototype,"type",void 0),t([n()],ue.prototype,"analysis",void 0),t([n()],ue.prototype,"result",void 0),t([n()],ue.prototype,"measurementMode",void 0),t([n()],ue.prototype,"elevationAlignedStartPoint",void 0),t([n()],ue.prototype,"elevationAlignedEndPoint",void 0),t([n({readOnly:!0})],ue.prototype,"viewMode",null),t([n()],ue.prototype,"visualizedMeasurement",null),t([n({readOnly:!0})],ue.prototype,"actualVisualizedMeasurement",null),t([n()],ue.prototype,"visualElementOrientation",null),t([n()],ue.prototype,"allowVisualElementsOrientationChange",null),t([n()],ue.prototype,"triangleCollapseRatioThreshold",null),t([n({readOnly:!0})],ue.prototype,"directLabelText",null),t([n({readOnly:!0})],ue.prototype,"horizontalLabelText",null),t([n({readOnly:!0})],ue.prototype,"verticalLabelText",null),t([n()],ue.prototype,"testData",null),t([n()],ue.prototype,"_analysisVisualization",void 0),t([n()],ue.prototype,"_analysisController",void 0),t([n()],ue.prototype,"unit",null),t([n(M)],ue.prototype,"_defaultUnit",void 0),ue=t([r("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementView3D")],ue);const pe=Object.freeze({__proto__:null,default:ue});export{pe as D,Tt as o}