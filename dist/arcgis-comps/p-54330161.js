import{e as t,d as e,i as s,bK as i,a1 as r,A as o,D as l}from"./p-e58503d5.js";import{i as h}from"./p-b79fcce3.js";import{M as u}from"./p-93765525.js";import{j as a}from"./p-8bc9b36a.js";import{d as n}from"./p-c048b814.js";var p;let b=p=class extends r{constructor(...t){super(...t),this.isAggregate=!1,this.layer=null,this.popupTemplate=null,this.sourceLayer=null,Object.defineProperty(this,"uid",{value:i(),configurable:!0})}normalizeCtorArgs(t,e,s,i){return t&&!t.declaredClass?t:{geometry:t,symbol:e,attributes:s,popupTemplate:i}}set attributes(t){const e=this._get("attributes");e!==t&&(this._set("attributes",t),this._notifyLayer("attributes",e,t))}set geometry(t){const e=this._get("geometry");e!==t&&(this._set("geometry",t),this._notifyLayer("geometry",e,t))}set symbol(t){const e=this._get("symbol");e!==t&&(this._set("symbol",t),this._notifyLayer("symbol",e,t))}set visible(t){const e=this._get("visible");e!==t&&(this._set("visible",t),this._notifyLayer("visible",e,t))}getEffectivePopupTemplate(t=!1){if(this.popupTemplate)return this.popupTemplate;for(const e of[this.sourceLayer,this.layer])if(e){if("popupTemplate"in e&&e.popupTemplate)return e.popupTemplate;if(t&&"defaultPopupTemplate"in e&&o(e.defaultPopupTemplate))return e.defaultPopupTemplate}return null}getAttribute(t){return this.attributes&&this.attributes[t]}setAttribute(t,e){if(this.attributes){const s=this.getAttribute(t);this.attributes[t]=e,this._notifyLayer("attributes",s,e,t)}else this.attributes={[t]:e},this._notifyLayer("attributes",void 0,e,t)}getObjectId(){return this.sourceLayer&&"objectIdField"in this.sourceLayer&&this.sourceLayer.objectIdField?this.getAttribute(this.sourceLayer.objectIdField):null}toJSON(){return{geometry:o(this.geometry)?this.geometry.toJSON():null,symbol:o(this.symbol)?this.symbol.toJSON():null,attributes:{...this.attributes},popupTemplate:this.popupTemplate&&this.popupTemplate.toJSON()}}clone(){return new p(this.cloneProperties())}notifyGeometryChanged(){this._notifyLayer("geometry",this.geometry,this.geometry)}cloneProperties(){return{attributes:l(this.attributes),geometry:l(this.geometry),layer:this.layer,popupTemplate:this.popupTemplate&&this.popupTemplate.clone(),sourceLayer:this.sourceLayer,symbol:l(this.symbol),visible:this.visible}}_notifyLayer(t,e,s,i){if(!this.layer||!("graphicChanged"in this.layer))return;const r={graphic:this,property:t,oldValue:e,newValue:s};"attributes"===t&&(r.attributeName=i),this.layer.graphicChanged(r)}};t([e({value:null})],b.prototype,"attributes",null),t([e({value:null,types:h,json:{read:n}})],b.prototype,"geometry",null),t([e({type:Boolean})],b.prototype,"isAggregate",void 0),t([e()],b.prototype,"layer",void 0),t([e({type:u})],b.prototype,"popupTemplate",void 0),t([e()],b.prototype,"sourceLayer",void 0),t([e({value:null,types:a})],b.prototype,"symbol",null),t([e({type:Boolean,value:!0})],b.prototype,"visible",null),b=p=t([s("esri.Graphic")],b),(b||(b={})).generateUID=i;const m=b;export{m as h}