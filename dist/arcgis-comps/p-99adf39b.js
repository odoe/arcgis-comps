import{aa as e,U as r,O as i,c7 as s,m as t,r as o,ag as a,e as p,d as n,c as l,i as c}from"./p-9ae46e68.js";import{k as d,o as m,d as f}from"./p-566b0715.js";import{a as u}from"./p-6ebb24ba.js";import{l as h,b as j}from"./p-8e6daf54.js";import{i as y}from"./p-93d9099f.js";import{s as b}from"./p-821d62e2.js";import{f as v,y as g,K as _}from"./p-c93dc681.js";import{p as S}from"./p-d3898fd7.js";import{i as T}from"./p-c59d0a4d.js";import{o as w}from"./p-ae0b06e3.js";import{y as W}from"./p-cf8dc9be.js";import{w as O}from"./p-5c89c68e.js";import{n as R}from"./p-0c91ebaf.js";import{s as B}from"./p-72355290.js";import{d as L,y as k,p as D}from"./p-844dad6c.js";import{f as I}from"./p-f271906a.js";import"./p-84bf99cb.js";import"./p-fe01b82b.js";import"./p-4fd6e394.js";import"./p-abcf0bfd.js";import"./p-523f37cd.js";import"./p-81e5b36e.js";import"./p-4b3ae2cf.js";import"./p-3a2e88bf.js";import"./p-b1a3d539.js";import"./p-b2a0fae5.js";import"./p-94f8dc11.js";import"./p-bb07d873.js";import"./p-8ac97b63.js";import"./p-a0a931f0.js";import"./p-dfc6337f.js";import"./p-77e6a663.js";import"./p-c5b7f7c3.js";import"./p-30ddb3a0.js";import"./p-74fc1b7f.js";import"./p-b3024dec.js";import"./p-4fcbc3c5.js";import"./p-6443bfb4.js";import"./p-2f7c985e.js";import"./p-8e03c038.js";import"./p-32462343.js";import"./p-5a0fe1d0.js";import"./p-cf2267f9.js";import"./p-d2e19070.js";import"./p-e5429b9e.js";import"./p-7818def0.js";import"./p-f42060e0.js";import"./p-79553c8d.js";import"./p-15bb2887.js";import"./p-03d6250d.js";import"./p-2f9d204e.js";import"./p-3a5fe179.js";import"./p-138c2b2c.js";import"./p-57ae469d.js";import"./p-725fd184.js";const M=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let A=class extends(T(v(B(W(O(b(g(S(h(u(R(y(w(j)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(r){const i=o(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(e).then((()=>this._fetchService(i)))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=null==(e=this.parsedUrl)?void 0:e.path.toLowerCase();return r&&this._getDefaultAttribution(this._getMapName(r))}readSpatialReference(e,r){return(e=e||r.tileInfo&&r.tileInfo.spatialReference)&&d.fromJSON(e)}writeSublayers(e,r,i,s){if(!this.loaded||!e)return;const t=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),o=[],a={writeSublayerStructure:!1,...s};t.forEach((e=>{const r=e.write({},a);o.push(r)})),o.some((e=>Object.keys(e).length>1))&&(r.layers=o)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>r(e).path)):null}fetchTile(e,r,s,t={}){const{signal:o}=t,a=this.getTileUrl(e,r,s),p={responseType:"image",signal:o,query:{...this.refreshParameters}};return i(a,p).then((e=>e.data))}getTileUrl(e,r,i){const t=s({...this.parsedUrl.query,blankTile:!(!this.tilemapCache&&this.supportsBlankTile)&&null,...this.customParameters,token:this.apiKey}),o=this.tileServers;return`${o&&o.length?o[r%o.length]:this.parsedUrl.path}/tile/${e}/${r}/${i}${t?"?"+t:""}`}_fetchService(e){return new Promise(((r,s)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new t("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new t("tile-layer:undefined-url","layer's url is not defined");const a=L(this.parsedUrl.path);if(o(a)&&"ImageServer"===a.serverType)throw new t("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");i(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,s)})).then((r=>{if(r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!k(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!D(e))return Promise.reject();const s=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return i(s,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new t("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r&&r[2]}_getDefaultAttribution(e){if(!e)return;let r;e=e.toLowerCase();for(let i=0,s=M.length;i<s;i++)if(r=M[i],r.toLowerCase().indexOf(e)>-1)return a("//static.arcgis.com/attribution/"+r)}_getDefaultTileServers(e){const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),i=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||i?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};p([n({readOnly:!0})],A.prototype,"attributionDataUrl",null),p([n({type:["show","hide","hide-children"]})],A.prototype,"listMode",void 0),p([n({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],A.prototype,"isReference",void 0),p([n({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],A.prototype,"operationalLayerType",void 0),p([n({type:Boolean})],A.prototype,"resampling",void 0),p([n()],A.prototype,"sourceJSON",void 0),p([n({type:d})],A.prototype,"spatialReference",void 0),p([m("spatialReference",["spatialReference","tileInfo"])],A.prototype,"readSpatialReference",null),p([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],A.prototype,"path",void 0),p([n({readOnly:!0})],A.prototype,"sublayers",void 0),p([f("sublayers",{layers:{type:[_]}})],A.prototype,"writeSublayers",null),p([n({json:{read:!1,write:!1}})],A.prototype,"popupEnabled",void 0),p([n()],A.prototype,"tileServers",null),p([l("tileServers")],A.prototype,"castTileServers",null),p([n({readOnly:!0,json:{read:!1}})],A.prototype,"type",void 0),p([n(I)],A.prototype,"url",void 0),A=p([c("esri.layers.TileLayer")],A),A.prototype.fetchTile.__isDefault__=!0;const G=A;export default G;