import{e,d as l,aL as a,ad as i,i as r}from"./p-c8bc3433.js";import{r as n,T as s}from"./p-9497a673.js";const t=t=>{let c=class extends t{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,l){return null!=l.minLOD&&null!=l.maxLOD?e:0}readMaxScale(e,l){return null!=l.minLOD&&null!=l.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,l){return l.capabilities&&l.capabilities.indexOf("Tilemap")>-1?new s({layer:this}):null}};return e([l({json:{read:{source:"copyrightText"}}})],c.prototype,"copyright",void 0),e([l()],c.prototype,"minScale",void 0),e([a("service","minScale")],c.prototype,"readMinScale",null),e([l()],c.prototype,"maxScale",void 0),e([a("service","maxScale")],c.prototype,"readMaxScale",null),e([l({type:i})],c.prototype,"spatialReference",void 0),e([l({readOnly:!0})],c.prototype,"supportsBlankTile",null),e([l(n)],c.prototype,"tileInfo",void 0),e([l()],c.prototype,"tilemapCache",void 0),e([a("service","tilemapCache",["capabilities"])],c.prototype,"readTilemapCache",null),e([l()],c.prototype,"version",void 0),c=e([r("esri.layers.mixins.ArcGISCachedService")],c),c};export{t as s}