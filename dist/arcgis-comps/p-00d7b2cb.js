import{u as e}from"./p-ea916a39.js";import{C as s}from"./p-6484267b.js";import{g as t}from"./p-6d6923ed.js";import{r}from"./p-1ccb0bf6.js";import{G as i}from"./p-1676d4c7.js";import{I as a}from"./p-e3500fdc.js";import{o}from"./p-a2b6db85.js";class n extends r{constructor(e,s,r,i,a,o=null){super(e,s,r,i,a),this.bitmap=new t(o,"standard",!1),this.bitmap.coordScale=[i,a],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy()}beforeRender(e){super.beforeRender(e),this.bitmap.beforeRender(e)}afterRender(e){super.afterRender(e),this.bitmap.afterRender(e)}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}_createTransforms(){return{dvs:s(),tileMat3:s()}}setTransform(e,s){super.setTransform(e,s),this.bitmap.transforms.dvs=this.transforms.dvs}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap&&(this.bitmap.stage=null)}}class p extends o{get requiresDedicatedFBO(){return this.children.some((e=>"additive"===e.bitmap.blendFunction))}createTile(s){const t=this._tileInfoView.getTileBounds(e(),s),[r,i]=this._tileInfoView.tileInfo.size;return new n(s,t[0],t[3],r,i)}destroyTile(){}prepareRenderPasses(e){const s=e.registerRenderPass({name:"bitmap (tile)",brushes:[i.bitmap],target:()=>this.children.map((e=>e.bitmap)),drawPhase:a.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===a.MAP&&super.doRender(e)}}export{p as n}