import{as as e,S as t,Z as s,Q as i,bv as r,e as o,d as a,i as p,u as n,$ as d,aj as m,A as c,af as l,s as h,a2 as y}from"./p-e58503d5.js";import{l as f}from"./p-d208934e.js";import{g as u}from"./p-1907e0bc.js";import{b as j}from"./p-3e39c093.js";import{i as v}from"./p-22c9f19c.js";import{p as g}from"./p-c096b5df.js";import{y as b,d as w}from"./p-1ab449fc.js";import{w as S}from"./p-e44bd0a6.js";import{s as M}from"./p-c6970847.js";import{N as T}from"./p-f8d815f0.js";import{s as L,l as I,u as O,m as x}from"./p-21349208.js";import{f as N}from"./p-b03021c3.js";import{c as V}from"./p-8a919d07.js";import"./p-53bb6ab4.js";import"./p-5f8e8f6c.js";import"./p-b79fcce3.js";import"./p-8747982c.js";import"./p-efbca0ca.js";import"./p-da33e926.js";import"./p-7a5bfd29.js";import"./p-a6c8fb32.js";import"./p-765e6c28.js";import"./p-6b2eb7a7.js";import"./p-01e5a461.js";import"./p-e654504b.js";import"./p-0eb619a6.js";import"./p-389c5380.js";import"./p-afac6fb2.js";import"./p-cbc915be.js";import"./p-21bd46cc.js";import"./p-4f86c37f.js";import"./p-a9a30646.js";import"./p-c93d2280.js";import"./p-2f398ed1.js";import"./p-d3105731.js";import"./p-ccdb8e80.js";import"./p-ea916a39.js";import"./p-fea9512d.js";var A;let D=A=class extends(e(t.ofType(N))){constructor(e){super(e),this.url=null}toJSON(e){return this.toArray().map((t=>t.toJSON(e))).filter((e=>!!e.geometry))}clone(){return new A({url:this.url,items:this.items.map((e=>e.clone()))})}_readModifications(e,t){for(const s of e)this.add(N.fromJSON(s,t))}static fromJSON(e,t){const s=new A;return s._readModifications(e,t),s}static async fromUrl(e,t,o){const a={url:s(e),origin:"service"},p=await i(e,{responseType:"json",signal:r(o,"signal")}),n=t.toJSON(),d=[];for(const e of p.data)d.push(N.fromJSON({...e,geometry:{...e.geometry,spatialReference:n}},a));return new A({url:e,items:d})}};o([a({type:String})],D.prototype,"url",void 0),D=A=o([p("esri.layers.support.SceneModifications")],D);const K=D;let _=class extends(T(g(b(S(M(f(v(j)))))))){constructor(...e){super(...e),this.handles=new n,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this.handles.destroy()}initialize(){this.handles.add(d(this,"modifications","after-changes",(()=>this.modifications=this.modifications),null,null,!0))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readModifications(e,t,s){this._modificationsSource={url:V(e,s),context:s}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=r(e,"signal");try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(e){m(e)}if(await this._fetchService(t),c(this._modificationsSource)){const t=await K.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",t,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(!l(this._modificationsSource))return this.load().then((()=>{}),(()=>{}))}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){return this._debouncedSaveOperations(0,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"})}validateLayer(e){if(e.layerType&&"IntegratedMesh"!==e.layerType)throw new h("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new h("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new h("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};o([a({type:String,readOnly:!0})],_.prototype,"geometryType",void 0),o([a({type:["show","hide"]})],_.prototype,"listMode",void 0),o([a({type:["IntegratedMeshLayer"]})],_.prototype,"operationalLayerType",void 0),o([a({json:{read:!1},readOnly:!0})],_.prototype,"type",void 0),o([a({type:L,readOnly:!0})],_.prototype,"nodePages",void 0),o([a({type:[I],readOnly:!0})],_.prototype,"materialDefinitions",void 0),o([a({type:[O],readOnly:!0})],_.prototype,"textureSetDefinitions",void 0),o([a({type:[x],readOnly:!0})],_.prototype,"geometryDefinitions",void 0),o([a({readOnly:!0})],_.prototype,"serviceUpdateTimeStamp",void 0),o([a({type:K}),u({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],_.prototype,"modifications",void 0),o([y(["web-scene","portal-item"],"modifications")],_.prototype,"readModifications",null),o([a(w)],_.prototype,"elevationInfo",void 0),o([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],_.prototype,"path",void 0),_=o([p("esri.layers.IntegratedMeshLayer")],_);const z=_;export default z;