import{a as t,t as n}from"./p-d3105731.js";function r(t,n){return t[0]=n[0],t[1]=n[1],t}function u(t,n,r){return t[0]=n,t[1]=r,t}function o(t,n,r){return t[0]=n[0]+r[0],t[1]=n[1]+r[1],t}function e(t,n,r){return t[0]=n[0]-r[0],t[1]=n[1]-r[1],t}function c(t,n,r){return t[0]=n[0]*r[0],t[1]=n[1]*r[1],t}function a(t,n,r){return t[0]=n[0]/r[0],t[1]=n[1]/r[1],t}function i(t,n,r){return t[0]=Math.min(n[0],r[0]),t[1]=Math.min(n[1],r[1]),t}function s(t,n,r){return t[0]=Math.max(n[0],r[0]),t[1]=Math.max(n[1],r[1]),t}function f(t,n,r){return t[0]=n[0]*r,t[1]=n[1]*r,t}function M(t,n,r,u){return t[0]=n[0]+r[0]*u,t[1]=n[1]+r[1]*u,t}function h(t,n){const r=n[0]-t[0],u=n[1]-t[1];return Math.sqrt(r*r+u*u)}function l(t,n){const r=n[0]-t[0],u=n[1]-t[1];return r*r+u*u}function d(t){const n=t[0],r=t[1];return Math.sqrt(n*n+r*r)}function m(t){const n=t[0],r=t[1];return n*n+r*r}function p(t,n){return t[0]=-n[0],t[1]=-n[1],t}function q(t,n){const r=n[0],u=n[1];let o=r*r+u*u;return o>0&&(o=1/Math.sqrt(o),t[0]=n[0]*o,t[1]=n[1]*o),t}function g(t,n){return t[0]*n[0]+t[1]*n[1]}function v(t,n,r){const u=n[0]*r[1]-n[1]*r[0];return t[0]=t[1]=0,t[2]=u,t}function _(t,n,r,u){const o=n[0],e=n[1];return t[0]=o+u*(r[0]-o),t[1]=e+u*(r[1]-e),t}function b(t,n,r){const u=n[0],o=n[1];return t[0]=r[0]*u+r[2]*o,t[1]=r[1]*u+r[3]*o,t}function j(t,n,r){const u=n[0],o=n[1];return t[0]=r[0]*u+r[2]*o+r[4],t[1]=r[1]*u+r[3]*o+r[5],t}function x(t,n,r,u){const o=n[0]-r[0],e=n[1]-r[1],c=Math.sin(u),a=Math.cos(u);return t[0]=o*a-e*c+r[0],t[1]=o*c+e*a+r[1],t}function A(t,n){return t[0]===n[0]&&t[1]===n[1]}function y(t,n,r,u,o){let e=n[0]-r[0],c=n[1]-r[1];const a=(u[0]*e+u[1]*c)*(o-1);return e=u[0]*a,c=u[1]*a,t[0]=n[0]+e,t[1]=n[1]+c,t}const D=e;Object.freeze({__proto__:null,copy:r,set:u,add:o,subtract:e,multiply:c,divide:a,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t},min:i,max:s,round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t},scale:f,scaleAndAdd:M,distance:h,squaredDistance:l,length:d,squaredLength:m,negate:p,inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t},normalize:q,dot:g,cross:v,lerp:_,random:function(t,r){r=r||1;const u=2*n()*Math.PI;return t[0]=Math.cos(u)*r,t[1]=Math.sin(u)*r,t},transformMat2:b,transformMat2d:j,transformMat3:function(t,n,r){const u=n[0],o=n[1];return t[0]=r[0]*u+r[3]*o+r[6],t[1]=r[1]*u+r[4]*o+r[7],t},transformMat4:function(t,n,r){const u=n[0],o=n[1];return t[0]=r[0]*u+r[4]*o+r[12],t[1]=r[1]*u+r[5]*o+r[13],t},rotate:x,angle:function(t,n){const r=t[0],u=t[1],o=n[0],e=n[1];let c=r*r+u*u;c>0&&(c=1/Math.sqrt(c));let a=o*o+e*e;a>0&&(a=1/Math.sqrt(a));const i=(r*o+u*e)*c*a;return i>1?0:i<-1?Math.PI:Math.acos(i)},str:function(t){return"vec2("+t[0]+", "+t[1]+")"},exactEquals:A,equals:function(n,r){const u=n[0],o=n[1],e=r[0],c=r[1];return Math.abs(u-e)<=t*Math.max(1,Math.abs(u),Math.abs(e))&&Math.abs(o-c)<=t*Math.max(1,Math.abs(o),Math.abs(c))},projectAndScale:y,len:d,sub:D,mul:c,div:a,dist:h,sqrDist:l,sqrLen:m});export{v as A,y as B,j as D,D as F,x as L,s as M,_,r as a,d as b,h as d,i as f,g as j,A as k,f as l,M as m,e as o,m as p,l as q,u as r,o as s,q as v,p as x,b as z}