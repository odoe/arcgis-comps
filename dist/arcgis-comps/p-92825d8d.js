import{a as t,T as e,e as s,i as r,e$ as i,hl as n,bs as o,h as a,k as c,eG as l,t as h,r as p,fy as d,kj as u,w as f}from"./p-5420851c.js";import{n as m}from"./p-ba8c567b.js";import{o as y,l as g,b,t as j,E as w}from"./p-78327456.js";import{p as T}from"./p-10de1daa.js";import{B as M}from"./p-9315e4d7.js";import"./p-53bb6ab4.js";import"./p-2d0c34e5.js";import"./p-47e1bd73.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-54db165f.js";import"./p-4d140ee3.js";import"./p-97540775.js";import"./p-6e6d0422.js";import"./p-a617738c.js";import"./p-ad5a0ac5.js";import"./p-6189adb6.js";import"./p-13d3a443.js";import"./p-97ec6ae5.js";import"./p-9047f753.js";import"./p-8bf8e457.js";import"./p-7e5e535f.js";import"./p-4d0ba4c4.js";import"./p-dcac8868.js";import"./p-c3fd4463.js";class R{constructor(t){this._remoteClient=t,this._resourceMap=new Map,this._inFlightResourceMap=new Map}destroy(){}async fetchResource(e,s){const r=this._resourceMap,i=r.get(e);if(i)return i;let n=this._inFlightResourceMap.get(e);if(n)return n;try{n=this._remoteClient.invoke("tileRenderer.fetchResource",{url:e},{...s}),this._inFlightResourceMap.set(e,n),n.then((t=>(this._inFlightResourceMap.delete(e),r.set(e,t),t)))}catch(e){return t(e)?null:{width:0,height:0}}return n}getResource(t){var e;return null!=(e=this._resourceMap.get(t))?e:null}}function v(t,e){return(!t.minScale||t.minScale>=e)&&(!t.maxScale||t.maxScale<=e)}function _(t){const e=t.message,s={message:{data:{},tileKey:e.tileKey,tileKeyOrigin:e.tileKeyOrigin},transferList:new Array};for(const t in e.data){const r=e.data[t];if(s.message.data[t]=null,p(r)){const e=r.stride,i=r.indices.slice(0),n=r.vertices.slice(0),o=r.records.slice(0),a={stride:e,indices:i,vertices:n,records:o,metrics:l(r.metrics,(t=>t.slice(0)))};s.transferList.push(i,n,o),s.message.data[t]=a}}return s}e.getLogger("esri.views.2d.layers.features.processors.SymbolProcessor");let K=class extends T{constructor(){super(...arguments),this.type="symbol",this._matchers={feature:null,aggregate:null},this._bufferData=new Map,this._bufferIds=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))]),this._resourceManagerProxy=new R(this.remoteClient)}destroy(){this._resourceManagerProxy.destroy()}get supportsTileUpdates(){return!0}forEachBufferId(t){this._bufferIds.forEach((e=>{e.forEach(t)}))}async update(t,e){const s=e.schema.processors[0];if("symbol"!==s.type)return;const r=i(this._schema,s);n(r,"mesh")&&(o("esri-2d-update-debug")&&console.debug("Applying Update - Processor:",r),t.mesh=!0,t.why.mesh.push("Symbology changed"),this._schema=s,this._factory=this._createFactory(s),this._factory.update(s,this.tileStore.tileScheme.tileInfo))}onTileMessage(t,e,s,r){return a(r),this._onTileData(t,e,s,r)}onTileClear(t){return this._bufferData.delete(t.key.id),this._bufferIds.delete(t.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:{clear:!0}})}onTileError(t,e,s){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:t.id,error:e},{signal:s.signal})}onTileUpdate(t){for(const e of t.removed)this._bufferData.has(e.key.id)&&this._bufferData.delete(e.key.id),this._bufferIds.has(e.key.id)&&this._bufferIds.delete(e.key.id);for(const e of t.added)this._bufferData.forEach((t=>{for(const s of t)s.message.tileKey===e.id&&this._updateTileMesh("append",e,_(s),[],!1,!1,null)}))}_addBufferData(t,e){this._bufferData.has(t)||this._bufferData.set(t,[]),this._bufferData.get(t).push(_(e))}_createFactory(t){const{geometryType:e,objectIdField:s,fields:r}=this.service,i={geometryType:e,fields:r,spatialReference:c.fromJSON(this.spatialReference)},n=new w(((t,e)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",t,e)),this.tileStore.tileScheme.tileInfo),{matcher:o,aggregateMatcher:a}=t.mesh;return this._store=n,this._matchers.feature=y(o,n,i,this._resourceManagerProxy),this._matchers.aggregate=l(a,(t=>y(t,n,i,this._resourceManagerProxy))),new g(e,s,n)}async _onTileData(t,e,s,r){a(r);const{type:i,addOrUpdate:n,remove:o}=e,c=e.end,l=!!this._schema.mesh.sortKey;if(!n)return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:{type:i,addOrUpdate:null,remove:o,clear:!1,end:c,sort:l}},r);const u=this._processFeatures(t,n,s,r);try{const s=await u;if(h(s))return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:{type:i,addOrUpdate:null,remove:o,clear:!1,end:c,sort:l}},r);const n=[];for(const e of s){let s=!1;const r=e.message.bufferIds,i=t.key.id,o=e.message.tileKey;if(i!==o&&p(r)){if(!this.tileStore.get(o)){this._addBufferData(i,e),n.push(e);continue}let t=this._bufferIds.get(o);t||(t=new Set,this._bufferIds.set(o,t));const a=Array.from(r);for(const e of a){if(t.has(e)){s=!0;break}t.add(e)}}s||(this._addBufferData(i,e),n.push(e))}await d(n.map((s=>{const n=t.key.id===s.message.tileKey;return this._updateTileMesh(i,t,s,n?e.remove:[],n&&e.end,e.clear,r.signal)})))}catch(e){this._handleError(t,e,r)}}async _updateTileMesh(t,e,s,r,i,n,o){const c=t,h=s.message.tileKey,p=!!this._schema.mesh.sortKey;h!==e.key.id&&(i=!1);const d=l(s,(t=>t.message)),u=l(s,(t=>t.transferList))||[],m={type:c,addOrUpdate:d,remove:r,clear:!1,end:i,sort:p},y={transferList:f(u)||[],signal:o};return a(y),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:h,data:m},y)}async _processFeatures(t,e,s,r){if(h(e)||!e.hasFeatures)return null;const i={transform:t.transform,hasZ:!1,hasM:!1},n=this._factory,o={viewingMode:"",scale:t.scale},c=await this._matchers.feature,l=await this._matchers.aggregate;a(r);const p=this._getLabelInfos(t,e);return await n.analyze(e.getCursor(),this._resourceManagerProxy,c,l,i,o),a(r),this._writeFeatureSet(t,e,i,p,n,s)}_writeFeatureSet(t,e,s,r,i,n){const o=e.getSize(),a=new b(t.key.id,{features:o,records:o,metrics:0},"simple"===this._schema.mesh.matcher.type&&this._schema.mesh.matcher.isDotDensity,n,!0),c={viewingMode:"",scale:t.scale},l=e.getCursor();for(;l.next();)try{const e=l.getDisplayId(),n=p(r)?r.get(e):null;i.writeCursor(a,l,s,c,t.level,n)}catch(t){}return a.serialize(t.tileInfoView.tileInfo.isWrappable)}_handleError(e,s,r){if(!t(s))return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:e.id,error:s.message},{signal:r.signal})}_getLabelingSchemaForScale(t){const e=this._schema.mesh.labels;if(h(e))return null;if("subtype"===e.type){const s={type:"subtype",classes:{}};let r=!1;for(const i in e.classes){const n=e.classes[i].filter((e=>v(e,t.scale)));r=r||!!n.length,s.classes[i]=n}return r?s:null}const s=e.classes.filter((e=>v(e,t.scale)));return s.length?{type:"simple",classes:s}:null}_getLabels(t,e){if("subtype"===e.type){var s;const r=u(this.service.subtypeField,"Expected to find subtype Field"),i=t.readAttribute(r);return null==i?[]:null!=(s=e.classes[i])?s:[]}return e.classes}_getLabelInfos(t,e){const s=this._getLabelingSchemaForScale(t);if(h(s))return null;const r=new Map,i=e.getCursor();for(;i.next();){const t=i.getDisplayId(),e=[],n=M(t),o=n&&1!==i.readAttribute("cluster_count")?"aggregate":"feature",a=this._getLabels(i,s);for(const s of a){if(s.target!==o)continue;const r=i.getStorage().getComputedStringAtIndex(n&&"feature"===o?i.readAttribute("referenceId"):t,s.fieldIndex);if(!r)continue;const a=m(r.toString()),c=a[1];this._store.getMosaicItem(s.symbol,j(a[0])).then((t=>{e[s.index]={glyphs:t.glyphMosaicItems,rtl:c,index:s.index}}))}r.set(t,e)}return r}};K=s([r("esri.views.2d.layers.features.processors.SymbolProcessor")],K);const E=K;export default E;