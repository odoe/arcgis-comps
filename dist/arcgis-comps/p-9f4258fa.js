import{e as t,d as e,i,s as r,A as s,af as n}from"./p-e58503d5.js";import{h as o}from"./p-54330161.js";import{g as l}from"./p-1ab449fc.js";import{w as a,j as u}from"./p-d1a9be2d.js";import{d as h}from"./p-e285e8f3.js";const p=p=>{let f=class extends p{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.fullExtent=null,this.tileInfo=null,this.datumTransformation=null}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}async fetchPopupFeatures(t,e){const{layer:i}=this;if(!t)return Promise.reject(new r("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i}));const{popupEnabled:n}=i,l=h(i,e);if(!n||!s(l))throw new r("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:n,popupTemplate:l});const a=[],{value:u,magdirValue:p}=await i.identify(t,{timeExtent:this.timeExtent});let f="";if(u&&u.length){var m,c;f="imagery-tile"===i.type&&i.hasStandardTime()&&null!=u[0]?u.map((t=>i.getStandardTimeValue(t))).join(", "):u.join(", ");const t={ObjectId:0},e="Raster.ServicePixelValue";t[e]=this._formatAttributeValue(f,e);const r=null==(m=i.rasterInfo)||null==(c=m.attributeTable)?void 0:c.features;if(r&&r.length>0){const e=r.filter((t=>String(t.attributes.value||t.attributes.Value||t.attributes.VALUE)===f));if(e.length>0){const i=e[0];if(i)for(const e in i.attributes)if(i.attributes.hasOwnProperty(e)){const r=this._rasterFieldPrefix+e;t[r]=this._formatAttributeValue(i.attributes[e],r)}}}const s=i.rasterInfo.dataType;"vector-magdir"!==s&&"vector-uv"!==s||(t["Raster.Magnitude"]=null==p?void 0:p[0],t["Raster.Direction"]=null==p?void 0:p[1]);const n=new o(this.fullExtent.clone(),null,t);n.layer=i,n.sourceLayer=n.layer,a.push(n)}return a}updateFullExtent(){const t=this.layer.tileInfo;if(!t||!t.spatialReference)return Promise.reject(new r("layerview:tiling-information-missing","The layer doesn't provide tiling information",{layer:this.layer}));if(n(this.layer.fullExtent))return Promise.reject(new r("layerview:extent-missing","The layer doesn't provide a full extent.",{layer:this.layer}));const e=a(this.layer.fullExtent,this.view.spatialReference,!1),i=u(this.layer.fullExtent,this.view.spatialReference,e);return null==i?Promise.reject(new r("layerview:projection-not-supported","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})):(this._set("fullExtent",i),this.datumTransformation||(this.datumTransformation=a(this.layer.fullExtent,this.view.spatialReference,!0)),Promise.resolve())}_formatAttributeValue(t,e){if("string"==typeof t){const i=this._getFieldInfo(this.layer.popupTemplate&&this.layer.popupTemplate.fieldInfos,e),r=i&&i.format;if(r){let e,i;return t.trim().indexOf(",")>-1?(e=",",i=e+" ",this._formatDelimitedString(t,e,i,r)):t.trim().indexOf(" ")>-1?(e=i=" ",this._formatDelimitedString(t,e,i,r)):this._formatNumberFromString(t,r)}}return t}_getFieldInfo(t,e){if(!t||!t.length||!e)return;const i=e.toLowerCase();let r;return t.some((t=>!(!t.fieldName||t.fieldName.toLowerCase()!==i&&t.fieldName.toLowerCase()!==i.replace(/ /g,"_")||(r=t,0)))),r}_formatDelimitedString(t,e,i,r){return t&&e&&i&&r?t.trim().split(e).map((t=>this._formatNumberFromString(t,r))).join(i):t}_formatNumberFromString(t,e){if(!t||!e)return t;const i=Number(t);return isNaN(i)?t:e.format(i)}};return t([e()],f.prototype,"layer",void 0),t([e(l)],f.prototype,"timeExtent",void 0),t([e()],f.prototype,"view",void 0),t([e()],f.prototype,"fullExtent",void 0),t([e()],f.prototype,"tileInfo",void 0),t([e({readOnly:!0})],f.prototype,"hasTilingEffects",null),f=t([i("esri.views.layers.ImageryTileLayerView")],f),f};export{p as m}