import{D as e,af as t,A as r,e as n,d as s,i,c as o,dO as l,dP as u,p as a,aW as c}from"./p-e58503d5.js";import{n as d}from"./p-8fa44ebc.js";import{y as f,I as m,v as p,V as h}from"./p-765e6c28.js";import{d as w}from"./p-7731c620.js";import{u as y}from"./p-a63f7978.js";const F={setAttribute(){},rollback(){},commit(){}};function v(r,n){const s=n.attributes[r.objectIdField],i=r.sessions.get(s);if(i)return i;const o=e(n.attributes),l=new Set;if(null==s)return F;const u=r.attributeOverrides.createInteractiveEditSession(s),a=new Map,c=(e,t)=>{const r=a.get(e);if(null==r){const r=t.indexOf(s);return a.set(e,r),r}return r};let d=0;const f={setAttribute(e,s){if(0!==d)return;const i=r.fieldsIndex.get(e);if(t(i))return;const o=r.attributeStorageInfo.findIndex((e=>e.name===i.name));if(o<0)return;u.set(o,s);const a=r.attributeStorageInfo[o];let f=!1;l.add(e),r.forEachNode(((e,t)=>{const i=c(e,t);if(-1===i)return;const o=r.getAttributeData(e.index);if(o){const t=o[a.name];t&&(t[i]=s,r.setAttributeData(e.index,o,n),f=!0)}})),f&&r.clearMemCache()},rollback(){if(0===d){for(const e of l)this.setAttribute(e,o[e]);u.rollback(),d=1,r.sessions.delete(s)}},commit(){0===d&&(u.commit(),d=2,r.sessions.delete(s))}};return r.sessions.set(s,f),f}function x(e,t){const n=b(e,t);if(0===n.size)return;const s=new Map;for(let t=0;t<e.attributeStorageInfo.length;t++)s.set(e.attributeStorageInfo[t].name,t);let i=!1;n.forEach(((t,n)=>{const o=e.getAttributeData(n);let l=!1;t.forEach(((t,n)=>{const u=r(o)?o[n]:null,a=s.get(n);for(const{featureIndex:r,value:n,featureId:s}of t)u&&(u[r]=n,l=!0,i=!0),e.attributeOverrides.updateValue(s,a,n)})),l&&e.setAttributeData(n,o,null)})),i&&e.clearMemCache()}function b(e,t){const r=t.edits.updateFeatures;if(!r||0===r.length)return new N;const n=function(e){const t=new Set;if(!e.updatedFeatures)return t;for(const r of e.updatedFeatures)null!=r.objectId&&null==r.error&&t.add(r.objectId);return t}(t),s=new N,i=new Map;for(let t=0;t<e.attributeStorageInfo.length;t++)i.set(e.attributeStorageInfo[t].name,t);const o=e.fieldsIndex,l=e.objectIdField,u=r.filter((e=>{const t=d(o,e.attributes,l);return n.has(t)}));return e.forEachNode(((t,r)=>{const n=new Set(r);for(const i of u){const u=d(o,i.attributes,l);if(!n.has(u))continue;const a=r.indexOf(u);for(const r in i.attributes){const n=e.fieldsIndex.normalizeFieldName(r);g(s,t.index,n).push({featureIndex:a,featureId:u,value:i.attributes[r]})}}})),s}function g(e,t,r){const n=function(e,t){const r=e.get(t);if(r)return r;const n=new A;return e.set(t,n),n}(e,t),s=n.get(r);if(s)return s;const i=new Array;return n.set(r,i),i}const A=Map,N=Map;function E(){return{requiredFields:{type:[String],readOnly:!0},availableFields:{type:[String],readOnly:!0,get:function(){const{layer:e,layer:{fieldsIndex:t},requiredFields:r}=this;return f(t,e.outFields?[...m(t,e.outFields),...r]:r)}}}}const O=e=>{let t=class extends e{constructor(){super(...arguments),this._numUpdating=0,this.asyncUpdateState=new Map}get updating(){return this._numUpdating>0}autoUpdateAsync(e,t){return function(e,t){const r=()=>{if(!n||s)return t();n.clear(),s=!0;const e=l(n,t);return s=!1,e};let n=new u((()=>{n&&!s&&e(r)})),s=!1;return e(r),{remove:()=>{n&&(n.destroy(),n=null)}}}((t=>this.updateAsync(e,t)),t)}async updateAsync(e,t){if(!this.startAsyncUpdate(e)){try{const r=await t();this._set(e,r)}catch(t){o.getLogger(this.declaredClass).warn(`Async update of "${e}" failed. Async update functions should not throw exceptions.`)}this.endAsyncUpdate(e)&&this.updateAsync(e,t)}}startAsyncUpdate(e){var t;const r=null!=(t=this.asyncUpdateState.get(e))?t:0;return 1&r?(this.asyncUpdateState.set(e,2|r),!0):(++this._numUpdating,this.asyncUpdateState.set(e,1|r),!1)}endAsyncUpdate(e){var t;--this._numUpdating;const r=-2&(null!=(t=this.asyncUpdateState.get(e))?t:0);return 2&r?(this.asyncUpdateState.set(e,-3&r),!0):(this.asyncUpdateState.set(e,r),!1)}};return n([s({readOnly:!0})],t.prototype,"updating",null),n([s()],t.prototype,"_numUpdating",void 0),t=n([i("esri.core.AsyncUpdate")],t),t};let q=class extends(O(a)){};q=n([i("esri.core.AsyncUpdate")],q);const I=o.getLogger("esri.views.3d.layers.support.SceneLayerViewRequiredFields");let S=class extends(O(w)){constructor(e){super(e)}get requiredFields(){const{layerView:{layer:{fieldsIndex:e},definitionExpressionFields:t},rendererFields:r,labelingFields:n,viewFilterFields:s}=this;return f(e,[...c(t,[]),...c(r,[]),...c(n,[]),...c(s,[])])}initialize(){this.layer=this.layerView.layer,this.handles.add([this.autoUpdateAsync("rendererFields",(()=>{const{fieldsIndex:e,renderer:t}=this.layer;return t?j((r=>t.collectRequiredFields(r,e))):null})),this.autoUpdateAsync("labelingFields",(()=>{const{layer:e}=this;return e.labelsVisible?j((t=>p(t,e))):null})),this.autoUpdateAsync("viewFilterFields",(()=>{const{layer:e,filter:t}=this.layerView;return j((r=>h(r,e,t)))}))])}};async function j(e){const t=new Set;try{return await e(t),Array.from(t).sort()}catch(e){return I.error(e),null}}n([s()],S.prototype,"layerView",void 0),n([s()],S.prototype,"layer",void 0),n([s()],S.prototype,"requiredFields",null),n([s()],S.prototype,"rendererFields",void 0),n([s()],S.prototype,"labelingFields",void 0),n([s()],S.prototype,"viewFilterFields",void 0),S=n([i("esri.views.3d.layers.support.SceneLayerViewRequiredFields")],S);class M extends y{constructor(){super(...arguments),this.layer=null,this.filter=null}get availableFields(){return[]}get maximumNumberOfFeatures(){return 0}set maximumNumberOfFeatures(e){throw new Error("Not implemented")}get maximumNumberOfFeaturesExceeded(){return!1}highlight(e){throw new Error("Not implemented")}queryFeatures(e,t){throw new Error("Not implemented")}queryObjectIds(e,t){throw new Error("Not implemented")}queryFeatureCount(e,t){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(e,t){throw new Error("Not implemented")}}n([s()],M.prototype,"layer",void 0),n([s()],M.prototype,"availableFields",null),n([s()],M.prototype,"maximumNumberOfFeatures",null),n([s({readOnly:!0})],M.prototype,"maximumNumberOfFeaturesExceeded",null),n([s()],M.prototype,"filter",void 0);export{E as a,S as c,x as i,M as o,v as s}