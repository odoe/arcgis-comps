import { E, r, t as t$1, b3 as a, bm as b, bo as C$1, e as e$1, b as d$1, i as i$1 } from './cast-e5ea2533.js';
import { S } from './Collection-ac20f1a1.js';
import { u as u$1 } from './Handles-24a27aa9.js';
import { M as M$1, u as g, h as M$2, k } from './Portal-f1457cb4.js';
import { J, O } from './projection-cca7ffa7.js';
import { b as b$1, g as g$2, d } from './kmlUtils-fa90f634.js';
import { e } from './utils-0dfe019a.js';
import { c } from './GraphicsCollection-931de045.js';
import { g as g$1 } from './Bitmap-e4e3f41a.js';
import { t } from './BitmapContainer-1c1b3e81.js';
import { l, u } from './LayerView-1f5f7f3c.js';
import { i } from './GraphicContainer-e757f5fe.js';
import { r as rt } from './BaseGraphicContainer-88acee8c.js';
import './JSONSupport-8dda8bae.js';
import './mathUtils-cc1689ad.js';
import './common-e2a70efa.js';
import './unitUtils-5dcccb3c.js';
import './mat4-0196b8fc.js';
import './Polyline-56152656.js';
import './assets-1ab0ccbe.js';
import './aaBoundingRect-2a187de3.js';
import './PopupTemplate-87ca9924.js';
import './opacityUtils-5755cb64.js';
import './geometry-160ffbb5.js';
import './enumeration-da141e85.js';
import './number-2da43364.js';
import './Identifiable-0fb3fc58.js';
import './aaBoundingBox-e0a84875.js';
import './jsonUtils-efd42703.js';
import './UniqueValueRenderer-b8a9ac2d.js';
import './symbols-dc010d3b.js';
import './Symbol-ac21e497.js';
import './Color-ed0bfbe9.js';
import './colorUtils-37750ea3.js';
import './screenUtils-9ed89fa7.js';
import './persistableUrlUtils-a9da326c.js';
import './collectionUtils-b35b097b.js';
import './VisualVariablesMixin-a8b13e1b.js';
import './colorRamps-fcb1175a.js';
import './ColorStop-0035d362.js';
import './sizeVariableUtils-4d3662df.js';
import './visualVariableUtils-ed2b64ac.js';
import './Graphic-79de2095.js';
import './compilerUtils-2d7ddb00.js';
import './lengthUtils-2084b777.js';
import './diffUtils-4072cef0.js';
import './jsonUtils-528e9eda.js';
import './styleUtils-5c87d3a9.js';
import './DictionaryRenderer-09505309.js';
import './LRUCache-65fcdebd.js';
import './MemCache-d4727626.js';
import './aliasOf-e543e228.js';
import './FeatureSet-c6e91f97.js';
import './Field-67832b5b.js';
import './fieldType-7f6b02ef.js';
import './HandleOwner-0793ecee.js';
import './reactiveUtils-ab0efcb1.js';
import './watchUtils-08cf9d08.js';
import './mat3-a17f4d79.js';
import './MapView-e0f86fab.js';
import './CollectionFlattener-4b03d02c.js';
import './workers-a7d3d5f6.js';
import './intl-0d87e9f4.js';
import './messages-1d31e380.js';
import './messageBundle-335e3604.js';
import './uuid-d0cd90dd.js';
import './index-6f774db5.js';
import './executeQueryJSON-f21d077f.js';
import './query-cd57088e.js';
import './normalizeUtils-eb3efd47.js';
import './pbfQueryUtils-85362230.js';
import './pbf-859f50c2.js';
import './OptimizedFeature-53745eb6.js';
import './OptimizedFeatureSet-27736f1f.js';
import './queryZScale-f05f6be9.js';
import './zscale-8c9c7156.js';
import './Query-b8b0a5e8.js';
import './TimeExtent-ecf7e6f2.js';
import './TopFeaturesQuery-25265c27.js';
import './Heading-818ed1a8.js';
import './widget-7c3356d9.js';
import './vmEvent-bdc3bebc.js';
import './QueryTask-c610f955.js';
import './featureConversionUtils-dd47b9b4.js';
import './Task-59ca08b3.js';
import './FeatureLayer-1e313d3a.js';
import './Layer-663fafaf.js';
import './HeightModelInfo-5cd6d5f2.js';
import './APIKeyMixin-5ecbc947.js';
import './ArcGISService-00a30f8e.js';
import './arcgisLayerUrl-4273e4b3.js';
import './BlendLayer-34bd1b5b.js';
import './jsonUtils-687db5e9.js';
import './_commonjsHelpers-020ca939.js';
import './CustomParametersMixin-171b3366.js';
import './labelingInfo-4e582940.js';
import './commonProperties-4c10a963.js';
import './LabelClass-a646d1d3.js';
import './labelUtils-a20584ac.js';
import './defaultsJSON-53258912.js';
import './OperationalLayer-0f16c161.js';
import './OrderedLayer-5c55613e.js';
import './PortalLayer-0ef8a2d2.js';
import './asyncUtils-847ae6e6.js';
import './PortalItem-85b3bb14.js';
import './RefreshableLayer-0c4b9daf.js';
import './ScaleRangeLayer-f5a96945.js';
import './TemporalLayer-b9cacecc.js';
import './TimeInfo-5f646e9b.js';
import './FeatureType-1c489c5b.js';
import './fieldProperties-dc649a5f.js';
import './FieldsIndex-e09edd96.js';
import './LayerFloorInfo-8df7be66.js';
import './styleUtils-545def82.js';
import './popupUtils-71e7198e.js';
import './symbolUtils-b6ed6ad9.js';
import './utils-1b009b83.js';
import './ItemCache-58898df0.js';
import './utils-f8425723.js';
import './TileStore-d0a26b94.js';
import './TileKey-5424dd8b.js';
import './quickselect-ccfd8cff.js';
import './layerViewUtils-7bf4230b.js';
import './GoTo-f5d82b71.js';
import './mathUtils-1cfd5a36.js';
import './TileInfo-a7d4b50d.js';
import './Basemap-bec40c12.js';
import './loadAll-a2448ab4.js';
import './writeUtils-f98d31f7.js';
import './basemapUtils-6ed30a8c.js';
import './TablesMixin-f9d42d97.js';
import './Scheduler-a964a3e2.js';
import './unitBezier-0f2e6a45.js';
import './mat2d-78a365d9.js';
import './vec2-a8a62c12.js';
import './vec2f64-503345b4.js';
import './vec2f32-7c7b1123.js';
import './TileStrategy-8cb879ff.js';
import './screenshotUtils-35d11065.js';
import './capabilities-9d2de206.js';
import './Container-a226037d.js';
import './EffectList-8839d70e.js';
import './Texture-2535b531.js';
import './WGLContainer-221cc283.js';
import './definitions-a1bd4630.js';
import './VertexArrayObject-97dadf78.js';
import './Utils-6b74158b.js';
import './number-888f4898.js';
import './ShaderCompiler-a8bb6649.js';
import './config-768959de.js';
import './GeometryUtils-09c2f88c.js';
import './MaterialKey-9efeaacd.js';
import './pixelUtils-bbd15931.js';
import './earcut-05cd758b.js';
import './CIMSymbolHelper-ef42c151.js';
import './BidiEngine-8e81e59c.js';
import './GeometryUtils-93aa6536.js';
import './projectionSupport-7faa25d0.js';
import './json-cfa039ad.js';
import './FeatureContainer-6ec8c8bc.js';
import './TileContainer-548a1870.js';
import './visualVariablesUtils-a9ef7a2d.js';
import './visualVariablesUtils-2786a9a4.js';
import './Matcher-2b9994fb.js';
import './ComputedAttributeStorage-80f89dc4.js';
import './FeatureSetReader-732e84ff.js';
import './centroid-5b845b7c.js';
import './tileUtils-d436cf03.js';
import './TileClipper-a4af69c8.js';
import './cimAnalyzer-a44dfeec.js';
import './quantizationUtils-97c07266.js';
import './cimSymbolUtils-e83c8bb8.js';
import './devEnvironmentUtils-50196127.js';
import './schemaUtils-c76a5b91.js';
import './MD5-6027098a.js';
import './vec3f32-f2e27abe.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class C{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[];}}let j=class extends(l(u)){constructor(){super(...arguments),this._handles=new u$1,this._bitmapIndex=new Map,this._mapImageContainer=new t,this._kmlVisualData=new C,this.allVisiblePoints=new c,this.allVisiblePolylines=new c,this.allVisiblePolygons=new c,this.allVisibleMapImages=new S;}hitTest(e,i){if(this.suspended||!this._pointsView&&!this._polylinesView&&!this._polygonsView)return Promise.resolve(null);const t=[this._pointsView.hitTest(e,i),this._polylinesView.hitTest(e,i),this._polygonsView.hitTest(e,i)];return Promise.all(t).then((e=>e.filter((e=>(e&&(e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e);}attach(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)));}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new rt({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new rt({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new rt({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(e=>{for(const[i,t]of this._kmlVisualData.allSublayers)t.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1);}this._refreshCollections();})),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating");}));}detach(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null);}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange();}moveEnd(){}isUpdating(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&E(e.href,{responseType:"image"}).then((({data:i})=>{let t=M$1.fromJSON(e.extent);g(t,this.view.spatialReference)&&(t=M$2(t,this.view.spatialReference));const s=new g$1(i,"standard");s.x=t.xmin,s.y=t.ymax,s.resolution=t.width/i.naturalWidth,s.rotation=e.rotation,this._mapImageContainer.addChild(s),this._bitmapIndex.set(e,s);}));}async _getViewDependentUrl(e$1,t){const{viewFormat:s,viewBoundScale:a$1,httpQuery:h}=e$1;if(r(s)){if(t$1(t))throw new Error("Loading this network link requires a view state.");let p;if(await J(),r(a$1)&&1!==a$1){const e=new M$1(t.extent);e.expand(a$1),p=e;}else p=t.extent;p=O(p,k.WGS84);const w=O(p,k.WebMercator),g=p.xmin,u=p.xmax,_=p.ymin,V=p.ymax,f=t.size[0]*t.pixelRatio,v=t.size[1]*t.pixelRatio,S=Math.max(w.width,w.height),I={"[bboxWest]":g.toString(),"[bboxEast]":u.toString(),"[bboxSouth]":_.toString(),"[bboxNorth]":V.toString(),"[lookatLon]":p.center.x.toString(),"[lookatLat]":p.center.y.toString(),"[lookatRange]":S.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":p.center.x.toString(),"[lookatTerrainLat]":p.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":p.center.x.toString(),"[cameraLat]":p.center.y.toString(),"[cameraAlt]":S.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":f.toString(),"[vertPixels]":v.toString(),"[terrainEnabled]":"0","[clientVersion]":a,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},P=e=>{for(const i in e)for(const t in I)e[i]=e[i].replace(t,I[t]);},x=b(s);P(x);let k$1={};r(h)&&(k$1=b(h),P(k$1));const C=e(e$1.href);C.query={...C.query,...x,...k$1};return `${C.path}?${C$1(x)}`}return e$1.href}async _fetchService(){const e=new C;await this._loadVisualData(this.layer.url,e),this._kmlVisualData=e,this._refreshCollections();}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)));}_isSublayerVisible(e){const i=this._kmlVisualData.allSublayers.get(e);return !!i.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(e,i){return this._fetchParsedKML(e).then((async e=>{for(const t of e.sublayers){i.allSublayers.set(t.id,t);const e=t.points?await b$1(t.points):[],s=t.polylines?await b$1(t.polylines):[],a=t.polygons?await b$1(t.polygons):[],o=t.mapImages||[];if(i.allPoints.push(...e.map((e=>({item:e,sublayerId:t.id})))),i.allPolylines.push(...s.map((e=>({item:e,sublayerId:t.id})))),i.allPolygons.push(...a.map((e=>({item:e,sublayerId:t.id})))),i.allMapImages.push(...o.map((e=>({item:e,sublayerId:t.id})))),t.networkLink){const e=await this._getViewDependentUrl(t.networkLink,this.view.state);await this._loadVisualData(e,i);}}}))}_fetchParsedKML(e){return g$2(e,this.view.spatialReference,this.layer.refreshInterval).then((e=>d(e.data)))}_removeMapImage(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e));}};e$1([d$1()],j.prototype,"_pointsView",void 0),e$1([d$1()],j.prototype,"_polylinesView",void 0),e$1([d$1()],j.prototype,"_polygonsView",void 0),e$1([d$1()],j.prototype,"_fetchingPromise",void 0),e$1([d$1()],j.prototype,"updating",void 0),j=e$1([i$1("esri.views.2d.layers.KMLLayerView2D")],j);const M=j;

export default M;
