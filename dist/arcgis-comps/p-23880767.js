import{N as t,v as e,e as s,i as r,a7 as i,ae as o,bF as n,t as a,r as p,ao as c,cG as l,_ as h}from"./p-9ae46e68.js";import{n as d}from"./p-128c292d.js";import{m as f,a as u}from"./p-30ddb3a0.js";import{k as m}from"./p-566b0715.js";import{o as j,l as b,b as y,t as g,E as w}from"./p-1fb61ab0.js";import{p as T}from"./p-9bf53fee.js";import{B as v}from"./p-d778cb09.js";import"./p-84bf99cb.js";import"./p-2d0c34e5.js";import"./p-81e5b36e.js";import"./p-47e1bd73.js";import"./p-d6725707.js";import"./p-d925341f.js";import"./p-56ed1c7a.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-fe01b82b.js";import"./p-d18723b0.js";import"./p-1f10277d.js";import"./p-2b250922.js";import"./p-285c6a34.js";import"./p-f42060e0.js";import"./p-79553c8d.js";import"./p-8e03c038.js";import"./p-32462343.js";import"./p-16def889.js";import"./p-7c7c5507.js";import"./p-5fb38925.js";import"./p-e6a400a0.js";import"./p-a617738c.js";import"./p-0509f8e7.js";import"./p-9739c166.js";import"./p-ffe0d3ad.js";import"./p-4003c7ae.js";import"./p-b2d0e2de.js";import"./p-db87794e.js";import"./p-e5429b9e.js";import"./p-97ec6ae5.js";import"./p-6c45ae96.js";import"./p-9e860e7b.js";import"./p-685003b3.js";import"./p-6e4caa55.js";import"./p-d30fd87a.js";import"./p-b3024dec.js";import"./p-4b3ae2cf.js";import"./p-3a2e88bf.js";import"./p-6ebb24ba.js";import"./p-4fd6e394.js";import"./p-9dcf03f7.js";import"./p-2a252a78.js";import"./p-5a0fe1d0.js";class M{constructor(t){this._remoteClient=t,this._resourceMap=new Map,this._inFlightResourceMap=new Map}destroy(){}async fetchResource(e,s){const r=this._resourceMap,i=r.get(e);if(i)return i;let o=this._inFlightResourceMap.get(e);if(o)return o;try{o=this._remoteClient.invoke("tileRenderer.fetchResource",{url:e},{...s}),this._inFlightResourceMap.set(e,o),o.then((t=>(this._inFlightResourceMap.delete(e),r.set(e,t),t)))}catch(e){return t(e)?null:{width:0,height:0}}return o}getResource(t){var e;return null!=(e=this._resourceMap.get(t))?e:null}}function R(t,e){return(!t.minScale||t.minScale>=e)&&(!t.maxScale||t.maxScale<=e)}function _(t){const e=t.message,s={message:{data:{},tileKey:e.tileKey,tileKeyOrigin:e.tileKeyOrigin},transferList:new Array};for(const t in e.data){const r=e.data[t];if(s.message.data[t]=null,p(r)){const e=r.stride,i=r.indices.slice(0),o=r.vertices.slice(0),a=r.records.slice(0),p={stride:e,indices:i,vertices:o,records:a,metrics:n(r.metrics,(t=>t.slice(0)))};s.transferList.push(i,o,a),s.message.data[t]=p}}return s}e.getLogger("esri.views.2d.layers.features.processors.SymbolProcessor");let K=class extends T{constructor(){super(...arguments),this.type="symbol",this._matchers={feature:null,aggregate:null},this._bufferData=new Map,this._bufferIds=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))]),this._resourceManagerProxy=new M(this.remoteClient)}destroy(){this._resourceManagerProxy.destroy()}get supportsTileUpdates(){return!0}forEachBufferId(t){this._bufferIds.forEach((e=>{e.forEach(t)}))}async update(t,e){const s=e.schema.processors[0];if("symbol"!==s.type)return;const r=f(this._schema,s);u(r,"mesh")&&(i("esri-2d-update-debug")&&console.debug("Applying Update - Processor:",r),t.mesh=!0,t.why.mesh.push("Symbology changed"),this._schema=s,this._factory=this._createFactory(s),this._factory.update(s,this.tileStore.tileScheme.tileInfo))}onTileMessage(t,e,s,r){return o(r),this._onTileData(t,e,s,r)}onTileClear(t){return this._bufferData.delete(t.key.id),this._bufferIds.delete(t.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:{clear:!0}})}onTileError(t,e,s){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:t.id,error:e},{signal:s.signal})}onTileUpdate(t){for(const e of t.removed)this._bufferData.has(e.key.id)&&this._bufferData.delete(e.key.id),this._bufferIds.has(e.key.id)&&this._bufferIds.delete(e.key.id);for(const e of t.added)this._bufferData.forEach((t=>{for(const s of t)s.message.tileKey===e.id&&this._updateTileMesh("append",e,_(s),[],!1,!1,null)}))}_addBufferData(t,e){this._bufferData.has(t)||this._bufferData.set(t,[]),this._bufferData.get(t).push(_(e))}_createFactory(t){const{geometryType:e,objectIdField:s,fields:r}=this.service,i={geometryType:e,fields:r,spatialReference:m.fromJSON(this.spatialReference)},o=new w(((t,e)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",t,e)),this.tileStore.tileScheme.tileInfo),{matcher:a,aggregateMatcher:p}=t.mesh;return this._store=o,this._matchers.feature=j(a,o,i,this._resourceManagerProxy),this._matchers.aggregate=n(p,(t=>j(t,o,i,this._resourceManagerProxy))),new b(e,s,o)}async _onTileData(t,e,s,r){o(r);const{type:i,addOrUpdate:n,remove:l}=e,h=e.end,d=!!this._schema.mesh.sortKey;if(!n)return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:{type:i,addOrUpdate:null,remove:l,clear:!1,end:h,sort:d}},r);const f=this._processFeatures(t,n,s,r);try{const s=await f;if(a(s))return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:t.id,data:{type:i,addOrUpdate:null,remove:l,clear:!1,end:h,sort:d}},r);const o=[];for(const e of s){let s=!1;const r=e.message.bufferIds,i=t.key.id,n=e.message.tileKey;if(i!==n&&p(r)){if(!this.tileStore.get(n)){this._addBufferData(i,e),o.push(e);continue}let t=this._bufferIds.get(n);t||(t=new Set,this._bufferIds.set(n,t));const a=Array.from(r);for(const e of a){if(t.has(e)){s=!0;break}t.add(e)}}s||(this._addBufferData(i,e),o.push(e))}await c(o.map((s=>{const o=t.key.id===s.message.tileKey;return this._updateTileMesh(i,t,s,o?e.remove:[],o&&e.end,e.clear,r.signal)})))}catch(e){this._handleError(t,e,r)}}async _updateTileMesh(t,e,s,r,i,a,p){const c=t,l=s.message.tileKey,d=!!this._schema.mesh.sortKey;l!==e.key.id&&(i=!1);const f=n(s,(t=>t.message)),u=n(s,(t=>t.transferList))||[],m={type:c,addOrUpdate:f,remove:r,clear:!1,end:i,sort:d},j={transferList:h(u)||[],signal:p};return o(j),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:l,data:m},j)}async _processFeatures(t,e,s,r){if(a(e)||!e.hasFeatures)return null;const i={transform:t.transform,hasZ:!1,hasM:!1},n=this._factory,p={viewingMode:"",scale:t.scale},c=await this._matchers.feature,l=await this._matchers.aggregate;o(r);const h=this._getLabelInfos(t,e);return await n.analyze(e.getCursor(),this._resourceManagerProxy,c,l,i,p),o(r),this._writeFeatureSet(t,e,i,h,n,s)}_writeFeatureSet(t,e,s,r,i,o){const n=e.getSize(),a=new y(t.key.id,{features:n,records:n,metrics:0},"simple"===this._schema.mesh.matcher.type&&this._schema.mesh.matcher.isDotDensity,o,!0),c={viewingMode:"",scale:t.scale},l=e.getCursor();for(;l.next();)try{const e=l.getDisplayId(),o=p(r)?r.get(e):null;i.writeCursor(a,l,s,c,t.level,o)}catch(t){}return a.serialize(t.tileInfoView.tileInfo.isWrappable)}_handleError(e,s,r){if(!t(s))return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:e.id,error:s.message},{signal:r.signal})}_getLabelingSchemaForScale(t){const e=this._schema.mesh.labels;if(a(e))return null;if("subtype"===e.type){const s={type:"subtype",classes:{}};let r=!1;for(const i in e.classes){const o=e.classes[i].filter((e=>R(e,t.scale)));r=r||!!o.length,s.classes[i]=o}return r?s:null}const s=e.classes.filter((e=>R(e,t.scale)));return s.length?{type:"simple",classes:s}:null}_getLabels(t,e){if("subtype"===e.type){var s;const r=l(this.service.subtypeField,"Expected to find subtype Field"),i=t.readAttribute(r);return null==i?[]:null!=(s=e.classes[i])?s:[]}return e.classes}_getLabelInfos(t,e){const s=this._getLabelingSchemaForScale(t);if(a(s))return null;const r=new Map,i=e.getCursor();for(;i.next();){const t=i.getDisplayId(),e=[],o=v(t),n=o&&1!==i.readAttribute("cluster_count")?"aggregate":"feature",a=this._getLabels(i,s);for(const s of a){if(s.target!==n)continue;const r=i.getStorage().getComputedStringAtIndex(o&&"feature"===n?i.readAttribute("referenceId"):t,s.fieldIndex);if(!r)continue;const a=d(r.toString()),p=a[1];this._store.getMosaicItem(s.symbol,g(a[0])).then((t=>{e[s.index]={glyphs:t.glyphMosaicItems,rtl:p,index:s.index}}))}r.set(t,e)}return r}};K=s([r("esri.views.2d.layers.features.processors.SymbolProcessor")],K);const E=K;export default E;