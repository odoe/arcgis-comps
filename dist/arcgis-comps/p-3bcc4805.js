import{e}from"./p-3721667d.js";import{A as t,af as n,a0 as s,bK as r,c$ as a}from"./p-e58503d5.js";import{B as o,s as i}from"./p-f94762ac.js";import{B as l,x as c}from"./p-ea916a39.js";import{C as u,B as p,q as f,v as h}from"./p-4019eec3.js";import{a as m}from"./p-b79fcce3.js";import{y}from"./p-a131049b.js";class b{constructor(e,t,n){this.uid=e,this.geometry=t,this.attributes=n,this.visible=!0,this.objectId=null,this.centroid=null}}function k(e){return t(e.geometry)}class g{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function d(e){const n=m.fromJSON(e.geometryType),a=s.fromJSON(e.spatialReference),o=e.transform,i=e.features.map((s=>{const i=function(e,t,n,s){return{uid:r(),objectId:s&&e.attributes?e.attributes[s]:null,attributes:e.attributes,geometry:x(e.geometry,t,n),visible:!0}}(s,n,a,e.objectIdFieldName),l=i.geometry;if(t(l)&&o)switch(l.type){case"point":i.geometry=h(o,l,l,l.hasZ,l.hasM);break;case"multipoint":i.geometry=f(o,l,l,l.hasZ,l.hasM);break;case"polygon":i.geometry=p(o,l,l,l.hasZ,l.hasM);break;case"polyline":i.geometry=u(o,l,l,l.hasZ,l.hasM);break;case"extent":case"mesh":i.geometry=l}return i}));return{geometryType:n,features:i,spatialReference:a,fields:e.fields?e.fields.map((e=>y.fromJSON(e))):null,objectIdFieldName:e.objectIdFieldName,globalIdFieldName:e.globalIdFieldName,geohashFieldName:e.geohashFieldName,geometryProperties:e.geometryProperties,hasZ:e.hasZ,hasM:e.hasM,exceededTransferLimit:e.exceededTransferLimit,transform:null}}function x(e,t,s){if(n(e))return null;switch(t){case"point":return{x:e.x,y:e.y,z:e.z,m:e.m,hasZ:null!=e.z,hasM:null!=e.m,type:"point",spatialReference:s};case"polyline":return{paths:e.paths,hasZ:!!e.hasZ,hasM:!!e.hasM,type:"polyline",spatialReference:s};case"polygon":return{rings:e.rings,hasZ:!!e.hasZ,hasM:!!e.hasM,type:"polygon",spatialReference:s};case"multipoint":return{points:e.points,hasZ:!!e.hasZ,hasM:!!e.hasM,type:"multipoint",spatialReference:s}}}function j(e,t,n,s){return{x:e,y:t,z:n,hasZ:null!=n,hasM:!1,spatialReference:s,type:"point"}}function w(e){if(n(e))return 0;let t=32;switch(e.type){case"point":t+=42;break;case"polyline":case"polygon":{let n=0;const s=2+(e.hasZ?1:0)+(e.hasM?1:0),r="polyline"===e.type?e.paths:e.rings;for(const e of r)n+=e.length;t+=8*n*s+64,t+=128*n,t+=34,t+=32*(r.length+1);break}case"multipoint":{const n=e.points.length;t+=8*n*(2+(e.hasZ?1:0)+(e.hasM?1:0))+64,t+=128*n,t+=34,t+=32;break}case"extent":t+=98,e.hasM&&(t+=32),e.hasZ&&(t+=32);break;case"mesh":t+=a(e.vertexAttributes.position),t+=a(e.vertexAttributes.normal),t+=a(e.vertexAttributes.uv),t+=a(e.vertexAttributes.tangent)}return t}function M(t){let n=32;return n+=e(t.attributes),n+=3,n+=8+w(t.geometry),n}function R(e){if(n(e))return 0;switch(e.type){case"point":return 1;case"polyline":{let t=0;for(const n of e.paths)t+=n.length;return t}case"polygon":{let t=0;for(const n of e.rings)t+=n.length;return t}case"multipoint":return e.points.length;case"extent":return 2;case"mesh":{const t=e.vertexAttributes&&e.vertexAttributes.position;return t?t.length/3:0}default:return}}function Z(e){if(n(e))return!1;switch(e.type){case"extent":case"point":return!0;case"polyline":for(const t of e.paths)if(t.length>0)return!0;return!1;case"polygon":for(const t of e.rings)if(t.length>0)return!0;return!1;case"multipoint":return e.points.length>0;case"mesh":return!e.loaded||e.vertexAttributes.position.length>0}}function F(e,t){switch(o(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[3]=e.x,t[1]=t[4]=e.y,e.hasZ&&(t[2]=t[5]=e.z);break;case"polyline":for(let n=0;n<e.paths.length;n++)i(t,e.paths[n],e.hasZ);break;case"polygon":for(let n=0;n<e.rings.length;n++)i(t,e.rings[n],e.hasZ);break;case"multipoint":i(t,e.points,e.hasZ);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[3]=e.xmax,t[4]=e.ymax,null!=e.zmin&&(t[2]=e.zmin),null!=e.zmax&&(t[5]=e.zmax)}}function I(e,t){switch(l(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[2]=e.x,t[1]=t[3]=e.y;break;case"polyline":for(let n=0;n<e.paths.length;n++)c(t,e.paths[n]);break;case"polygon":for(let n=0;n<e.rings.length;n++)c(t,e.rings[n]);break;case"multipoint":c(t,e.points);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[2]=e.xmax,t[3]=e.ymax}}function N(e,t){return null!=e.objectId?e.objectId:e.attributes&&t?e.attributes[t]:null}export{M as A,I as J,k as M,g as N,N as O,Z as S,F as T,b as j,j as v,R as w,d as z}