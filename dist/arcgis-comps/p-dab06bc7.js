import{bi as e,bI as t,e as i,d as s,bH as r,bP as n,iR as l,i as o,T as a,U as u,V as d,f2 as y,r as p,aR as c,iI as h,E as v,g$ as g,t as f,b,o as m,k as w,iS as S,iM as j,iE as O,bA as x,bN as I,a$ as B,iT as F,S as T,iU as L,iV as A,bj as q,l as R,iW as N,iX as P,cP as k,cQ as E,cR as M,iy as D,bE as C,iA as U,cX as V,iP as _,fo as Q,cT as K,bT as $,iY as X,iZ as Z}from"./p-5420851c.js";import{s as H,l as W}from"./p-bed0eb19.js";import{n as z,N as G}from"./p-65a8a7f6.js";import{s as Y,l as J,u as ee,m as te}from"./p-5facf67c.js";import"./p-53bb6ab4.js";import"./p-207b5a2e.js";import"./p-f5b7843f.js";let ie=class extends(e(t)){constructor(e){super(e),this.title="",this.id=-1,this.modelName=null,this.isEmpty=null,this.visible=!0,this.opacity=1}readTitle(e,t){return"string"==typeof t.alias?t.alias:"string"==typeof t.name?t.name:""}readIdOnlyOnce(e){return-1!==this.id?this.id:"number"==typeof e?e:void 0}};i([s({type:String,json:{origins:{"web-scene":{write:!0},"portal-item":{write:!0}}}})],ie.prototype,"title",void 0),i([r("service","title",["alias","name"])],ie.prototype,"readTitle",null),i([s()],ie.prototype,"layer",void 0),i([s({type:n,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0}}})],ie.prototype,"id",void 0),i([r("service","id")],ie.prototype,"readIdOnlyOnce",null),i([s(l(String))],ie.prototype,"modelName",void 0),i([s(l(Boolean))],ie.prototype,"isEmpty",void 0),i([s({type:Boolean,json:{name:"visibility",write:!0}})],ie.prototype,"visible",void 0),i([s({type:Number,json:{write:!0}})],ie.prototype,"opacity",void 0),ie=i([o("esri.layers.buildingSublayers.BuildingSublayer")],ie);const se=ie,re=a.getLogger("esri.layers.buildingSublayers.BuildingComponentSublayer"),ne=F();let le=class extends(u.LoadableMixin(d(se))){constructor(e){super(e),this.type="building-component",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.fields=null,this.associatedLayer=null,this.outFields=null,this.listMode="show",this.renderer=null,this.definitionExpression=null,this.popupEnabled=!0,this.popupTemplate=null,this.layerType="3d-object"}get parsedUrl(){return this.layer?{path:`${this.layer.parsedUrl.path}/sublayers/${this.id}`,query:this.layer.parsedUrl.query}:null}get fieldsIndex(){return new y(this.fields)}readAssociatedLayer(e,t){const i=this.layer.associatedFeatureServiceItem,s=t.associatedLayerID;return p(i)&&"number"==typeof s?new c({portalItem:i,layerId:s}):null}get objectIdField(){if(null!=this.fields)for(const e of this.fields)if("oid"===e.type)return e.name;return null}get displayField(){return p(this.associatedLayer)?this.associatedLayer.displayField:null}get defaultPopupTemplate(){return this.createPopupTemplate()}load(e){const t=p(e)?e.signal:null,i=this._fetchService(t).then((()=>{this.indexInfo=z(this.parsedUrl.path,this.rootNode,this.nodePages,this.apiKey,re,t)}));return this.addResolvingPromise(i),Promise.resolve(this)}createPopupTemplate(e){return h(this,e)}async _fetchService(e){const t=(await v(this.parsedUrl.path,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,{origin:"service",url:this.parsedUrl})}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var i,s,r,n;const l=null==(i=this.getFeatureType(null==t?void 0:t.feature))||null==(s=i.domains)?void 0:s[e];return l&&"inherited"!==l.type?l:null!=(r=null==(n=this.getField(e))?void 0:n.domain)?r:null}getFeatureType(e){return e&&p(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){return p(this.associatedLayer)?this.associatedLayer.types:[]}get typeIdField(){return p(this.associatedLayer)?this.associatedLayer.typeIdField:null}get geometryType(){return"3d-object"===this.layerType?"mesh":"point"}get profile(){return"3d-object"===this.layerType?"mesh-pyramids":"points"}get capabilities(){const e=p(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:H,{query:t,data:{supportsZ:i,supportsM:s,isVersioned:r}}=e;return{query:t,data:{supportsZ:i,supportsM:s,isVersioned:r}}}createQuery(){const e=new g;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((i=>i.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((i=>i.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((i=>i.queryFeatures(e||this.createQuery(),t))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=this.layer,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((i=>i.queryObjectIds(e||this.createQuery(),t)))}getFieldUsageInfo(e){return this.fieldsIndex.has(e)?{supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1}:{supportsLabelingInfo:!1,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:p(this.associatedLayer)}}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return p(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),f(this.associatedLayer))throw new b("buildingscenelayer:query-not-available","BuildingSceneLayer component layer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new b("buildingscenelayer:query-not-available","BuildingSceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}};i([s({readOnly:!0})],le.prototype,"parsedUrl",null),i([s({type:Y,readOnly:!0})],le.prototype,"nodePages",void 0),i([s({type:[J],readOnly:!0})],le.prototype,"materialDefinitions",void 0),i([s({type:[ee],readOnly:!0})],le.prototype,"textureSetDefinitions",void 0),i([s({type:[te],readOnly:!0})],le.prototype,"geometryDefinitions",void 0),i([s({readOnly:!0})],le.prototype,"serviceUpdateTimeStamp",void 0),i([s({readOnly:!0})],le.prototype,"store",void 0),i([s({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],le.prototype,"rootNode",void 0),i([s({readOnly:!0})],le.prototype,"attributeStorageInfo",void 0),i([s(ne.fields)],le.prototype,"fields",void 0),i([s({readOnly:!0})],le.prototype,"fieldsIndex",null),i([s({readOnly:!0,type:c})],le.prototype,"associatedLayer",void 0),i([r("service","associatedLayer",["associatedLayerID"])],le.prototype,"readAssociatedLayer",null),i([s(ne.outFields)],le.prototype,"outFields",void 0),i([s({type:String,readOnly:!0})],le.prototype,"objectIdField",null),i([s({readOnly:!0,type:String,json:{read:!1}})],le.prototype,"displayField",null),i([s({readOnly:!0,type:String,aliasOf:"layer.apiKey"})],le.prototype,"apiKey",void 0),i([s({readOnly:!0,type:m,aliasOf:"layer.fullExtent"})],le.prototype,"fullExtent",void 0),i([s({readOnly:!0,type:w,aliasOf:"layer.spatialReference"})],le.prototype,"spatialReference",void 0),i([s({readOnly:!0,aliasOf:"layer.version"})],le.prototype,"version",void 0),i([s({readOnly:!0,type:S,aliasOf:"layer.elevationInfo"})],le.prototype,"elevationInfo",void 0),i([s({readOnly:!0,type:Number,aliasOf:"layer.minScale"})],le.prototype,"minScale",void 0),i([s({readOnly:!0,type:Number,aliasOf:"layer.maxScale"})],le.prototype,"maxScale",void 0),i([s({type:["hide","show"],json:{write:!0}})],le.prototype,"listMode",void 0),i([s({types:j,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],le.prototype,"renderer",void 0),i([s({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],le.prototype,"definitionExpression",void 0),i([s(O)],le.prototype,"popupEnabled",void 0),i([s({type:x,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],le.prototype,"popupTemplate",void 0),i([s({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],le.prototype,"normalReferenceFrame",void 0),i([s({readOnly:!0,json:{read:!1}})],le.prototype,"defaultPopupTemplate",null),i([s()],le.prototype,"types",null),i([s()],le.prototype,"typeIdField",null),i([s({json:{write:!1}}),I(new B({"3DObject":"3d-object",Point:"point"}))],le.prototype,"layerType",void 0),i([s()],le.prototype,"geometryType",null),i([s()],le.prototype,"profile",null),i([s({readOnly:!0,json:{read:!1}})],le.prototype,"capabilities",null),le=i([o("esri.layers.buildingSublayers.BuildingComponentSublayer")],le);const oe=le;var ae;const ue={type:T,readOnly:!0,json:{origins:{service:{read:{source:"sublayers",reader:de}}},read:!1}};function de(e,t,i){if(e&&Array.isArray(e))return new T(e.map((e=>{const t=function(e){return"group"===e.layerType?ye:oe}(e);if(t){const s=new t;return s.read(e,i),s}i&&i.messages&&e&&i.messages.push(new L("building-scene-layer:unsupported-sublayer-type","Building scene sublayer of type '"+(e.type||"unknown")+"' are not supported",{definition:e,context:i}))})))}let ye=ae=class extends se{constructor(e){super(e),this.type="building-group",this.listMode="show",this.sublayers=null}loadAll(){return A(this,(e=>ae.forEachSublayer(this.sublayers,(t=>{"building-group"!==t.type&&e(t)}))))}};i([s({type:["hide","show","hide-children"],json:{write:!0}})],ye.prototype,"listMode",void 0),i([s(ue)],ye.prototype,"sublayers",void 0),ye=ae=i([o("esri.layers.buildingSublayers.BuildingGroupSublayer")],ye),function(e){e.sublayersProperty=ue,e.readSublayers=de,e.forEachSublayer=function e(t,i){t.forEach((t=>{i(t),"building-group"===t.type&&e(t.sublayers,i)}))}}(ye||(ye={}));const pe=ye;let ce=class extends q{constructor(){super(...arguments),this.type=null}};i([s({type:String,readOnly:!0,json:{write:!0}})],ce.prototype,"type",void 0),ce=i([o("esri.layers.support.BuildingFilterAuthoringInfo")],ce);const he=ce;var ve;let ge=ve=class extends q{constructor(){super(...arguments),this.filterType=null,this.filterValues=null}clone(){return new ve({filterType:this.filterType,filterValues:R(this.filterValues)})}};var fe;i([s({type:String,json:{write:!0}})],ge.prototype,"filterType",void 0),i([s({type:[String],json:{write:!0}})],ge.prototype,"filterValues",void 0),ge=ve=i([o("esri.layers.support.BuildingFilterAuthoringInfoType")],ge);const be=T.ofType(ge);let me=fe=class extends q{clone(){return new fe({filterTypes:R(this.filterTypes)})}};var we;i([s({type:be,json:{write:!0}})],me.prototype,"filterTypes",void 0),me=fe=i([o("esri.layers.support.BuildingFilterAuthoringInfoBlock")],me);const Se=T.ofType(me);let je=we=class extends he{constructor(){super(...arguments),this.type="checkbox"}clone(){return new we({filterBlocks:R(this.filterBlocks)})}};i([s({type:["checkbox"]})],je.prototype,"type",void 0),i([s({type:Se,json:{write:!0}})],je.prototype,"filterBlocks",void 0),je=we=i([o("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")],je);const Oe=je;let xe=class extends q{};i([s({readOnly:!0,json:{read:!1}})],xe.prototype,"type",void 0),xe=i([o("esri.layers.support.BuildingFilterMode")],xe);const Ie=xe;var Be;let Fe=Be=class extends Ie{constructor(){super(...arguments),this.type="solid"}clone(){return new Be}};i([s({type:["solid"],readOnly:!0,json:{write:!0}})],Fe.prototype,"type",void 0),Fe=Be=i([o("esri.layers.support.BuildingFilterModeSolid")],Fe);const Te=Fe;var Le;let Ae=Le=class extends Ie{constructor(){super(...arguments),this.type="wire-frame",this.edges=null}clone(){return new Le({edges:R(this.edges)})}};i([I({wireFrame:"wire-frame"})],Ae.prototype,"type",void 0),i([s(N)],Ae.prototype,"edges",void 0),Ae=Le=i([o("esri.layers.support.BuildingFilterModeWireFrame")],Ae);const qe=Ae;var Re;let Ne=Re=class extends Ie{constructor(){super(...arguments),this.type="x-ray"}clone(){return new Re}};i([s({type:["x-ray"],readOnly:!0,json:{write:!0}})],Ne.prototype,"type",void 0),Ne=Re=i([o("esri.layers.support.BuildingFilterModeXRay")],Ne);const Pe=Ne;var ke;const Ee={nonNullable:!0,types:{key:"type",base:Ie,typeMap:{solid:Te,"wire-frame":qe,"x-ray":Pe}},json:{read:e=>{switch(e&&e.type){case"solid":return Te.fromJSON(e);case"wireFrame":return qe.fromJSON(e);case"x-ray":return Pe.fromJSON(e);default:return}},write:{enabled:!0,isRequired:!0}}};let Me=ke=class extends q{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new Te,this.title=""}clone(){return new ke({filterExpression:this.filterExpression,filterMode:R(this.filterMode),title:this.title})}};var De;i([s({type:String,json:{write:{enabled:!0,isRequired:!0}}})],Me.prototype,"filterExpression",void 0),i([s(Ee)],Me.prototype,"filterMode",void 0),i([s({type:String,json:{write:{enabled:!0,isRequired:!0}}})],Me.prototype,"title",void 0),Me=ke=i([o("esri.layers.support.BuildingFilterBlock")],Me);const Ce=T.ofType(Me);let Ue=De=class extends q{constructor(){super(...arguments),this.description=null,this.filterBlocks=null,this.id=P(),this.name=null}clone(){return new De({description:this.description,filterBlocks:R(this.filterBlocks),id:this.id,name:this.name,filterAuthoringInfo:R(this.filterAuthoringInfo)})}};i([s({type:String,json:{write:!0}})],Ue.prototype,"description",void 0),i([s({type:Ce,json:{write:{enabled:!0,isRequired:!0}}})],Ue.prototype,"filterBlocks",void 0),i([s({types:{key:"type",base:he,typeMap:{checkbox:Oe}},json:{read:e=>"checkbox"===(e&&e.type)?Oe.fromJSON(e):null,write:!0}})],Ue.prototype,"filterAuthoringInfo",void 0),i([s({type:String,constructOnly:!0,json:{write:{enabled:!0,isRequired:!0}}})],Ue.prototype,"id",void 0),i([s({type:String,json:{write:{enabled:!0,isRequired:!0}}})],Ue.prototype,"name",void 0),Ue=De=i([o("esri.layers.support.BuildingFilter")],Ue);const Ve=Ue,_e=a.getLogger("esri.layers.support.BuildingSummaryStatistics");let Qe=class extends q{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};i([s({type:String})],Qe.prototype,"fieldName",void 0),i([s({type:String})],Qe.prototype,"modelName",void 0),i([s({type:String})],Qe.prototype,"label",void 0),i([s({type:Number})],Qe.prototype,"min",void 0),i([s({type:Number})],Qe.prototype,"max",void 0),i([s({json:{read:e=>Array.isArray(e)&&(e.every((e=>"string"==typeof e))||e.every((e=>"number"==typeof e)))?e.slice():null}})],Qe.prototype,"mostFrequentValues",void 0),i([s({type:[Number]})],Qe.prototype,"subLayerIds",void 0),Qe=i([o("esri.layers.support.BuildingFieldStatistics")],Qe);let Ke=class extends(u.LoadableMixin(d(q))){constructor(){super(...arguments),this.url=null}get fields(){return this.loaded||"loading"===this.loadStatus?this._get("fields"):(_e.error("building summary statistics are not loaded"),null)}load(e){const t=p(e)?e.signal:null;return this.addResolvingPromise(this._fetchService(t)),Promise.resolve(this)}async _fetchService(e){const t=(await v(this.url,{query:{f:"json"},responseType:"json",signal:e})).data;this.read(t,{origin:"service"})}};i([s({constructOnly:!0,type:String})],Ke.prototype,"url",void 0),i([s({readOnly:!0,type:[Qe],json:{read:{source:"summary"}}})],Ke.prototype,"fields",null),Ke=i([o("esri.layers.support.BuildingSummaryStatistics")],Ke);const $e=Ke,Xe=a.getLogger("esri.layers.BuildingSceneLayer"),Ze=T.ofType(Ve),He=R(pe.sublayersProperty);He.json.origins["web-scene"]={type:[oe],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}},He.json.origins["portal-item"]={type:[oe],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}};let We=class extends(G(k(E(M(D(C(U(V)))))))){constructor(e){super(e),this.operationalLayerType="BuildingSceneLayer",this.allSublayers=new _({getCollections:()=>[this.sublayers],getChildrenFunction:e=>"building-group"===e.type?e.sublayers:null}),this.sublayers=null,this.sublayerOverrides=null,this.filters=new Ze,this.activeFilterId=null,this.summaryStatistics=null,this.outFields=null,this.type="building-scene"}normalizeCtorArgs(e){return"string"==typeof e?{url:e}:e}destroy(){this.allSublayers.destroy()}readSublayers(e,t,i){const s=pe.readSublayers(e,t,i);return pe.forEachSublayer(s,(e=>e.layer=this)),this.sublayerOverrides&&(this.applySublayerOverrides(s,this.sublayerOverrides),this.sublayerOverrides=null),s}applySublayerOverrides(e,{overrides:t,context:i}){pe.forEachSublayer(e,(e=>e.read(t.get(e.id),i)))}readSublayerOverrides(e,t){const i=new Map;for(const s of e)null!=s&&"object"==typeof s&&"number"==typeof s.id?i.set(s.id,s):t.messages.push(new b("building-scene-layer:invalid-sublayer-override","Invalid value for sublayer override. Not an object or no id specified.",{value:s}));return{overrides:i,context:t}}writeSublayerOverrides(e,t,i){const s=[];pe.forEachSublayer(this.sublayers,(e=>{const t=e.write({},i);Object.keys(t).length>1&&s.push(t)})),s.length>0&&(t.sublayers=s)}writeUnappliedOverrides(e,t){t.sublayers=[],e.overrides.forEach((e=>{t.sublayers.push(R(e))}))}write(e,t){return e=super.write(e,t),!t||"web-scene"!==t.origin&&"portal-item"!==t.origin||(this.sublayers?this.writeSublayerOverrides(this.sublayers,e,t):this.sublayerOverrides&&this.writeUnappliedOverrides(this.sublayerOverrides,e)),e}read(e,t){if(super.read(e,t),t&&("web-scene"===t.origin||"portal-item"===t.origin)&&null!=e&&Array.isArray(e.sublayers)){const i=this.readSublayerOverrides(e.sublayers,t);this.sublayers?this.applySublayerOverrides(this.sublayers,i):this.sublayerOverrides=i}}readSummaryStatistics(e,t){if("string"==typeof t.statisticsHRef){const e=Q(this.parsedUrl.path,t.statisticsHRef);return new $e({url:e})}return null}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}load(e){const t=p(e)?e.signal:null,i=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(K).then((()=>this._fetchService(t))).then((()=>this._fetchAssociatedFeatureService(t)));return this.addResolvingPromise(i),Promise.resolve(this)}loadAll(){return $(this,(e=>{pe.forEachSublayer(this.sublayers,(t=>{"building-group"!==t.type&&e(t)})),this.summaryStatistics&&e(this.summaryStatistics)}))}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"},e)}async save(){return this._debouncedSaveOperations(0,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"})}validateLayer(e){if(!e.layerType||"Building"!==e.layerType)throw new b("buildingscenelayer:layer-type-not-supported","BuildingSceneLayer does not support this layer type",{layerType:e.layerType})}_getTypeKeywords(){return["Building"]}_validateElevationInfo(){const e=this.elevationInfo;e&&("absolute-height"!==e.mode&&Xe.warn(".elevationInfo=","Building scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&Xe.warn(".elevationInfo=","Building scene layers do not support featureExpressionInfo"))}async _fetchAssociatedFeatureService(e){const t=new W(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedFeatureServiceItem=await t.fetchPortalItem()}catch(e){Xe.warn("Associated feature service item could not be loaded",e)}}};i([s({type:["BuildingSceneLayer"]})],We.prototype,"operationalLayerType",void 0),i([s({readOnly:!0})],We.prototype,"allSublayers",void 0),i([s(He)],We.prototype,"sublayers",void 0),i([r("service","sublayers")],We.prototype,"readSublayers",null),i([s({type:Ze,nonNullable:!0,json:{write:!0}})],We.prototype,"filters",void 0),i([s({type:String,json:{write:!0}})],We.prototype,"activeFilterId",void 0),i([s({readOnly:!0,type:$e})],We.prototype,"summaryStatistics",void 0),i([r("summaryStatistics",["statisticsHRef"])],We.prototype,"readSummaryStatistics",null),i([s({type:[String],json:{read:!1}})],We.prototype,"outFields",void 0),i([s(X)],We.prototype,"fullExtent",void 0),i([s({type:["show","hide","hide-children"]})],We.prototype,"listMode",void 0),i([s(l(w))],We.prototype,"spatialReference",void 0),i([s(Z)],We.prototype,"elevationInfo",null),i([s({json:{read:!1},readOnly:!0})],We.prototype,"type",void 0),i([s()],We.prototype,"associatedFeatureServiceItem",void 0),We=i([o("esri.layers.BuildingSceneLayer")],We);const ze=We;export default ze;