import{aQ as e,a2 as t,b6 as i,bF as s,k as n,bL as r}from"./p-566b0715.js";import{m as o,b_ as a,N as l,v as c,U as f,O as u,c9 as d}from"./p-9ae46e68.js";import{a as p}from"./p-023ccb69.js";import{Q as m}from"./p-bae36c84.js";import{t as y}from"./p-50ff864e.js";import{s as h,t as b}from"./p-b2d0e2de.js";import{m as j}from"./p-dc35ec83.js";import{f as w}from"./p-47f143cb.js";import{V as g}from"./p-574af054.js";import{n as N,u as F}from"./p-f8afda5b.js";import{d as v}from"./p-5a0fe1d0.js";import"./p-fe01b82b.js";import"./p-84bf99cb.js";import"./p-138c2b2c.js";import"./p-81e5b36e.js";import"./p-4003c7ae.js";import"./p-db87794e.js";import"./p-cb4bfb58.js";import"./p-285c6a34.js";import"./p-2a252a78.js";import"./p-3a2e88bf.js";import"./p-8031c809.js";import"./p-27ef204b.js";import"./p-b74f39e0.js";import"./p-06d309e6.js";import"./p-685003b3.js";import"./p-007111db.js";import"./p-0659cf81.js";import"./p-8ac97b63.js";import"./p-5ee2f7e2.js";import"./p-8d03d70f.js";import"./p-4fd6e394.js";import"./p-e5429b9e.js";const x=/^\s*"([\S\s]*)"\s*$/,I=/""/g,T=[","," ",";","|","\t"];function*D(e,t,i){let s=0;for(;s<=e.length;){const n=e.indexOf(t,s),r=e.substring(s,n>-1?n:void 0);s+=r.length+t.length,i&&!r.trim()||(yield r)}}function _(e){const t=e.includes("\r\n")?"\r\n":"\n";return D(e,t,!0)}function S(e,t){return D(e,t,!1)}function C(e){const t=e.trim();let i=0,s="";for(const e of T){const n=t.split(e).length;n>i&&(i=n,s=e)}return""===s?null:s}function*E(e,t,i,s=(()=>Object.create(null))){let n="",r="",o=0,a=s(),l=0;e:for(const c of e){const e=S(c,i);for(const c of e)if(n+=r+c,r="",o+=O(c),o%2==0){if(o>0){const e=x.exec(n);if(!e){a=s(),l=0,n="",o=0;continue e}a[t[l]]=e[1].replace(I,'"'),l++}else a[t[l]]=n,l++;n="",o=0}else r=i;0===o?(yield a,a=s(),l=0):r="\n"}}function O(e){let t=0,i=0;for(i=e.indexOf('"',i);i>=0;)t++,i=e.indexOf('"',i+1);return t}const k=F("esriGeometryPoint"),P=["csv"],V=[0,0];class q{constructor(e,t){this.x=e,this.y=t}}function G(e,t){const i=t.parsingOptions||{},s={delimiter:i.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:i.latitudeField,longitudeFieldName:i.longitudeField}},n=_(e);let{value:r}=n.next();if(!r)throw new o("csv-layer:empty-csv","CSV is empty",{csv:e});if(r=r.trim(),!i.delimiter){const e=C(r);if(!e)throw new o("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV");s.delimiter=e}const a=r.split(s.delimiter),l=s.layerDefinition={name:d(t.url,P)||"csv",drawingInfo:k,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:i.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:i.spatialReference||{wkid:102100}}};if(!i.latitudeField||!i.longitudeField){const e=L(a);if(!i.longitudeField&&!e.longitudeFieldName||!i.latitudeField&&!e.latitudeFieldName)throw new o("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file");s.locationInfo={longitudeFieldName:i.longitudeField||e.longitudeFieldName,latitudeFieldName:i.latitudeField||e.latitudeFieldName}}const c=M(n,s.delimiter,a,s.locationInfo);if(i.fields&&i.fields.length){const e=new Map;for(const t of i.fields)e.set(t.name.toLowerCase(),t);for(const t of c){const i=e.get(t.name.toLowerCase());if(i){const e=t.name;Object.assign(t,i),t.name=e}}}if(l.fields=c,!l.fields.some((e=>"esriFieldTypeOID"===e.type&&(l.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};l.objectIdField=e.name,l.fields.unshift(e)}if(l.timeInfo){const e=new v(l.fields),t=l.timeInfo;if(t.startTimeField){const i=e.get(t.startTimeField);i?(t.startTimeField=i.name,i.type="esriFieldTypeDate"):t.startTimeField=null}if(t.endTimeField){const i=e.get(t.endTimeField);i?(t.endTimeField=i.name,i.type="esriFieldTypeDate"):t.endTimeField=null}if(t.trackIdField){const i=e.get(t.trackIdField);t.trackIdField=i?i.name:null}t.startTimeField||t.endTimeField||(l.timeInfo=null)}return s}const R=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point-y"],$=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point-x"];function L(e){const t=e.map((e=>e.toLowerCase()));return{longitudeFieldName:e[t.indexOf($.find((e=>t.includes(e))))],latitudeFieldName:e[t.indexOf(R.find((e=>t.includes(e))))]}}function M(e,t,i,s){const n=[],r=E(e,i,t),o=[];e:for(;o.length<10;){const{value:e,done:t}=r.next();if(t)break e;o.push(e)}for(const e of i)if(e===s.longitudeFieldName||e===s.latitudeFieldName)n.push({name:e,type:"esriFieldTypeDouble",alias:e});else{const t=Q(o.map((t=>t[e]))),i={name:e,type:null,alias:e};switch(t){case"integer":i.type="esriFieldTypeInteger";break;case"double":i.type="esriFieldTypeDouble";break;case"date":i.type="esriFieldTypeDate",i.length=36;break;default:i.type="esriFieldTypeString",i.length=255}n.push(i)}return n}function Q(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let i=!1;if(""!==e){if(t.test(e))i=!0;else{let t=J(e);if(!isNaN(t))return/[.,]/.test(e)||!Number.isInteger(t)||t>214783647||t<-214783648?"double":"integer";if(-1===e.indexOf("E"))i=!0;else{if(t=Number(e),!isNaN(t))return"double";if(-1===e.indexOf(","))i=!0;else{if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";i=!0}}}return i?/^[-]?\d*[.,]?\d*$/.test(e)?"string":B(new Date(e),e)?"date":"string":"string"}})).reduce(((e,t)=>void 0===e||e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))}const Z=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,A=Number.isNaN(new Date("technology 10").getTime());function B(e,t){if(!e||"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let i=!0;if(!A&&/\d+\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,s=0;for(;!t&&s<=e.length;)t=!Z.test(e[s]),s++;i=!t}}return i}const J=function(){const e=p(),t=new RegExp("^"+e.regexp+"$"),i=new RegExp("["+e.group+"\\s\\xa0]","g"),s=e.factor;return function(n){const r=t.exec(n);if(e.factor=s,!r)return NaN;let o=r[1];if(!r[1]){if(!r[2])return NaN;o=r[2],e.factor*=-1}return o=o.replace(i,"").replace(e.decimal,"."),+o*e.factor}}();export default class{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){var e;null==(e=this._queryEngine)||e.destroy(),this._queryEngine=null}async load(e,t={}){var i;this.loadOptions=e;const[s]=await Promise.all([this._fetch(t.signal),this._checkProjection(null==e||null==(i=e.parsingOptions)?void 0:i.spatialReference)]),n=G(s,e);this.locationInfo=n.locationInfo,this.delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const r=await this._createFeatures(s);if(this._queryEngine.featureStore.addMany(r),n.layerDefinition.extent=this._queryEngine.fullExtent,n.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n}async applyEdits(){throw new o("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){var t;return this.loadOptions.customParameters=e,null==(t=this._snapshotTask)||t.abort(),this._snapshotTask=a(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),l(e)||c.getLogger("esri.layers.CSVLayer").error(new o("csv-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){const{url:t,customParameters:i}=this.loadOptions;if(!t)throw new o("csv-layer:invalid-source","url not defined");const s=f(t);return(await u(s.path,{query:{...s.query,...i},responseType:"text",signal:e})).data}_createQueryEngine(e){const{objectIdField:t,fields:i,extent:s,timeInfo:n}=e.layerDefinition,r=new j({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new g({fields:i,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:n,objectIdField:t,spatialReference:s.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:r})}async _createFeatures(r){const{latitudeFieldName:o,longitudeFieldName:a}=this.locationInfo,{objectIdField:l,fieldsIndex:c,spatialReference:f}=this._queryEngine;let u=[];const d=[],p=c.fields.filter((e=>e.name!==l)).map((e=>e.name));let j=0;const w=_(r);w.next();const g={};for(const t of c.fields)if("esriFieldTypeOID"!==t.type&&"esriFieldTypeGlobalID"!==t.type){const i=e(t);void 0!==i&&(g[t.name]=i)}const F=E(w,p,this.delimiter,N(g,l));for(const e of F){const t=this._parseCoordinateValue(e[o]),i=this._parseCoordinateValue(e[a]);if(null!=i&&null!=t&&!isNaN(t)&&!isNaN(i)){e[o]=t,e[a]=i;for(const t in e)if(t!==o&&t!==a)if(c.isDateField(t)){const i=new Date(e[t]);e[t]=B(i,e[t])?i.getTime():null}else if(c.isNumericField(t)){const i=J(e[t]);e[t]=isNaN(i)?null:i}e[l]=j,j++,u.push(new q(i,t)),d.push(e)}}if(!t({wkid:4326},f))if(i(f))for(const e of u)[e.x,e.y]=s(e.x,e.y,V);else u=m(y,u,n.WGS84,f,null);const v=[];for(let e=0;e<u.length;e++){const{x:t,y:i}=u[e],s=d[e];s[l]=e+1,v.push(new h(new b([],[t,i]),s,null,s[l]))}return v}_parseCoordinateValue(e){if(null==e||""===e)return null;let t=J(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t}async _checkProjection(e){try{await w(r,e)}catch{throw new o("csv-layer:projection-not-supported","Projection not supported")}}}export{Q as inferFieldType,M as inferFields,L as inferLocationInfo}