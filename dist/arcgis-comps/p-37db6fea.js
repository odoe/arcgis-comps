import{Q as t,e as r,i as e}from"./p-e58503d5.js";import{f as s,u as a,d as p,c as i,p as o,o as m}from"./p-b2597a08.js";import{v as c}from"./p-c1cd5521.js";import{e as n}from"./p-7ca40eac.js";import{l as j}from"./p-a87cccba.js";import"./p-53bb6ab4.js";import"./p-a9a30646.js";import"./p-54330161.js";import"./p-b79fcce3.js";import"./p-93765525.js";import"./p-765e6c28.js";import"./p-8747982c.js";import"./p-8bc9b36a.js";import"./p-7a658388.js";import"./p-e273719b.js";import"./p-74de0937.js";import"./p-2f398ed1.js";import"./p-d3105731.js";import"./p-fb38a9d0.js";import"./p-f94762ac.js";import"./p-ea916a39.js";import"./p-8a919d07.js";import"./p-efbca0ca.js";import"./p-c048b814.js";import"./p-dc852195.js";import"./p-a131049b.js";import"./p-a2324023.js";import"./p-e258f3af.js";const u=m({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:t=>t.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});let b=class extends j{constructor(t){super(t)}solve(r,e){return async function(r,e,m){const j=[],b=[],f={},l={},d=n(r),{path:A}=d;e.stops&&e.stops.features&&a(e.stops.features,b,"stops.features",f),e.pointBarriers&&e.pointBarriers.features&&a(e.pointBarriers.features,b,"pointBarriers.features",f),e.polylineBarriers&&e.polylineBarriers.features&&a(e.polylineBarriers.features,b,"polylineBarriers.features",f),e.polygonBarriers&&e.polygonBarriers.features&&a(e.polygonBarriers.features,b,"polygonBarriers.features",f);const y=await c(b);for(const t in f){const r=f[t];j.push(t),l[t]=y.slice(r[0],r[1])}if(p(l,j)){let t=null;try{t=await i(A,e.apiKey,m)}catch{}t&&!t.hasZ&&o(l,j)}for(const t in l)l[t].forEach(((r,s)=>{e.get(t)[s].geometry=r}));const B={...m,query:{...d.query,...u.toQueryParams(e),f:"json"}},v=A.endsWith("/solve")?A:`${A}/solve`,N=await t(v,B);return s(N)}(this.url,r,e)}};b=r([e("esri.tasks.RouteTask")],b);const f=b;export default f;