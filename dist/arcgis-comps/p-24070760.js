import{a5 as r,m as e}from"./p-9ae46e68.js";import{j as t}from"./p-566b0715.js";import{a as n,n as o}from"./p-47bfad81.js";import"./p-84bf99cb.js";import"./p-fe01b82b.js";import"./p-41655335.js";async function i(n=null,o){var i,a;if(r.geometryServiceUrl)return r.geometryServiceUrl;if(!n)throw new e("internal:geometry-service-url-not-configured");let s;s="portal"in n?n.portal||t.getDefault():n,await s.load({signal:o});const l=null==(i=s.helperServices)||null==(a=i.geometry)?void 0:a.url;if(!l)throw new e("internal:geometry-service-url-not-configured");return l}async function a(r,t,a=null,s){const l=await i(a,s),c=new n;c.geometries=[r],c.outSpatialReference=t;const p=await o(l,c,{signal:s});if(p&&Array.isArray(p)&&1===p.length)return p[0];throw new e("internal:geometry-service-projection-failed")}export{i as getGeometryServiceURL,a as projectGeometry}