import{al as t,co as n,r}from"./p-9ae46e68.js";import"./p-84bf99cb.js";function e(n){return t(`esri/libs/i3s/${n}`)}let o,a,i;async function s(t){await F();const n=[t.geometryBuffer];return{result:d(t,n),transferList:n}}async function c(t){var r;await F();const e=[t.geometryBuffer],{geometryBuffer:o}=t,a=o.byteLength,s=i._malloc(a),c=new Uint8Array(i.HEAPU8.buffer,s,a);c.set(new Uint8Array(o));const l=i.dracoDecompressPointCloudData(s,c.byteLength);if(i._free(s),l.error.length>0)throw`i3s.wasm: ${l.error}`;const f=(null==(r=l.featureIds)?void 0:r.length)>0?n(l.featureIds):null,u=n(l.positions);return f&&e.push(f.buffer),e.push(u.buffer),{result:{positions:u,featureIds:f},transferList:e}}async function l(t){await F(),b(t);const n={buffer:t.buffer};return{result:n,transferList:[n.buffer]}}async function f(t){await F(),w(t)}async function u(t){await F(),i.setLegacySchema(t.context,t.jsonSchema)}function y(t){A(t)}function w(t){const n=t.modifications,r=i._malloc(8*n.length),e=new Float64Array(i.HEAPU8.buffer,r,n.length);for(let t=0;t<n.length;++t)e[t]=n[t];i.setModifications(t.context,r,n.length,t.isGeodetic),i._free(r)}function d(t,e){if(!i)return null;const{context:o,localOrigin:a,globalTrafo:s,mbs:c,obb:l,elevationOffset:f,geometryBuffer:u,geometryDescriptor:y,indexToVertexProjector:w,vertexToRenderProjector:d}=t,m=i._malloc(u.byteLength),b=i._malloc(33*Float64Array.BYTES_PER_ELEMENT),A=new Uint8Array(i.HEAPU8.buffer,m,u.byteLength);A.set(new Uint8Array(u));const F=new Float64Array(i.HEAPU8.buffer,b,33);p(F,a);let g=F.byteOffset+3*F.BYTES_PER_ELEMENT,v=new Float64Array(F.buffer,g);p(v,s),g+=16*F.BYTES_PER_ELEMENT,v=new Float64Array(F.buffer,g),p(v,c),g+=4*F.BYTES_PER_ELEMENT,r(l)&&(v=new Float64Array(F.buffer,g),p(v,l.center),g+=3*F.BYTES_PER_ELEMENT,v=new Float64Array(F.buffer,g),p(v,l.halfSize),g+=3*F.BYTES_PER_ELEMENT,v=new Float64Array(F.buffer,g),p(v,l.quaternion));const x=y,U={isDraco:!1,isLegacy:!1,color:t.layouts.some((t=>t.some((t=>"color"===t.name)))),normal:t.needNormals&&t.layouts.some((t=>t.some((t=>"normalCompressed"===t.name)))),uv0:t.layouts.some((t=>t.some((t=>"uv0"===t.name)))),uvRegion:t.layouts.some((t=>t.some((t=>"uvRegion"===t.name)))),featureIndex:x.featureIndex},D=i.process(o,!!t.obb,m,A.byteLength,x,U,b,f,w,d,t.normalReferenceFrame);if(i._free(b),i._free(m),D.error.length>0)throw`i3s.wasm: ${D.error}`;if(D.discarded)return null;const M=D.componentOffsets.length>0?n(D.componentOffsets):null,O=D.featureIds.length>0?n(D.featureIds):null,P=n(D.interleavedVertedData).buffer,h=n(1===D.indicesType?new Uint16Array(D.indices.buffer,D.indices.byteOffset,D.indices.byteLength/2):new Uint32Array(D.indices.buffer,D.indices.byteOffset,D.indices.byteLength/4)),j=n(D.positions),L=n(1===D.positionIndicesType?new Uint16Array(D.positionIndices.buffer,D.positionIndices.byteOffset,D.positionIndices.byteLength/2):new Uint32Array(D.positionIndices.buffer,D.positionIndices.byteOffset,D.positionIndices.byteLength/4)),R={layout:t.layouts[0],interleavedVertexData:P,indices:h,hasColors:D.hasColors,hasModifications:D.hasModifications,positionData:{data:j,indices:L}};return O&&e.push(O.buffer),M&&e.push(M.buffer),e.push(P),e.push(h.buffer),e.push(j.buffer),e.push(L.buffer),{componentOffsets:M,featureIds:O,transformedGeometry:R,obb:D.obb}}function m(t){return 0===t?0:1===t?1:2===t?2:3}function b(t){const{context:n,buffer:r}=t,e=i._malloc(r.byteLength),o=r.byteLength/Float64Array.BYTES_PER_ELEMENT,a=new Float64Array(i.HEAPU8.buffer,e,o),s=new Float64Array(r);a.set(s),i.filterOBBs(n,e,o),s.set(a),i._free(e)}function A(t){i&&i.destroy(t)}function p(t,n){for(let r=0;r<n.length;++r)t[r]=n[r]}function F(){return i?Promise.resolve():(a||(a=(o||(o=new Promise((t=>import("./p-abeb8e32.js").then((t=>t.i)).then((({default:n})=>{const r=n({locateFile:e,onRuntimeInitialized:()=>t(r)});delete r.then})))).catch((t=>Promise.reject(t)))),o).then((t=>{i=t,a=null}))),a)}const g={transform:d,destroy:A};export{y as destroyContext,c as dracoDecompressPointCloudData,l as filterObbsForModifications,b as filterObbsForModificationsSync,F as initialize,m as interpretObbModificationResults,s as process,u as setLegacySchema,f as setModifications,w as setModificationsSync,g as test}