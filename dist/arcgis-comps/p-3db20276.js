import{e as t,d as e,i,bm as r,a7 as s,r as o}from"./p-9ae46e68.js";import{m as a,M as n,o as p,cJ as l,av as d,k as u}from"./p-566b0715.js";import c from"./p-7e9d2371.js";import{u as m}from"./p-4681e856.js";import h from"./p-98a14d68.js";import{a as j}from"./p-f8afda5b.js";import{b as f}from"./p-f42060e0.js";import"./p-84bf99cb.js";import"./p-fe01b82b.js";import"./p-94f8dc11.js";import"./p-bb07d873.js";import"./p-8ac97b63.js";import"./p-a0a931f0.js";import"./p-dfc6337f.js";import"./p-77e6a663.js";import"./p-c5b7f7c3.js";import"./p-30ddb3a0.js";import"./p-74fc1b7f.js";import"./p-b3024dec.js";import"./p-4fcbc3c5.js";import"./p-4b3ae2cf.js";import"./p-3a2e88bf.js";import"./p-6443bfb4.js";import"./p-8e6daf54.js";import"./p-8e03c038.js";import"./p-32462343.js";import"./p-c0757461.js";import"./p-6ebb24ba.js";import"./p-4fd6e394.js";import"./p-22c8d854.js";import"./p-3d1b25b6.js";import"./p-93d9099f.js";import"./p-d3898fd7.js";import"./p-844dad6c.js";import"./p-c59d0a4d.js";import"./p-3a5fe179.js";import"./p-138c2b2c.js";import"./p-ae0b06e3.js";import"./p-a293872e.js";import"./p-79553c8d.js";import"./p-f271906a.js";import"./p-cf2267f9.js";import"./p-d2e19070.js";import"./p-e5429b9e.js";import"./p-cf8dc9be.js";import"./p-f17028ec.js";import"./p-5c89c68e.js";import"./p-57ae469d.js";import"./p-725fd184.js";import"./p-0c91ebaf.js";import"./p-72355290.js";import"./p-d68829c1.js";import"./p-81102839.js";import"./p-2f7c985e.js";import"./p-00b9ea57.js";import"./p-5a0fe1d0.js";import"./p-7818def0.js";import"./p-da143060.js";import"./p-32824614.js";import"./p-15bb2887.js";import"./p-06d309e6.js";let y=class extends a{constructor(t){super(t),this.type="csv",this.refresh=r((async t=>{await this.load();const{extent:e,timeExtent:i}=await this._connection.invoke("refresh",t);return this.sourceJSON.extent=e,i&&(this.sourceJSON.timeInfo.timeExtent=[i.start,i.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(t){const e=o(t)?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){var t;null==(t=this._connection)||t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const i=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return h.fromJSON(i)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const i=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:i.count,extent:n.fromJSON(i.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async _startWorker(t){this._connection=await m("CSVSourceWorker",{strategy:s("feature-layers-workers")?"dedicated":"local",signal:t});const{url:e,delimiter:i,fields:r,latitudeField:o,longitudeField:a,spatialReference:n,timeInfo:p}=this.loadOptions,l=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:i,fields:null==r?void 0:r.map((t=>t.toJSON())),latitudeField:o,longitudeField:a,spatialReference:null==n?void 0:n.toJSON(),timeInfo:null==p?void 0:p.toJSON()}},{signal:t});this.locationInfo=l.locationInfo,this.sourceJSON=l.layerDefinition,this.delimiter=l.delimiter}};t([e()],y.prototype,"type",void 0),t([e()],y.prototype,"loadOptions",void 0),t([e()],y.prototype,"customParameters",void 0),t([e()],y.prototype,"locationInfo",void 0),t([e()],y.prototype,"sourceJSON",void 0),t([e()],y.prototype,"delimiter",void 0),y=t([i("esri.layers.graphics.sources.CSVSource")],y);const b=y;let g=class extends c{constructor(...t){super(...t),this.capabilities=j(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=u.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return"string"==typeof t?{url:t,...e}:t}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(t,e){return null!=e.showLabels?e.showLabels:!!(e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.labelingInfo)}set url(t){this._set("url",t)}async createGraphicsSource(t){const e=new b({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url},customParameters:this.customParameters});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then((()=>this.source.queryFeatures(f.from(t)||this.createQuery()))).then((t=>{if(null!=t&&t.features)for(const e of t.features)e.layer=e.sourceLayer=this;return t}))}queryObjectIds(t,e){return this.load().then((()=>this.source.queryObjectIds(f.from(t)||this.createQuery())))}queryFeatureCount(t,e){return this.load().then((()=>this.source.queryFeatureCount(f.from(t)||this.createQuery())))}queryExtent(t,e){return this.load().then((()=>this.source.queryExtent(f.from(t)||this.createQuery())))}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return o(e)&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};t([e({readOnly:!0,json:{read:!1,write:!1}})],g.prototype,"capabilities",void 0),t([e({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],g.prototype,"delimiter",void 0),t([e({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],g.prototype,"editingEnabled",void 0),t([e({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],g.prototype,"fields",void 0),t([e({type:Boolean,readOnly:!0})],g.prototype,"isTable",null),t([p("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],g.prototype,"readWebMapLabelsVisible",null),t([e({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],g.prototype,"latitudeField",void 0),t([e({type:["show","hide"]})],g.prototype,"listMode",void 0),t([e({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],g.prototype,"locationType",void 0),t([e({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],g.prototype,"longitudeField",void 0),t([e({type:["CSV"]})],g.prototype,"operationalLayerType",void 0),t([e()],g.prototype,"outFields",void 0),t([e({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],g.prototype,"path",void 0),t([e({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],g.prototype,"portalItem",void 0),t([e({json:{read:!1},cast:null,type:b,readOnly:!0})],g.prototype,"source",void 0),t([e({json:{read:!1},value:"csv",readOnly:!0})],g.prototype,"type",void 0),t([e({json:{read:l,write:{isRequired:!0,ignoreOrigin:!0,writer:d}}})],g.prototype,"url",null),g=t([i("esri.layers.CSVLayer")],g);const w=g;export default w;