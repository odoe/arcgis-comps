import{e as t,d as i,i as e,I as r,_ as s,K as o,A as a,a2 as p,a0 as n}from"./p-e58503d5.js";import"./p-b79fcce3.js";import{G as l}from"./p-dae095dd.js";import{m as d}from"./p-efbca0ca.js";import{u}from"./p-480e5606.js";import m from"./p-dc852195.js";import{a as c}from"./p-ed18725d.js";import{b as h}from"./p-5e833dfc.js";import{m as j,p as f}from"./p-8a919d07.js";import"./p-53bb6ab4.js";import"./p-93765525.js";import"./p-765e6c28.js";import"./p-a9a30646.js";import"./p-8747982c.js";import"./p-0e784e4d.js";import"./p-8bc9b36a.js";import"./p-7a658388.js";import"./p-e273719b.js";import"./p-74de0937.js";import"./p-2f398ed1.js";import"./p-d3105731.js";import"./p-fb38a9d0.js";import"./p-f94762ac.js";import"./p-ea916a39.js";import"./p-dbdf15fc.js";import"./p-e0d9ff4c.js";import"./p-08e5f531.js";import"./p-dfc6337f.js";import"./p-9f1c2d50.js";import"./p-54330161.js";import"./p-c048b814.js";import"./p-6b2eb7a7.js";import"./p-01e5a461.js";import"./p-889f7a78.js";import"./p-1f81b35d.js";import"./p-81b9df84.js";import"./p-5ce39624.js";import"./p-e9bae5e9.js";import"./p-b0565d49.js";import"./p-51a17e75.js";import"./p-d208934e.js";import"./p-a131049b.js";import"./p-a2324023.js";import"./p-afac6fb2.js";import"./p-3e39c093.js";import"./p-7731c620.js";import"./p-5d962998.js";import"./p-2db4840f.js";import"./p-bba8b671.js";import"./p-22c9f19c.js";import"./p-c096b5df.js";import"./p-da33e926.js";import"./p-a24f7752.js";import"./p-ccdb8e80.js";import"./p-4a6dc5e4.js";import"./p-6a92ecb9.js";import"./p-7a5bfd29.js";import"./p-1ab449fc.js";import"./p-a6c8fb32.js";import"./p-0edb3309.js";import"./p-e8160b60.js";import"./p-2e8ad983.js";import"./p-e3270d48.js";import"./p-e44bd0a6.js";import"./p-e654504b.js";import"./p-0eb619a6.js";import"./p-fe68aab5.js";import"./p-c6970847.js";import"./p-de86b3c9.js";import"./p-37d3434c.js";import"./p-120b7410.js";import"./p-b1eff69d.js";import"./p-612de336.js";import"./p-91fe06d4.js";import"./p-ab0e9273.js";import"./p-ff2962f5.js";import"./p-15a9486c.js";import"./p-06d309e6.js";let y=class extends d{constructor(t){super(t),this.type="csv",this.refresh=r((async t=>{await this.load();const{extent:i,timeExtent:e}=await this._connection.invoke("refresh",t);return this.sourceJSON.extent=i,e&&(this.sourceJSON.timeInfo.timeExtent=[e.start,e.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(t){const i=a(t)?t.signal:null;return this.addResolvingPromise(this._startWorker(i)),Promise.resolve(this)}destroy(){var t;null==(t=this._connection)||t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,i={}){await this.load(i);const e=await this._connection.invoke("queryFeatures",t?t.toJSON():null,i);return m.fromJSON(e)}async queryFeaturesJSON(t,i={}){return await this.load(i),this._connection.invoke("queryFeatures",t?t.toJSON():null,i)}async queryFeatureCount(t,i={}){return await this.load(i),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,i)}async queryObjectIds(t,i={}){return await this.load(i),this._connection.invoke("queryObjectIds",t?t.toJSON():null,i)}async queryExtent(t,i={}){await this.load(i);const e=await this._connection.invoke("queryExtent",t?t.toJSON():null,i);return{count:e.count,extent:s.fromJSON(e.extent)}}async querySnapping(t,i={}){return await this.load(i),this._connection.invoke("querySnapping",t,i)}async _startWorker(t){this._connection=await u("CSVSourceWorker",{strategy:o("feature-layers-workers")?"dedicated":"local",signal:t});const{url:i,delimiter:e,fields:r,latitudeField:s,longitudeField:a,spatialReference:p,timeInfo:n}=this.loadOptions,l=await this._connection.invoke("load",{url:i,customParameters:this.customParameters,parsingOptions:{delimiter:e,fields:null==r?void 0:r.map((t=>t.toJSON())),latitudeField:s,longitudeField:a,spatialReference:null==p?void 0:p.toJSON(),timeInfo:null==n?void 0:n.toJSON()}},{signal:t});this.locationInfo=l.locationInfo,this.sourceJSON=l.layerDefinition,this.delimiter=l.delimiter}};t([i()],y.prototype,"type",void 0),t([i()],y.prototype,"loadOptions",void 0),t([i()],y.prototype,"customParameters",void 0),t([i()],y.prototype,"locationInfo",void 0),t([i()],y.prototype,"sourceJSON",void 0),t([i()],y.prototype,"delimiter",void 0),y=t([e("esri.layers.graphics.sources.CSVSource")],y);const b=y;let g=class extends l{constructor(...t){super(...t),this.capabilities=c(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=n.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,i){return"string"==typeof t?{url:t,...i}:t}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(t,i){return null!=i.showLabels?i.showLabels:!!(i.layerDefinition&&i.layerDefinition.drawingInfo&&i.layerDefinition.drawingInfo.labelingInfo)}set url(t){this._set("url",t)}async createGraphicsSource(t){const i=new b({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url},customParameters:this.customParameters});return this._set("source",i),await i.load({signal:t}),this.read({locationInfo:i.locationInfo,columnDelimiter:i.delimiter},{origin:"service",url:this.parsedUrl}),i}queryFeatures(t,i){return this.load().then((()=>this.source.queryFeatures(h.from(t)||this.createQuery()))).then((t=>{if(null!=t&&t.features)for(const i of t.features)i.layer=i.sourceLayer=this;return t}))}queryObjectIds(t,i){return this.load().then((()=>this.source.queryObjectIds(h.from(t)||this.createQuery())))}queryFeatureCount(t,i){return this.load().then((()=>this.source.queryFeatureCount(h.from(t)||this.createQuery())))}queryExtent(t,i){return this.load().then((()=>this.source.queryExtent(h.from(t)||this.createQuery())))}write(t,i){return super.write(t,{...i,writeLayerSchema:!0})}async hasDataChanged(){try{const{dataChanged:t,updates:i}=await this.source.refresh(this.customParameters);return a(i)&&this.read(i,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};t([i({readOnly:!0,json:{read:!1,write:!1}})],g.prototype,"capabilities",void 0),t([i({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],g.prototype,"delimiter",void 0),t([i({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],g.prototype,"editingEnabled",void 0),t([i({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],g.prototype,"fields",void 0),t([i({type:Boolean,readOnly:!0})],g.prototype,"isTable",null),t([p("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],g.prototype,"readWebMapLabelsVisible",null),t([i({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],g.prototype,"latitudeField",void 0),t([i({type:["show","hide"]})],g.prototype,"listMode",void 0),t([i({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],g.prototype,"locationType",void 0),t([i({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],g.prototype,"longitudeField",void 0),t([i({type:["CSV"]})],g.prototype,"operationalLayerType",void 0),t([i()],g.prototype,"outFields",void 0),t([i({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],g.prototype,"path",void 0),t([i({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],g.prototype,"portalItem",void 0),t([i({json:{read:!1},cast:null,type:b,readOnly:!0})],g.prototype,"source",void 0),t([i({json:{read:!1},value:"csv",readOnly:!0})],g.prototype,"type",void 0),t([i({json:{read:j,write:{isRequired:!0,ignoreOrigin:!0,writer:f}}})],g.prototype,"url",null),g=t([e("esri.layers.CSVLayer")],g);const w=g;export default w;