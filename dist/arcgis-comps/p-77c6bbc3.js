import{s as t,a7 as s,cH as e,gh as i,cA as r,W as n}from"./p-7b6f6c18.js";import{Z as h,v as a,n as o}from"./p-a4c129b5.js";import{u as l}from"./p-f06d001b.js";import"./p-227a5838.js";import"./p-51e4508b.js";import"./p-50ff864e.js";import"./p-c3db99c7.js";import"./p-3e28396b.js";import"./p-f78de11d.js";const c=t.getLogger("esri.views.2d.layers.features.support.whereUtils"),u={getAttribute:(t,s)=>t.field(s)};async function p(t,e){const i=await import("./p-8ec48dc4.js");try{const r=i.WhereClause.create(t,e);if(!r.isStandardized){const t=new s("mapview - bad input","Unable to apply filter's definition expression, as expression is not standardized.",r);c.error(t)}return t=>{const s=t.readArcadeFeature();return r.testFeature(s,u)}}catch(s){return c.warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",t),()=>!0}}const d=t.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter");export default class{constructor(t){this._geometryBounds=e(),this._idToVisibility=new Map,this._serviceInfo=t}get hash(){return this._hash}check(t){return this._applyFilter(t)}clear(){const t=this._resetAllHiddenIds();return this.update(),{show:t,hide:[]}}invalidate(){this._idToVisibility.forEach(((t,s)=>{this._idToVisibility.set(s,0)}))}setKnownIds(t){for(const s of t)this._idToVisibility.set(s,1)}setTrue(t){const s=[],e=[],i=new Set(t);return this._idToVisibility.forEach(((t,r)=>{const n=!!(1&this._idToVisibility.get(r)),h=i.has(r);!n&&h?s.push(r):n&&!h&&e.push(r),this._idToVisibility.set(r,h?3:0)})),{show:s,hide:e}}createQuery(){const{geometry:t,spatialRel:s,where:e,timeExtent:r,objectIds:n}=this;return i.fromJSON({geometry:t,spatialRel:s,where:e,timeExtent:r,objectIds:n})}async update(t,s){this._hash=JSON.stringify(t);const e=await h(t,null,s);await Promise.all([this._setGeometryFilter(e),this._setIdFilter(e),this._setAttributeFilter(e),this._setTimeFilter(e)])}async _setAttributeFilter(t){if(!t||!t.where)return this._clause=null,void(this.where=null);this._clause=await p(t.where,this._serviceInfo.fieldsIndex),this.where=t.where}_setIdFilter(t){this._idsToShow=t&&t.objectIds&&new Set(t.objectIds),this._idsToHide=t&&t.hiddenIds&&new Set(t.hiddenIds),this.objectIds=t&&t.objectIds}async _setGeometryFilter(t){if(!t||!t.geometry)return this._spatialQueryOperator=null,this.geometry=null,void(this.spatialRel=null);const s=t.geometry,e=t.spatialRel||"esriSpatialRelIntersects",i=await a(e,s,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);r(this._geometryBounds,s),this._spatialQueryOperator=i,this.geometry=s,this.spatialRel=e}_setTimeFilter(t){if(this.timeExtent=this._timeOperator=null,t&&t.timeExtent)if(this._serviceInfo.timeInfo)this.timeExtent=t.timeExtent,this._timeOperator=o(this._serviceInfo.timeInfo,t.timeExtent,l);else{const e=new s("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",t.timeExtent);d.error(e)}}_applyFilter(t){return this._filterByGeometry(t)&&this._filterById(t)&&this._filterByTime(t)&&this._filterByExpression(t)}_filterByExpression(t){return!this.where||this._clause(t)}_filterById(t){return(!this._idsToHide||!this._idsToHide.size||!this._idsToHide.has(t.getObjectId()))&&(!this._idsToShow||!this._idsToShow.size||this._idsToShow.has(t.getObjectId()))}_filterByGeometry(t){if(!this.geometry)return!0;const s=t.readHydratedGeometry();return!!s&&this._spatialQueryOperator(s)}_filterByTime(t){return!n(this._timeOperator)||this._timeOperator(t)}_resetAllHiddenIds(){const t=[];return this._idToVisibility.forEach(((s,e)=>{1&s||(this._idToVisibility.set(e,1),t.push(e))})),t}}