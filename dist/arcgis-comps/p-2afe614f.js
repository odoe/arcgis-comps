import{U as s,dZ as t,B as i,ay as p,D as o,dB as r,e,i as m}from"./p-c8bc3433.js";import{l as a,u as h}from"./p-c4678b0b.js";import{i as f}from"./p-bff8da07.js";import{r as j}from"./p-ad145b1b.js";import"./p-84bf99cb.js";import"./p-8fd94488.js";import"./p-feee221d.js";import"./p-a6945989.js";import"./p-30eee135.js";import"./p-b0a11892.js";import"./p-ea65d9c9.js";import"./p-47e1bd73.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-099e7dab.js";import"./p-50ff864e.js";import"./p-fd064341.js";import"./p-b8e3591b.js";import"./p-f806c5d9.js";import"./p-2c46c687.js";import"./p-60f5af83.js";import"./p-4414d64f.js";import"./p-a617738c.js";import"./p-be58da65.js";import"./p-17a8cfc0.js";import"./p-97ec6ae5.js";import"./p-f9493103.js";import"./p-c167c2b1.js";import"./p-1fcdfc57.js";import"./p-38a6e03f.js";import"./p-a805321e.js";import"./p-96687495.js";import"./p-815ddfb1.js";import"./p-b220b850.js";import"./p-a989744e.js";import"./p-429d3db0.js";import"./p-167f65f1.js";import"./p-b7c042b3.js";import"./p-7c926f90.js";import"./p-e991a11e.js";import"./p-b1c9647c.js";let c=class extends(a(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(s,t){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const i=this.graphicsViews.reverse().map((i=>i.hitTest(s,t)));return Promise.all(i).then((s=>s.filter(((s,t)=>(s&&(s.popupTemplate=this._popupTemplates.get(this.graphicsViews[t]),s.layer=this.layer,s.sourceLayer=this.layer),!!s)))[0]||null))}update(s){if(this.graphicsViews)for(const t of this.graphicsViews)t.processUpdate(s)}attach(){this.handles.add([s(this.layer,"featureCollections",(s=>{this._clear();for(const{popupInfo:r,featureSet:e,layerDefinition:m}of s){const s=t.fromJSON(e),a=new i(s.features),h=m.drawingInfo,c=r?p.fromJSON(r):null,n=o(h.renderer),b=new j({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:a,renderer:n,container:new f(this.view.featuresTilingScheme)});this._graphicsViewMap[s.geometryType]=b,this._popupTemplates.set(b,c),"polygon"!==s.geometryType||this.layer.polygonSymbol?"polyline"!==s.geometryType||this.layer.lineSymbol?"point"!==s.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=n.symbol):this.layer.lineSymbol=n.symbol:this.layer.polygonSymbol=n.symbol,this.graphicsViews.push(b),this.container.addChild(b.container)}})),s(this.layer,"polygonSymbol",(s=>{this._graphicsViewMap.polygon.renderer=new r({symbol:s})})),s(this.layer,"lineSymbol",(s=>{this._graphicsViewMap.polyline.renderer=new r({symbol:s})})),s(this.layer,"pointSymbol",(s=>{this._graphicsViewMap.point.renderer=new r({symbol:s})}))],"georsslayerview")}detach(){this.handles.remove("georsslayerview"),this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const s of this.graphicsViews)s.viewChange()}_clear(){this.container.removeAllChildren();for(const s of this.graphicsViews)s.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};c=e([m("esri.views.2d.layers.GeoRSSLayerView2D")],c);const n=c;export default n;