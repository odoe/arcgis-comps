import{e as t,i as s,Q as e,r as i,hT as p}from"./p-5420851c.js";import r from"./p-121d0deb.js";import"./p-53bb6ab4.js";import"./p-4c6040da.js";import"./p-bdb8e9d6.js";import"./p-47e1bd73.js";import"./p-e4db8bd2.js";import"./p-e2fe661c.js";import"./p-baad017f.js";import"./p-54db165f.js";import"./p-4d140ee3.js";import"./p-13d3a443.js";import"./p-6189adb6.js";import"./p-ba8c567b.js";import"./p-2d0c34e5.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-7e5e535f.js";import"./p-9047f753.js";import"./p-8bf8e457.js";import"./p-4d0ba4c4.js";import"./p-e991a11e.js";import"./p-cc74fdc8.js";import"./p-03d6250d.js";import"./p-8dd46af5.js";import"./p-4dafedac.js";let o=class extends r{initialize(){this.handles.add([e(this.view,"viewpoint",(()=>this._update()))])}_injectOverrides(t){let s=super._injectOverrides(t);const e=this.view.scale,r=this.layer.sublayers.filter((t=>function(t,s){return!t.visible||0!==t.minScale&&s>t.minScale||0!==t.maxScale&&s<t.maxScale}(t,e))).map((t=>t.subtypeCode));if(!r.length)return s;s=i(s)?s:(new p).toJSON();const o=`NOT ${this.layer.subtypeField} IN (${r.join(",")})`;return s.where=s.where?`(${s.where}) AND (${o})`:o,s}_setLayersForFeature(t){const s=this.layer.fieldsIndex.get(this.layer.subtypeField),e=t.attributes[s.name],i=this.layer.sublayers.find((t=>t.subtypeCode===e));t.layer=i,t.sourceLayer=this.layer}_createSchemaConfig(){const t={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map((t=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:t.labelingInfo,labelsVisible:t.labelsVisible,renderer:t.renderer,subtypeCode:t.subtypeCode,orderBy:null})))},s=this.layer.sublayers.map((t=>t.subtypeCode)).join(",");let e=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return e+=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${s})`:"1=2",{...super._createSchemaConfig(),...t,definitionExpression:e}}};o=t([s("esri.views.2d.layers.SubtypeGroupLayerView2D")],o);const d=o;export default d;