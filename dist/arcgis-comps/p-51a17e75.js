import{c as e,e as t,d as s,f as i,i as r,a1 as n,aV as o,D as l,o as a,am as u,an as d}from"./p-e58503d5.js";import{l as h,P as p,N as c}from"./p-0e784e4d.js";import y from"./p-5ce39624.js";import{h as b}from"./p-e273719b.js";import{r as m}from"./p-a9a30646.js";import{b as v,F as w}from"./p-765e6c28.js";import{v as f,p as g}from"./p-dbdf15fc.js";import{m as j,S}from"./p-8bc9b36a.js";var x;const N=e.getLogger("esri.renderers.support.AttributeColorInfo");let H=x=class extends n{constructor(e){super(e),this.color=null,this.field=null,this.label=null,this.valueExpression=null,this.valueExpressionTitle=null}castField(e){return null==e?e:"function"==typeof e?(N.error(".field: field must be a string value"),null):o(e)}getAttributeHash(){return`${this.field}-${this.valueExpression}`}clone(){return new x({color:this.color&&this.color.clone(),field:this.field,label:this.label,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle})}};t([s({type:b,json:{type:[Number],write:!0}})],H.prototype,"color",void 0),t([s({type:String,json:{write:!0}})],H.prototype,"field",void 0),t([i("field")],H.prototype,"castField",null),t([s({type:String,json:{write:!0}})],H.prototype,"label",void 0),t([s({type:String,json:{write:!0}})],H.prototype,"valueExpression",void 0),t([s({type:String,json:{write:!0}})],H.prototype,"valueExpressionTitle",void 0),H=x=t([r("esri.renderers.support.AttributeColorInfo")],H);const R=H;var V;let q=V=class extends n{constructor(){super(...arguments),this.unit=null}clone(){return new V({unit:this.unit})}};t([s({type:String,json:{write:!0}})],q.prototype,"unit",void 0),q=V=t([r("esri.renderers.support.DotDensityLegendOptions")],q);const D=q;var O;let A=O=class extends(f(g)){constructor(e){super(e),this.attributes=null,this.backgroundColor=new b([0,0,0,0]),this.blendDots=!0,this.dotBlendingEnabled=!0,this.dotShape="square",this.dotSize=1,this.legendOptions=null,this.outline=new j,this.dotValue=null,this.referenceDotValue=null,this.referenceScale=null,this.seed=1,this.type="dot-density"}calculateDotValue(e){if(null==this.referenceScale)return this.dotValue;const t=e/this.referenceScale*this.dotValue;return t<1?1:t}getSymbol(){return new S({outline:this.outline})}async getSymbolAsync(){return this.getSymbol()}getSymbols(){return[this.getSymbol()]}getAttributeHash(){return this.attributes&&this.attributes.reduce(((e,t)=>e+t.getAttributeHash()),"")}getMeshHash(){return JSON.stringify(this.outline)}clone(){return new O({attributes:l(this.attributes),backgroundColor:l(this.backgroundColor),dotBlendingEnabled:l(this.dotBlendingEnabled),dotShape:l(this.dotShape),dotSize:l(this.dotSize),dotValue:l(this.dotValue),legendOptions:l(this.legendOptions),outline:l(this.outline),referenceScale:l(this.referenceScale),visualVariables:l(this.visualVariables),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}getControllerHash(){return`${this.attributes.map((e=>e.field||e.valueExpression||""))}-${this.outline&&JSON.stringify(this.outline.toJSON())||""}`}async collectRequiredFields(e,t){await this.collectVVRequiredFields(e,t);for(const s of this.attributes)s.valueExpression&&await v(e,t,s.valueExpression),s.field&&e.add(s.field)}};t([s({type:[R],json:{write:!0}})],A.prototype,"attributes",void 0),t([s({type:b,json:{write:!0}})],A.prototype,"backgroundColor",void 0),t([s({type:Boolean}),a("dotBlendingEnabled")],A.prototype,"blendDots",void 0),t([s({type:Boolean,json:{write:!0}})],A.prototype,"dotBlendingEnabled",void 0),t([s({type:String,json:{write:!1}})],A.prototype,"dotShape",void 0),t([s({type:Number,json:{write:!1}})],A.prototype,"dotSize",void 0),t([s({type:D,json:{write:!0}})],A.prototype,"legendOptions",void 0),t([s({type:j,json:{default:null,write:!0}})],A.prototype,"outline",void 0),t([s({type:Number,json:{write:!0}})],A.prototype,"dotValue",void 0),t([s({type:Number}),a("dotValue")],A.prototype,"referenceDotValue",void 0),t([s({type:Number,json:{write:!0}})],A.prototype,"referenceScale",void 0),t([s({type:Number,json:{write:!0}})],A.prototype,"seed",void 0),t([m({dotDensity:"dot-density"})],A.prototype,"type",void 0),A=O=t([r("esri.renderers.DotDensityRenderer")],A);const C=A;var I;let E=I=class extends n{constructor(e){super(e),this.color=null,this.ratio=null}clone(){return new I({color:this.color,ratio:this.ratio})}};t([s({type:b,json:{write:!0}})],E.prototype,"color",void 0),t([s({type:Number,json:{write:!0}})],E.prototype,"ratio",void 0),E=I=t([r("esri.renderers.support.HeatmapColorStop")],E);const P=E;var $;let k=$=class extends g{constructor(e){super(e),this.blurRadius=10,this.colorStops=[new P({ratio:0,color:new b("rgba(255, 140, 0, 0)")}),new P({ratio:.75,color:new b("rgba(255, 140, 0, 1)")}),new P({ratio:.9,color:new b("rgba(255, 0,   0, 1)")})],this.field=null,this.fieldOffset=0,this.maxPixelIntensity=100,this.minPixelIntensity=0,this.type="heatmap"}async collectRequiredFields(e,t){const s=this.field;s&&"string"==typeof s&&w(e,t,s)}getAttributeHash(){return null}getMeshHash(){return`${JSON.stringify(this.colorStops)}.${this.blurRadius}.${this.field}`}clone(){return new $({blurRadius:this.blurRadius,colorStops:l(this.colorStops),field:this.field,maxPixelIntensity:this.maxPixelIntensity,minPixelIntensity:this.minPixelIntensity})}};t([s({type:Number,json:{write:!0}})],k.prototype,"blurRadius",void 0),t([s({type:[P],json:{write:!0}})],k.prototype,"colorStops",void 0),t([s({type:String,json:{write:!0}})],k.prototype,"field",void 0),t([s({type:Number,json:{write:{overridePolicy:(e,t,s)=>({enabled:null==s})}}})],k.prototype,"fieldOffset",void 0),t([s({type:Number,json:{write:!0}})],k.prototype,"maxPixelIntensity",void 0),t([s({type:Number,json:{write:!0}})],k.prototype,"minPixelIntensity",void 0),t([m({heatmap:"heatmap"})],k.prototype,"type",void 0),k=$=t([r("esri.renderers.HeatmapRenderer")],k);const F=k;var B;let M=B=class extends(f(g)){constructor(e){super(e),this.description=null,this.label=null,this.symbol=null,this.type="simple"}async collectRequiredFields(e,t){await Promise.all([this.collectSymbolFields(e,t),this.collectVVRequiredFields(e,t)])}async collectSymbolFields(e,t){await Promise.all(this.getSymbols().map((s=>s.collectRequiredFields(e,t))))}getSymbol(e,t){return this.symbol}async getSymbolAsync(e,t){return this.symbol}getSymbols(){return this.symbol?[this.symbol]:[]}getAttributeHash(){return this.visualVariables&&this.visualVariables.reduce(((e,t)=>e+t.getAttributeHash()),"")}getMeshHash(){return this.getSymbols().reduce(((e,t)=>e+JSON.stringify(t)),"")}get arcadeRequired(){return this.arcadeRequiredForVisualVariables}clone(){return new B({description:this.description,label:this.label,symbol:this.symbol&&this.symbol.clone(),visualVariables:l(this.visualVariables),authoringInfo:this.authoringInfo&&this.authoringInfo.clone()})}};t([s({type:String,json:{write:!0}})],M.prototype,"description",void 0),t([s({type:String,json:{write:!0}})],M.prototype,"label",void 0),t([s(h)],M.prototype,"symbol",void 0),t([m({simple:"simple"})],M.prototype,"type",void 0),M=B=t([r("esri.renderers.SimpleRenderer")],M);const J=M,z={key:"type",base:g,typeMap:{heatmap:F,simple:J,"unique-value":p,"class-breaks":c,"dot-density":C,dictionary:y},errorContext:"renderer"},T={key:"type",base:g,typeMap:{simple:J,"unique-value":p,"class-breaks":c},errorContext:"renderer"};function L(e,t){return G(e,null,t)}const U=u({types:z});function G(e,t,s){return e?e&&(e.styleName||e.styleUrl)&&"uniqueValue"!==e.type?(s&&s.messages&&s.messages.push(new d("renderer:unsupported","Only UniqueValueRenderer can be referenced from a web style, but found '"+e.type+"'",{definition:e,context:s})),null):U(e,t,s):null}export{P as i,z as m,T as n,G as o,J as p,L as t}