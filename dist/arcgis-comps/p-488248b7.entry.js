import{r as t,c as i,g as e}from"./p-53bb6ab4.js";import{e as s,d as n,i as o,p as r,aE as a,s as l,a0 as c,ar as d,A as h,br as u,ay as p,c as v,u as m,S as g,m as w,G as b,F as f,a as _,I as y,r as P,T as C,o as $,j as x,f as S,z as k,l as R,bO as j,aB as E,y as M,M as L}from"./p-e58503d5.js";import{h as X}from"./p-54330161.js";import{f as Y,g as D,T as O,a as B,i as F,E as N,H as T,O as I,J as A}from"./p-c93d2280.js";import{getGeometryServiceURL as W}from"./p-42bb6c1e.js";import{n as z}from"./p-8bc9b36a.js";import"./p-b79fcce3.js";import{t as V,a as U}from"./p-d663a3ad.js";import{n as q,a as Z}from"./p-2e37d910.js";import{r as J,p as G,o as H}from"./p-5a4bf917.js";import{e as K}from"./p-b312c1fd.js";import{s as Q}from"./p-da9e7ba9.js";import{t as tt}from"./p-b8beb0d3.js";import"./p-93765525.js";import"./p-765e6c28.js";import"./p-a9a30646.js";import"./p-8747982c.js";import"./p-c048b814.js";import"./p-2f398ed1.js";import"./p-d3105731.js";import"./p-01e5a461.js";import"./p-ccdb8e80.js";import"./p-ea916a39.js";import"./p-fea9512d.js";import"./p-efbca0ca.js";import"./p-7a658388.js";import"./p-e273719b.js";import"./p-74de0937.js";import"./p-fb38a9d0.js";import"./p-f94762ac.js";import"./p-8a919d07.js";import"./p-7ca40eac.js";import"./p-181bf7a5.js";let it=class extends r{constructor(t){super(t),this.format=null,this.position={coordinate:null,location:null}}get displayCoordinate(){const t=this.get("format");return t&&t.getDisplayCoordinate(this.get("position.coordinate"))}};s([n({readOnly:!0})],it.prototype,"displayCoordinate",null),s([n()],it.prototype,"format",void 0),s([n()],it.prototype,"position",void 0),it=s([o("esri.widgets.CoordinateConversion.support.Conversion")],it);const et=it,st={utm:{conversionMode:"utmDefault",addSpaces:!0},usng:{numOfDigits:5,rounding:!1,addSpaces:!1},mgrs:{rounding:!1}},nt=new Array(3);function ot(t){return t>=500?6:t<500&&t>=50?7:t<50&&t>=5?8:9}function rt(t){const{geometryServiceURLPromise:i,coordinate:e,spatialReference:s,formatName:n}=t;return i.then((t=>V(t,{strings:[e],sr:s,conversionType:n}).then((t=>{const i=new a({x:t[0][0],y:t[0][1],spatialReference:s});if(!lt(i))throw t;return i})).catch((t=>{throw new l("coordinate-conversion:from-geo-coordinate-string-failed","Failed to convert coordinate notation",{notationResult:t})}))))}function at(t){return"number"==typeof t&&isFinite(t)}function lt(t){return t&&at(t.x)&&at(t.y)}function ct(t,i){if(t.spatialReference.isGeographic&&i){const[e,s]=function(t,i){const e=ot(i);return[t[0].toFixed(e),t[1].toFixed(e)]}([t.x,t.y],i);return`${e}, ${s}`}return`${t.x.toFixed(3)}, ${t.y.toFixed(3)}`}async function dt(t,i){const{spatialReference:e,geometryServiceURLPromise:s,location:n,scale:o}=t;if(!e||n.spatialReference.wkid===e.wkid)return{location:n,coordinate:ct(n,o)};const r=d(n,e);if(h(r))return{location:r,coordinate:ct(r,o)};if(nt[0]===n&&nt[1]===e.wkid)return nt[2];nt[0]=n,nt[1]=e.wkid;const a=s.then((t=>q(t,new Z({geometries:[n],outSpatialReference:e}),{signal:i}))).then((t=>{if(!lt(t[0]))throw t[0];return{location:t[0],coordinate:ct(t[0],o)}})).catch((t=>{throw new l("coordinate-conversion:projection-failed","Failed to project point",{projectionResult:t})}));return nt[2]=a,a}function ht(t){return"dd"===t||"dms"===t||"ddm"===t||"mgrs"===t||"usng"===t||"utm"===t}function ut(t){let i=null;if(t||(t=c.WGS84),t.wkid){if(i=F.geogcs(t.wkid),!i)throw new l("coordinate-formatter:invalid-spatial-reference","wkid is not valid")}else{if(!t.wkt)throw new l("coordinate-formatter:invalid-spatial-reference","wkid and wkt are missing");if(i=F.fromString(N.PE_TYPE_GEOGCS,t.wkt),!i)throw new l("coordinate-formatter:invalid-spatial-reference","wkt is not valid")}return i}function pt(t){let i=-1;switch(t){case"automatic":i=O.PE_MGRS_STYLE_AUTO;break;case"new-180-in-zone-01":i=O.PE_MGRS_STYLE_NEW|O.PE_MGRS_180_ZONE_1_PLUS;break;case"new-180-in-zone-60":i=O.PE_MGRS_STYLE_NEW;break;case"old-180-in-zone-01":i=O.PE_MGRS_STYLE_OLD|O.PE_MGRS_180_ZONE_1_PLUS;break;case"old-180-in-zone-60":i=O.PE_MGRS_STYLE_OLD}return i}function vt(t){let i=-1;switch(t){case"latitude-band-indicators":i=B.PE_UTM_OPTS_NONE;break;case"north-south-indicators":i=B.PE_UTM_OPTS_NS}return i}let mt=class extends r{constructor(t){super(t),this.conversionInfo=null,this.coordinateSegments=null,this.defaultPattern=null,this.name=null,this.viewModel=null}get currentPattern(){return this._get("currentPattern")||this._get("defaultPattern")}set currentPattern(t){this._set("currentPattern",t)}get hasDisplayProperties(){return!(!this.defaultPattern||!this.coordinateSegments)}get spatialReference(){const t=this.get("conversionInfo.spatialReference")||c.WGS84;return"basemap"===this.name?this._viewSpatialReference:t}set spatialReference(t){void 0===t&&this._clearOverride("spatialReference"),this._override("spatialReference",t)}get _viewSpatialReference(){return this.get("viewModel.view.spatialReference")||c.WGS84}get _additionalCharactersPattern(){const t=this.get("coordinateSegments");if(!t)return null;const i=t.map((t=>t.alias)),e=this.currentPattern.replace(new RegExp(`["nsew${i.join()}]`,"gi"),"").replace(/\ /g,"");return new RegExp(`[${e}]`,"g")}convert(t,i){if(!lt(t))return Promise.reject(new l("format:invalid-point","Could not convert invalid point.",{point:t}));const e=this.get("conversionInfo.convert");return e?Promise.resolve().then((()=>e(t))):this._project(t,this.spatialReference,i).then((t=>this._getCoordinate(t).then((i=>({location:t,coordinate:i})))))}getConversionStrategy(){const t=this._viewSpatialReference;return this.get("conversionInfo.convert")||this.get("viewModel.formatterAvailable")||"xy"===this.name&&(t.isWebMercator||t.isWGS84)||"basemap"===this.name?"client":"server"}getDisplayCoordinate(t){if(!t)return null;if(!this.coordinateSegments||!this.currentPattern)return t;let i=this.currentPattern;const e=this._getSegmentMatches(t,!1);for(let t=this.coordinateSegments.length-1;t>=0;t--)i=i.replace(this.coordinateSegments[t].alias,e[t]);return i}parseUserInput(t){let i=this.defaultPattern.replace(this._additionalCharactersPattern,"");t=t.replace(this._additionalCharactersPattern,"");const e=this._getSegmentMatches(t,!0);for(let t=this.coordinateSegments.length-1;t>=0;t--)i=i.replace(this.coordinateSegments[t].alias,e[t]);return i}_getSegmentMatches(t,i){const e=[];for(let s=0;s<this.coordinateSegments.length;s++){const n=this.coordinateSegments[s],o=t.match(n.searchPattern);if(!o){e.push("");continue}let r=o[0];if(t=t.replace(r,"").trim(),n.substitution){const t=i?n.substitution.input(r):n.substitution.output(r);t&&(r=t)}e.push(r)}return e}reverseConvert(t){const i=this.parseUserInput(t),e=this.get("conversionInfo.reverseConvert"),s=ht(this.name);let n;if(e)n=e(i);else if("xy"===this.name||"basemap"===this.name)n=function(t,i){const e=t.indexOf(",")>=0?",":" ",[s,n,o]=t.split(e).map((t=>{const i=t.trim();return i?Number(i):null}));if(!at(s)||!at(n))return null;const r=new a({x:s,y:n,spatialReference:i||c.WGS84});return o&&(r.z=o,r.hasZ=!0),r}(i,this.spatialReference);else if(this.viewModel.formatterAvailable)switch(this.name){case"dd":case"ddm":case"dms":n=function(t,i){const e=[];t=(t=(t=t.replace(/[\u00B0\u00BA]/g,"^")).replace(/\u2032/g,"'")).replace(/\u2033/g,'"');const s=ut(i);return D.dms_to_geog(s,1,[t],e)?new a(e[0][0],e[0][1],i||c.WGS84):null}(i,this.spatialReference);break;case"mgrs":n=function(t,i,e){const s=[],n=pt(e);if(-1===n)return console.warn(`invalid conversionMode: ${e}`),null;const o=ut(i);return O.mgrs_to_geog_extended(o,1,[t],n,s)?new a(s[0][0],s[0][1],i||c.WGS84):null}(i,this.spatialReference,"automatic");break;case"utm":n=function(t,i,e){const s=[],n=vt(e);if(-1===n)return console.warn(`invalid conversionMode: ${e}`),null;const o=ut(i);return B.utm_to_geog(o,1,[t],n,s)?new a(s[0][0],s[0][1],i||c.WGS84):null}(i,this.spatialReference,"latitude-band-indicators");break;case"usng":n=function(t,i){const e=[];!i&&/\(.+27/.test(t)&&(i=c.GCS_NAD_1927);const s=ut(i);return Y.usng_to_geog(s,1,[t],e)?new a(e[0][0],e[0][1],i||c.WGS84):null}(i,this.spatialReference);break;default:n=null}else if(s){var o;return rt({coordinate:i,spatialReference:this.spatialReference,formatName:this.name,geometryServiceURLPromise:null==(o=this.viewModel)?void 0:o.geometryServiceURLPromise})}return n?this._project(n,this._viewSpatialReference):Promise.reject(new l("format:invalid-input","Could not parse input into point.",{userInput:t}))}_getCoordinate(t){const i=this.get("viewModel.view.scale");if(!lt(t))return Promise.reject(new l("format:invalid-point","Could not transform invalid point into coordinate.",{point:t}));if(this.get("viewModel.formatterAvailable")||"basemap"===this.name||"xy"===this.name)switch(this.name){case"dd":case"ddm":case"dms":{const e=ot(i);return Promise.resolve(function(t,i,e=0){const s=[[t.x,t.y]],n=[],o=ut(t.spatialReference);let r=0;switch(i){case"dd":r=D.geog_to_dd(o,1,s,e,n);break;case"ddm":r=D.geog_to_ddm(o,1,s,e,n);break;case"dms":r=D.geog_to_dms(o,1,s,e,n);break;default:return console.warn(`invalid format: ${i}`),null}return r?n[0]:null}(t,this.name,e))}case"mgrs":return Promise.resolve(function(t,i,e=0,s=!1){const n=[[t.x,t.y]],o=[],r=ut(t.spatialReference);let a=pt(i);return-1===a?(console.warn(`invalid conversionMode: ${i}`),null):(s&&(a|=O.PE_MGRS_ADD_SPACES),O.geog_to_mgrs_extended(r,1,n,e,!1,a,o)?o[0]:null)}(t,"automatic",5,!1));case"usng":return Promise.resolve(function(t,i=0,e=!1){const s=[[t.x,t.y]],n=[],o=ut(t.spatialReference);return Y.geog_to_usng(o,1,s,i,!1,e,n)?n[0]:null}(t,5,!1));case"utm":return Promise.resolve(function(t,i,e=!1){const s=[[t.x,t.y]],n=[],o=ut(t.spatialReference);let r=vt(i);return-1===r?(console.warn(`invalid conversionMode: ${i}`),null):(e&&(r|=B.PE_UTM_OPTS_ADD_SPACES),B.geog_to_utm(o,1,s,r,n)?n[0]:null)}(t,"latitude-band-indicators",!0));default:return Promise.resolve(ct(t,i))}var e;return ht(this.name)?async function(t){const{formatName:i,location:e,geometryServiceURLPromise:s}=t,n={coordinates:[[e.x,e.y]],sr:e.spatialReference,conversionType:i,...st[i]||{}},o=await s;try{const t=await U(o,n),i=t[0];if(!i)throw t;return i}catch(t){throw new l("coordinate-conversion:to-geo-coordinate-string-failed","Failed to convert coordinate notation",{notationResult:t})}}({formatName:this.name,location:t,geometryServiceURLPromise:null==(e=this.viewModel)?void 0:e.geometryServiceURLPromise}):Promise.resolve(ct(t,i))}_project(t,i,e){var s,n;if(u(t.spatialReference,i)||!i)return Promise.resolve(t);if(null!=(s=this.viewModel)&&s.formatterAvailable&&T())return Promise.resolve(I(t,i));if(null==(n=this.viewModel)||!n.formatterAvailable){var o,r,a;const s=d(t,i);return h(s)?Promise.resolve(s):dt({location:t,spatialReference:i,geometryServiceURLPromise:null==(o=this.viewModel)?void 0:o.geometryServiceURLPromise,scale:null==(r=this.viewModel)||null==(a=r.view)?void 0:a.scale},e).then((t=>t.location))}return null}};s([n()],mt.prototype,"conversionInfo",void 0),s([n()],mt.prototype,"coordinateSegments",void 0),s([n()],mt.prototype,"currentPattern",null),s([n()],mt.prototype,"defaultPattern",void 0),s([n({readOnly:!0})],mt.prototype,"hasDisplayProperties",null),s([n()],mt.prototype,"name",void 0),s([n({type:c})],mt.prototype,"spatialReference",null),s([n()],mt.prototype,"viewModel",void 0),s([n({readOnly:!0})],mt.prototype,"_viewSpatialReference",null),s([n({readOnly:!0})],mt.prototype,"_additionalCharactersPattern",null),mt=s([o("esri.widgets.CoordinateConversion.support.Format")],mt);const gt=mt,wt=J().decimal,bt={N:"north",S:"south",E:"east",W:"west"},ft=new RegExp(`-?\\d+[\\.|\\${wt}]?\\d*`),_t=/^[\\0]+(?=\d)/;function yt(t,i){const e="ar"===p(),s={ddm:`Y°‎ A'${t.abbreviatedDirections.north}, X°‎ B'${t.abbreviatedDirections.east}`,dms:`Y°‎ A' B"${t.abbreviatedDirections.north}, X°‎ C' D"${t.abbreviatedDirections.east}`,dd:`Y°‎${t.abbreviatedDirections.north}, X°‎${t.abbreviatedDirections.east}`},n={ddm:`${t.abbreviatedDirections.north}°‎Y 'A, ${t.abbreviatedDirections.east}°‎X 'B`,dms:`${t.abbreviatedDirections.north}°‎Y 'A "B, ${t.abbreviatedDirections.east}°‎X 'C "D`,dd:`${t.abbreviatedDirections.north}°‎Y, ${t.abbreviatedDirections.east}°‎X`};i.forEach((t=>{const{name:i}=t;if("dms"===i||"dd"===i||"ddm"===i){const o=t.defaultPattern===t.currentPattern,r=e?n[i]:s[i];t.defaultPattern=r,o&&(t.currentPattern=r)}}))}function Pt(t){const i=t.match(_t),e=i?i[0]:"",s=t.indexOf(".")>=0?t.split(".")[1].length:0;return e+H(Number(t),{pattern:"###0.###",places:s,round:-1})}function Ct(t){return G(t)}const $t=new a([0,0,500]),xt="esri__coordinateConversionWidgetState",St=v.getLogger("esri.widgets.CoordinateConversion.CoordinateConversionViewModel");let kt=class extends(K(P.EventedAccessor)){constructor(t){super(t),this._conversionPromise=null,this._handles=new m,this._locationGraphic=null,this._pointerCount=0,this.conversions=new g,this.formats=new g,this.formatterAvailable=!1,this.geometryServiceURLPromise=null,this.messages=null,this.requestDelay=300,this.locationSymbol=new z({url:w("esri/images/search/search-symbol-32.png"),width:24,height:24}),this.storageEnabled=!0,this.view=null,this._saveWidgetState=this._saveWidgetState.bind(this),this._handleFormatChange=this._handleFormatChange.bind(this),this._handleConversionChange=this._handleConversionChange.bind(this),this._handleViewChange=this._handleViewChange.bind(this),this._onClick=this._onClick.bind(this),this._onPointerMove=this._onPointerMove.bind(this),this._onPointerDown=this._onPointerDown.bind(this),this._onPointerUp=this._onPointerUp.bind(this)}initialize(){const t=async()=>this.messages=await b("esri/widgets/CoordinateConversion/t9n/CoordinateConversion");t().then((()=>{if(!this.destroyed&&(this.formats.addMany(function(t){const i=t.abbreviatedDirections.north,e=t.abbreviatedDirections.south,s=t.abbreviatedDirections.east,n=t.abbreviatedDirections.west,o={};o[i]="N",o[e]="S",o[s]="E",o[n]="W";const r=new RegExp(`N|S|${i}|${e}`,"i"),a=new RegExp(`E|W|${s}|${n}`,"i"),l=[new gt({name:"basemap",coordinateSegments:[{alias:"X",description:"easting",searchPattern:ft,substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:"Y",description:"northing",searchPattern:ft,substitution:{input:t=>Ct(t),output:t=>Pt(t)}}],defaultPattern:"X, Y",viewModel:null}),new gt({name:"dd",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${wt}]?\\d*(?=\\D*?[N|S|${i}|${e}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:r,substitution:{input:t=>o[t],output:i=>t.abbreviatedDirections[bt[i]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}[\\.|\\${wt}]?\\d*(?=\\D*?[E|W|${s}|${n}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:a,substitution:{input:t=>o[t],output:i=>t.abbreviatedDirections[bt[i]]}}],defaultPattern:`Y°‎${t.abbreviatedDirections.north}, X°‎${t.abbreviatedDirections.east}`,viewModel:null}),new gt({name:"ddm",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?\\s+.*?[N|S|${i}|${e}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp(`\\d{1,2}[\\.\\${wt}]?\\d*(?=.*?[N|S|${i}||${e}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:r,substitution:{input:t=>o[t],output:i=>t.abbreviatedDirections[bt[i]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}(?=\\D*?\\s+.*?[E|W|${s}|${n}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:"B",description:"minutes longitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\|${wt}]?\\d*(?=.*?[E|W|${s}|${n}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:a,substitution:{input:t=>o[t],output:i=>t.abbreviatedDirections[bt[i]]}}],defaultPattern:`Y°‎ A'${t.abbreviatedDirections.north}, X°‎ B'${t.abbreviatedDirections.east}`,viewModel:null}),new gt({name:"dms",coordinateSegments:[{alias:"Y",description:"degrees latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?\\s+.*?[N|S|${i}|${e}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:"A",description:"minutes latitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?[N|S|${i}|${e}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:"B",description:"seconds latitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${wt}]?\\d*(?=.*?[N|S|${i}|${e}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:t.abbreviatedDirections.north,description:"north/south indicator",searchPattern:r,substitution:{input:t=>o[t],output:i=>t.abbreviatedDirections[bt[i]]}},{alias:"X",description:"degrees longitude",searchPattern:new RegExp(`\\d{1,3}(?=.*?\\s+.*?[E|W|${s}|${n}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:"C",description:"minutes longitude",searchPattern:new RegExp(`\\d{1,2}(?=.*?[E|W|${s}|${n}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:"D",description:"seconds longitude",searchPattern:new RegExp(`\\d{1,2}[\\.|\\${wt}]?\\d*(?=.*?[E|W|${s}|${n}])`,"i"),substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:t.abbreviatedDirections.east,description:"east/west indicator",searchPattern:a,substitution:{input:t=>o[t],output:i=>t.abbreviatedDirections[bt[i]]}}],defaultPattern:`Y°‎ A' B"${t.abbreviatedDirections.north}, X°‎ C' D"${t.abbreviatedDirections.east}`,viewModel:null}),new gt({name:"xy",coordinateSegments:[{alias:"X",description:"longitude",searchPattern:ft,substitution:{input:t=>Ct(t),output:t=>Pt(t)}},{alias:"Y",description:"latitude",searchPattern:ft,substitution:{input:t=>Ct(t),output:t=>Pt(t)}}],defaultPattern:"X°‎, Y°‎",viewModel:null}),new gt({name:"mgrs",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new gt({name:"usng",coordinateSegments:[{alias:"Z",description:"grid zone",searchPattern:/\d{1,2}\w|[abyz]/i},{alias:"S",description:"grid square",searchPattern:/\w{2}/},{alias:"X",description:"easting",searchPattern:/^\d{5}(?=.?\d{5}$)|^\d{4}(?=.?\d{4}$)|^\d{3}(?=.?\d{3}$)|^\d{2}(?=.?\d{2}$)|^\d(?=.?\d$)/},{alias:"Y",description:"northing",searchPattern:/^\d{1,5}/}],defaultPattern:"Z S X Y",viewModel:null}),new gt({name:"utm",coordinateSegments:[{alias:"Z",description:"zone number",searchPattern:/\d{1,2}|[abyz]/i},{alias:"B",description:"latitude band",searchPattern:/^\D/},{alias:"X",description:"easting",searchPattern:/\d{1,7}(?=\s*\d{7}$)/},{alias:"Y",description:"northing",searchPattern:/\d{1,7}/}],defaultPattern:"ZB X Y",viewModel:null})];return yt(t,l),l}(this.messages)),this.storageEnabled&&this._loadWidgetState(),this.formats.forEach((t=>{t.viewModel=this,this._handles.add(t.watch("currentPattern",this._saveWidgetState),t.name)})),this._handles.add(this.conversions.on("change",this._handleConversionChange),"conversions"),this._handles.add(this.formats.on("change",this._handleFormatChange),"formats"),this._handles.add(f((()=>{t().then((()=>{yt(this.messages,this.formats)}))}))),this._handles.add(_(this,"view.map",(()=>{var t,i;this.geometryServiceURLPromise=W(null==(t=this.view)||null==(i=t.map)?void 0:i.portalItem)})),"view-change"),A().then((()=>{this.formatterAvailable=!0})).catch((t=>{St.error(new l("coordinate-conversion:projection-load-failed","Failed to load the projection module.",{error:t})),this.formatterAvailable=!1})).then((()=>this._handles.add(_(this,"view",this._handleViewChange),"view-change"))),0===this.conversions.length)){const t=this.formats.find((t=>"xy"===t.name))||this.formats.getItemAt(0);this.conversions.add(new et({format:t}))}}))}destroy(){this._handles.removeAll(),this._cleanUpView(this.view),this.view=null}set currentLocation(t){this._set("currentLocation",t),this._updateConversions()}get currentLocation(){return this._get("currentLocation")||null}set mode(t){switch(t){case"capture":this.currentLocation=null,this._startCaptureMode(),this._set("mode",t);break;case"live":this._startLiveMode(),this._set("mode",t)}}get mode(){return this._get("mode")||"live"}get state(){const{messages:t,view:i}=this;return t?(null==i?void 0:i.ready)?"ready":i?"loading":"disabled":"disabled"}get waitingForConversions(){return null!=this._conversionPromise}get _debouncedConvert(){return y(((t,i,e)=>C(t.map((t=>t.convert(i,e))))),this.requestDelay)}setLocation(t){if(this.view.graphics.remove(this._locationGraphic),t){const i=t.clone();i.hasZ&&(i.z=void 0),this._locationGraphic=new X({geometry:i,symbol:this.get("locationSymbol")}),this.view.graphics.add(this._locationGraphic)}}convert(t,i){return lt(i)?Promise.resolve().then((()=>t.convert(i))):Promise.reject(new l("coordinate-conversion:invalid-point","Invalid point cannot be converted.",{point:i}))}goToLocation(t){if(this.get("view.clippingArea")||this.get("view.map.basemap.baseLayers.length")>0){const i=this.get("view.clippingArea")||this.view.map.basemap.baseLayers.getItemAt(0).fullExtent;return i?i.contains(t)?this.callGoTo({target:t}):Promise.reject(new l("coordinate-conversion:go-to-failed","Point outside basemap extent.",{point:t})):this.callGoTo({target:t})}return this.callGoTo({target:t})}pause(){this.currentLocation=null,this._handles.remove("view"),this.view&&(this.view.cursor="default",this.view.graphics.remove(this._locationGraphic))}previewConversion(t,i=this.currentLocation||$t){return this._convertMany([t],i).then((()=>t.displayCoordinate))}resume(){"capture"===this.mode?this._startCaptureMode():this._startLiveMode()}reverseConvert(t,i){return i.reverseConvert(t)}async updateConversions(t,i){return i&&i.type&&"point"===i.type?this._convertMany(t,i).then((t=>t.client.concat(t.server))):(this._clearConversions(this.conversions),Promise.reject(new l("coordinate-conversion:invalid-input-point","Point is invalid, conversions cannot be updated.",{point:i})))}_cleanUpView(t){t&&(t.graphics.remove(this._locationGraphic),this._handles.remove("view"),t.cursor="default")}_clearConversions(t){t.forEach((t=>{t.position={location:null,coordinate:null}}))}_convertMany(t,i){const{client:e,server:s}=t.reduce(((t,i)=>(t[i.format.getConversionStrategy()].push(i),t)),{client:[],server:[]}),n=Promise.all(e.map((t=>t.format.convert(i).then((i=>(t.position=i,t))).catch((()=>{t.position=null}))))),o=t=>t?(this._conversionPromise=null,this.notifyChange("waitingForConversions"),t.map(((t,i)=>{const e=s[i];return t.error?(e.position=null,e):(e.position=t.value,e)}))):[];return this._conversionPromise=s.length>0?this._debouncedConvert(s.map((t=>t.format)),i).then(o,o):Promise.resolve([]),this.notifyChange("waitingForConversions"),Promise.all([n,this._conversionPromise]).then((t=>({client:t[0],server:t[1]})))}_handleConversionChange(t){t.added.forEach((t=>{const i=t.format;i.viewModel=this,this.currentLocation&&(this._set("waitingForConversions",!0),this.convert(i,this.currentLocation).then((i=>{t.position=i,this._set("waitingForConversions",!1)})))})),this._saveWidgetState()}_handleFormatChange(t){t.added.forEach((t=>{this._handles.add(t.watch("currentPattern",this._saveWidgetState),t.name),t.viewModel=this})),t.removed.forEach((t=>{t.viewModel=null,this._handles.remove(t.name)}))}_loadWidgetState(){try{const t=JSON.parse(sessionStorage.getItem(xt));t&&this._setWidgetState(t)}catch(t){St.error(new l("coordinate-conversion:invalid-session-storage-json","Could not read from sessionStorge.",{error:t}))}}_startCaptureMode(){this._handles.remove("view"),this.view&&(this.view.cursor="crosshair",this.currentLocation&&this.setLocation(this.currentLocation),this._handles.add(this.view.on("click",this._onClick),"view"))}_startLiveMode(){this._pointerCount=0,this._handles.remove("view"),this.view&&(this.view.cursor="default",this.view.graphics.remove(this._locationGraphic),this._handles.add([this.view.on("pointer-down",this._onPointerDown),this.view.on("pointer-up",this._onPointerUp),this.view.on("pointer-move",this._onPointerMove)],"view"))}_handleViewChange(t,i){i&&i!==t&&this._cleanUpView(i),t&&("capture"===this.mode&&this._startCaptureMode(),this._startLiveMode())}_onClick(t){if(0===t.button){const i=this.view.toMap(t),e=i&&i.normalize();this.setLocation(e),this.currentLocation=e}}_onPointerDown(t){const{pointerType:i}=t;if(this._pointerCount++,("touch"===i||"pen"===i)&&1===this._pointerCount){const i=this.view.toMap(t);this.currentLocation=i&&i.normalize()}}_onPointerMove(t){const{pointerType:i}=t;if("mouse"===i||1===this._pointerCount){const i=this.view.toMap(t);this.currentLocation=i&&i.normalize()}}_onPointerUp(){this._pointerCount--}_setWidgetState(t){try{t.formats.forEach((i=>{const e=this.formats.find((t=>t.name===i.name));e&&t.locale===p()&&i.currentPattern&&(e.currentPattern=i.currentPattern),e&&i.index>=0&&this.conversions.add(new et({format:e}))}))}catch(t){St.warn(new l("coordinate-conversion:session-storage-read-error","Could not get widget state from stored JSON.",{error:t}))}}_saveWidgetState(){if(!this.storageEnabled)return;const t=this._toJSON();try{sessionStorage.setItem(xt,JSON.stringify({formats:t,locale:p()}))}catch(t){St.error(new l("coordinate-conversion:local-storage-write-error","Could not write to localStorage.",{error:t}))}}async _updateConversions(){try{await this.updateConversions(this.conversions.toArray(),this.currentLocation)}catch{}}_toJSON(){return this.formats.filter((t=>{const i=t.name;return"xy"===i||"basemap"===i||ht(i)})).map((t=>({name:t.name,currentPattern:t.currentPattern,defaultPattern:t.defaultPattern,index:this.conversions.findIndex((i=>i.format===t))}))).sort(((t,i)=>t.index-i.index)).toArray()}};s([n()],kt.prototype,"conversions",void 0),s([n({type:a})],kt.prototype,"currentLocation",null),s([n()],kt.prototype,"formats",void 0),s([n()],kt.prototype,"messages",void 0),s([n()],kt.prototype,"mode",null),s([n()],kt.prototype,"requestDelay",void 0),s([n({readOnly:!0})],kt.prototype,"state",null),s([n()],kt.prototype,"locationSymbol",void 0),s([n()],kt.prototype,"storageEnabled",void 0),s([n({readOnly:!0})],kt.prototype,"waitingForConversions",null),s([n()],kt.prototype,"view",void 0),s([n({readOnly:!0})],kt.prototype,"_debouncedConvert",null),kt=s([o("esri.widgets.CoordinateConversion.CoordinateConversionViewModel")],kt);const Rt=kt,jt="esri-coordinate-conversion__popup",Et="esri-coordinate-conversion__conversion-list",Mt="esri-coordinate-conversion__select-row",Lt="esri-coordinate-conversion__tools",Xt="esri-coordinate-conversion__mode-toggle",Yt="esri-coordinate-conversion__row-button",Dt="esri-coordinate-conversion__back-button",Ot="esri-coordinate-conversion__input-coordinate",Bt="esri-coordinate-conversion__pattern-input",Ft="esri-widget--button",Nt={settingsButton:!0,inputButton:!0,captureButton:!0,expandButton:!0},Tt=v.getLogger("esri.widgets.CoordinateConversion");let It=class extends k{constructor(t,i){super(t,i),this._popupMessage=null,this._popupTimeoutId=null,this._clipboardPopupTimeoutId=null,this._coordinateInput=null,this._badInput=!1,this._goToEnabled=!1,this._conversionFormat=null,this._settingsFormat=null,this._previewConversion=null,this._expanded=!1,this._clipboardPopupVisible=!1,this._popupVisible=!1,this._settingsVisible=!1,this._inputVisible=!1,this.conversions=null,this.currentLocation=null,this.formats=null,this.goToOverride=null,this.headingLevel=4,this.label=void 0,this.messages=null,this.messagesCommon=null,this.mode=null,this.orientation="auto",this.requestDelay=null,this.locationSymbol=null,this.storageEnabled=null,this.view=null,this.viewModel=new Rt,this.visibleElements={...Nt}}set multipleConversions(t){!1===t&&(this._expanded=!1,this.conversions.splice(1,this.conversions.length-1)),this._set("multipleConversions",t)}get multipleConversions(){const t=this._get("multipleConversions");return"boolean"!=typeof t||t}castVisibleElements(t){return{...Nt,...t}}reverseConvert(t,i){return this.viewModel.reverseConvert(t,i)}render(){const t=this.get("viewModel.state"),i="disabled"===t?R("div",{key:"esri-coordinate__no-basemap"},this.messages.noBasemap):null,e=!i&&this._inputVisible?this._renderInputForm():null,s=!i&&this._settingsVisible?this._renderSettings():null,n=i||e||s?null:this._renderConversionsView(),o=this._popupVisible?this._renderPopup():null;return R("div",{class:this.classes("esri-coordinate-conversion esri-widget",{"esri-coordinate-conversion--capture-mode":"capture"===this.mode,"esri-disabled":"loading"===t,"esri-coordinate-conversion--no-basemap":"disabled"===t})},o,i,n,s,e)}_addConversion(t){const i=t.target,e=i["data-index"],s=new et({format:i.options[i.options.selectedIndex]["data-format"]});i.options.selectedIndex=0,e>=0&&this.conversions.removeAt(e),this.conversions.add(s,e)}_findSettingsFormat(){return this._settingsFormat||this.conversions.reduceRight(((t,i)=>{const e=i.format;return e.get("hasDisplayProperties")?e:t}),null)||this.formats.find((t=>t.hasDisplayProperties))}_hidePopup(){this._popupTimeoutId&&(clearTimeout(this._popupTimeoutId),this._popupTimeoutId=null),this._popupVisible=!1,this._popupMessage=null,this.scheduleRender()}_hideClipboardPopup(){this._clipboardPopupTimeoutId&&(clearTimeout(this._clipboardPopupTimeoutId),this._clipboardPopupTimeoutId=null),this._clipboardPopupVisible=!1,this.scheduleRender()}_onConvertComplete(){this._inputVisible=!1,this._coordinateInput.value=""}_onCopy(t){const i=t.currentTarget["data-conversion"].displayCoordinate;"clipboardData"in j?j.clipboardData.setData("text",i):t.clipboardData.setData("text/plain",i),this._showClipboardPopup(),t.preventDefault()}_processUserInput(t){const i=L(t),e=this.viewModel;"Enter"!==i&&i?this._badInput&&(this._badInput=!1):this._reverseConvert(this._coordinateInput.value,this._coordinateInput["data-format"]).then((t=>{"capture"===this.mode?e.resume():this.mode="capture",this.currentLocation=t,e.setLocation(t),this._onConvertComplete()})).catch((t=>{Tt.error(t),this._showPopup(this.messages.invalidCoordinate),this._badInput=!0}))}_reverseConvert(t,i){const e=this.viewModel;return i.reverseConvert(t).then((t=>(this._goToEnabled&&e.goToLocation(t).catch((t=>{Tt.warn(t),this._showPopup(this.messages.locationOffBasemap)})),t)))}_setInputFormat(t){const i=t.target;this._conversionFormat=i[i.options.selectedIndex]["data-format"]}_setPreviewConversion(){const t=this._findSettingsFormat(),i=this.viewModel;if(t){const e=this.conversions.find((i=>i.format===t));this._previewConversion=new et({format:t,position:{location:this.currentLocation,coordinate:e&&e.position.coordinate}}),this._previewConversion.position.coordinate||i.previewConversion(this._previewConversion)}}_setSettingsFormat(t){const i=t.target;this._settingsFormat=i[i.options.selectedIndex]["data-format"],this._setPreviewConversion()}_showClipboardPopup(){this._clipboardPopupVisible?clearTimeout(this._clipboardPopupTimeoutId):this._clipboardPopupVisible=!0,this.scheduleRender(),this._popupTimeoutId=setTimeout((()=>{this._popupTimeoutId=null,this._hideClipboardPopup()}),750)}_showPopup(t,i=2500){this._popupMessage=t,this._popupVisible?clearTimeout(this._popupTimeoutId):this._popupVisible=!0,this.scheduleRender(),this._popupTimeoutId=setTimeout((()=>{this._popupTimeoutId=null,this._hidePopup()}),i)}_toggleGoTo(){this._goToEnabled=!this._goToEnabled}_updateCurrentPattern(t){t.stopPropagation();const i=t.target,e=this._findSettingsFormat();e&&(e.currentPattern=i.value)}_renderConversion(t,i){const{messages:e}=this,s=`${this.id}__list-item-${i}`,n=`${t.format.name} ${e.conversionOutputSuffix}`,o=0===i,r=o||this._expanded,a=o?this._renderFirstConversion(t):this._renderTools(i,t,s),l=o&&!t.displayCoordinate?e.noLocation:t.displayCoordinate,c=R("div",{"aria-label":l,class:"esri-coordinate-conversion__display","data-conversion":t,role:"listitem",tabindex:"0",title:l},l),d=this._renderOptions(this.formats.filter((i=>i!==t.format)));return r?R("li",{"aria-label":n,class:"esri-coordinate-conversion__row",id:s,key:t,role:"group",title:n,tabindex:"0"},R("select",{"aria-controls":s,"aria-label":e.selectFormat,class:this.classes("esri-select",Mt),bind:this,"data-index":i,onchange:this._addConversion,title:e.selectFormat},R("option",{"aria-label":t.format.name,selected:!0,title:t.format.name},t.format.name.toUpperCase()),d),c,a):null}_renderCopyButton(t){const i=this._clipboardPopupVisible&&this._renderClipboardPopup();return R("li",{"aria-label":this.messagesCommon.copy,bind:this,class:this.classes(Ft,Yt),"data-conversion":t,onclick:this._copyCoordinateOutput,onkeydown:this._copyCoordinateOutput,oncopy:this._onCopy,role:"button",tabindex:"0",title:this.messagesCommon.copy},i,R("span",{"aria-hidden":"true",class:"esri-icon-duplicate"}))}_renderFirstConversion(t){const i=this.id,e={"esri-icon-down":!this._expanded,"esri-icon-up":this._expanded},{messages:s,messagesCommon:n,multipleConversions:o,visibleElements:r}=this,a="live"===this.mode?s.captureMode:s.liveMode,l=this._expanded?n.collapse:n.expand,c=t.displayCoordinate&&"capture"===this.mode?this._renderCopyButton(t):null,d=o&&r.expandButton&&R("li",{"aria-controls":`${i}__${Et}`,"aria-label":l,bind:this,class:Ft,key:"esri-coordinate-conversion__expand-button",onclick:this._toggleExpand,onkeydown:this._toggleExpand,role:"button",tabindex:"0",title:l},R("span",{"aria-hidden":"true",class:this.classes(e)})),h=!o&&r.captureButton&&R("li",{"aria-label":a,bind:this,class:this.classes(Ft,Xt),key:"esri-coordinate-conversion__mode-toggle",onclick:this._toggleMode,onkeydown:this._toggleMode,role:"button",tabindex:"0",title:a},R("span",{"aria-hidden":"true",class:"esri-icon-map-pin"}));return R("ul",{class:Lt},c,d,h)}_renderInputForm(){const t=this._conversionFormat||this.conversions.getItemAt(0).format,i=this.formats.findIndex((i=>i.name===t.name)),e=this.id,s=`${e}__${Ot}`,n=`${e}__${Ot}__header`,o=this._renderOptions(this.formats,!0,i),r={"esri-coordinate-conversion__input-coordinate--rejected":this._badInput},{messages:a,messagesCommon:l,headingLevel:c}=this;return R("div",{"aria-labelledby":n,class:"esri-coordinate-conversion__input-form",key:"esri-coordinate-conversion__input-form",role:"search"},R("div",{class:"esri-coordinate-conversion__heading"},R("div",{"aria-label":l.back,bind:this,class:this.classes(Ft,Dt),onclick:this._toggleInputVisibility,onkeydown:this._toggleInputVisibility,role:"button",tabindex:"0",title:l.back},this._renderBackIcon()),R(Q,{level:c,class:"esri-widget__heading",id:n},a.inputCoordTitle)),R("div",{class:"esri-coordinate-conversion__input-group"},R("select",{"aria-controls":s,"aria-label":a.selectFormat,bind:this,class:this.classes("esri-select",Mt),onchange:this._setInputFormat,title:a.selectFormat},o),R("input",{afterCreate:E,"aria-labelledby":n,"aria-required":"true",bind:this,class:this.classes(Ot,"esri-input",r),"data-format":t,"data-node-ref":"_coordinateInput",id:s,onkeydown:this._processUserInput,placeholder:a.inputCoordTitle,role:"textbox",spellcheck:!1,title:a.inputCoordTitle,type:"text"})),R("div",{class:"esri-coordinate-conversion__input-group"},R("label",{"aria-label":a.goTo},R("input",{bind:this,checked:this._goToEnabled,onclick:this._toggleGoTo,title:a.goTo,type:"checkbox"}),a.goTo),R("button",{"aria-label":a.convert,bind:this,class:this.classes("esri-coordinate-conversion__button","esri-button"),onclick:this._processUserInput,title:a.convert,type:"button"},a.convert)))}_renderConversionsView(){const t=`${this.id}__${Et}`,i=this._renderPrimaryTools(),e=this._renderOptions(this.formats),s=this.conversions.map(((t,i)=>this._renderConversion(t,i))).toArray(),{messages:n}=this,o=this._expanded?R("div",{class:"esri-coordinate-conversion__row"},R("select",{"aria-controls":t,"aria-label":n.addConversion,bind:this,class:this.classes("esri-select","esri-coordinate-conversion__select-primary"),onchange:this._addConversion,title:n.addConversion},R("option",{disabled:!0,selected:!0,value:""},n.addConversion),e),i):null;return R("div",{class:this.classes("esri-coordinate-conversion__conversions-view",{"esri-coordinate-conversion__conversions-view--expanded":this._expanded,"esri-coordinate-conversion__conversions-view--expand-up":"expand-up"===this.orientation,"esri-coordinate-conversion__conversions-view--expand-down":"expand-down"===this.orientation}),key:"esri-coordinate-conversion__main-view"},R("ul",{"aria-expanded":this._expanded?"true":"false",class:Et,id:t},s),o)}_renderOptions(t,i,e){const s=this.conversions.getItemAt(0);return t.map(((t,n)=>{const o=!(i||!s)&&(s.format.name===t.name||this.conversions.map((t=>t.format.name)).includes(t.name));return R("option",{"aria-label":t.name,"data-format":t,disabled:o,key:t.name,selected:n===e,value:t.name},t.name.toUpperCase())})).toArray()}_renderPopup(){return R("div",{class:jt,role:"alert"},this._popupMessage)}_renderClipboardPopup(){return R("div",{class:this.classes(jt,"esri-coordinate-conversion__clipboard-popup"),role:"alert"},this.messages.copySuccessMessage)}_renderPrimaryTools(){const{messages:t,visibleElements:i}=this,e="live"===this.mode?t.captureMode:t.liveMode,s=i.inputButton&&R("li",{bind:this,class:Ft,onclick:this._toggleInputVisibility,onkeydown:this._toggleInputVisibility,role:"button",tabindex:"0",title:t.inputCoordTitle},R("span",{"aria-hidden":"true",class:"esri-icon-edit"})),n=i.captureButton&&R("li",{bind:this,class:this.classes(Ft,Xt),onclick:this._toggleMode,onkeydown:this._toggleMode,role:"button",tabindex:"0",title:e},R("span",{"aria-hidden":"true",class:"esri-icon-map-pin"})),o=i.settingsButton&&R("li",{bind:this,class:Ft,onclick:this._toggleSettingsVisibility,onkeydown:this._toggleSettingsVisibility,role:"button",tabindex:"0",title:t.settingsTitle},R("span",{"aria-hidden":"true",class:"esri-icon-settings2"}));return R("ul",{class:Lt},s,n,o)}_renderSettings(){const t=this.id,i=`${t}__${Bt}`,e=`${t}__${Bt}__header`,s=`${t}__esri-coordinate-conversion__preview-coordinate`,n=this.formats.filter((t=>t.hasDisplayProperties)),o=this._findSettingsFormat(),r=n.indexOf(o),a=this._renderOptions(n,!0,r),l=o.get("currentPattern"),{messages:c,messagesCommon:d,headingLevel:h}=this;return R("div",{"aria-labelledby":e,class:"esri-coordinate__settings",key:"esri-coordinate-conversion__settings"},R("div",{class:"esri-coordinate-conversion__heading"},R("div",{bind:this,class:this.classes(Ft,Dt),onclick:this._toggleSettingsVisibility,onkeydown:this._toggleSettingsVisibility,role:"button",tabindex:"0",title:d.back},this._renderBackIcon()),R(Q,{level:h,class:"esri-widget__heading",id:e},c.settingsTitle)),R("div",{class:"esri-coordinate-conversion__settings-group"},R("label",{for:i},c.changeCoordinateDisplay),R("select",{"aria-label":c.selectFormat,class:"esri-select",bind:this,onchange:this._setSettingsFormat,title:c.selectFormat},a),R("div",{class:"esri-coordinate-conversion__settings-group-horizontal"},R("input",{"aria-controls":s,bind:this,class:this.classes(Bt,"esri-input"),id:i,oninput:this._updateCurrentPattern,spellcheck:!1,title:c.changeCoordinateDisplay,type:"text",value:l}),R("div",{"aria-controls":i,bind:this,class:Ft,onclick:this._setDefaultPattern,onkeydown:this._setDefaultPattern,role:"button",tabindex:"0",title:c.defaultPattern},R("span",{"aria-hidden":"true",class:"esri-icon-refresh"})))),R("div",{class:"esri-coordinate-conversion__settings-group"},R("label",null,d.preview,R("div",{class:"esri-coordinate-conversion__preview-coordinate",id:s,tabindex:"0"},this._previewConversion.displayCoordinate))))}_renderBackIcon(){return R("span",{"aria-hidden":"true",class:M(this.container)?"esri-icon-right-arrow":"esri-icon-left-arrow"})}_renderTools(t,i,e){const s=i.displayCoordinate&&"capture"===this.mode?this._renderCopyButton(i):null,{messages:n}=this;return R("ul",{class:Lt,role:"listitem"},s,R("li",{"aria-controls":e,"aria-label":n.removeConversion,bind:this,class:this.classes(Ft,Yt),"data-index":t,key:`${e}__${Ft}`,onclick:this._removeConversion,onkeydown:this._removeConversion,tabindex:"0",role:"button",title:n.removeConversion},R("span",{"aria-hidden":"true",class:"esri-icon-close"})))}_copyCoordinateOutput(t){const i=t.target;if(!("createTextRange"in document.body)){const t=window.getSelection(),e=document.createRange();e.selectNodeContents(i),t.removeAllRanges(),t.addRange(e)}document.execCommand("copy")}_removeConversion(t){this.conversions.removeAt(t.currentTarget["data-index"])}_setDefaultPattern(t){t.stopPropagation();const i=this._findSettingsFormat();i&&(i.currentPattern=i.get("defaultPattern"))}_toggleExpand(){this._expanded=!this._expanded}_toggleInputVisibility(){this._inputVisible=!this._inputVisible,this._popupVisible&&this._hidePopup(),this._inputVisible?this.viewModel.pause():this.viewModel.resume()}_toggleMode(){this.mode="live"===this.mode?"capture":"live"}_toggleSettingsVisibility(){this._settingsVisible=!this._settingsVisible,this._popupVisible&&this._hidePopup(),this._settingsVisible?(this._setPreviewConversion(),this.viewModel.pause()):this.viewModel.resume()}};s([$("viewModel.conversions")],It.prototype,"conversions",void 0),s([$("viewModel.currentLocation")],It.prototype,"currentLocation",void 0),s([$("viewModel.formats")],It.prototype,"formats",void 0),s([$("viewModel.goToOverride")],It.prototype,"goToOverride",void 0),s([n()],It.prototype,"headingLevel",void 0),s([n({aliasOf:{source:"messages.widgetLabel",overridable:!0}})],It.prototype,"label",void 0),s([n(),x("esri/widgets/CoordinateConversion/t9n/CoordinateConversion")],It.prototype,"messages",void 0),s([n(),x("esri/t9n/common")],It.prototype,"messagesCommon",void 0),s([$("viewModel.mode")],It.prototype,"mode",void 0),s([n()],It.prototype,"orientation",void 0),s([$("viewModel.requestDelay")],It.prototype,"requestDelay",void 0),s([n()],It.prototype,"multipleConversions",null),s([$("viewModel.locationSymbol")],It.prototype,"locationSymbol",void 0),s([$("viewModel.storageEnabled")],It.prototype,"storageEnabled",void 0),s([$("viewModel.view")],It.prototype,"view",void 0),s([n({type:Rt})],It.prototype,"viewModel",void 0),s([n()],It.prototype,"visibleElements",void 0),s([S("visibleElements")],It.prototype,"castVisibleElements",null),s([tt()],It.prototype,"_copyCoordinateOutput",null),s([tt()],It.prototype,"_removeConversion",null),s([tt()],It.prototype,"_setDefaultPattern",null),s([tt()],It.prototype,"_toggleExpand",null),s([tt()],It.prototype,"_toggleInputVisibility",null),s([tt()],It.prototype,"_toggleMode",null),s([tt()],It.prototype,"_toggleSettingsVisibility",null),It=s([o("esri.widgets.CoordinateConversion")],It);const At=It;let Wt=class{constructor(e){t(this,e),this.loaded=i(this,"loaded",7),this.position="bottom-left"}validateView(t){t&&(this.widget.view=t,"arcgis-expand"!==this.el.parentElement.tagName.toLowerCase()&&this.widget.view.ui.add(this.widget,this.position))}componentWillLoad(){const t={container:this.el};this.view&&(t.view=this.view);const i=new At(t);this.widget=i,this.loaded.emit(!0)}get el(){return e(this)}static get watchers(){return{view:["validateView"]}}};Wt.style="@import url('https://js.arcgis.com/next/esri/themes/light/main.css');";export{Wt as arcgis_coordinate_conversion}