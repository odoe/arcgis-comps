import{k as e,M as t,a2 as n,bL as r,aB as a}from"./p-566b0715.js";import{O as o,m as s,cp as i,a$ as l,cq as u,t as c,a0 as p,r as y}from"./p-9ae46e68.js";import{r as f,O as d}from"./p-bae36c84.js";import{i as m}from"./p-59312e26.js";import{n as w,o as g}from"./p-9a8fa752.js";import{y as b}from"./p-8e03c038.js";function T(e,t){for(const n of e)if(null!=n&&t(n))return n}function S(e){var t;return null!=(t=v(e))?t:function(e){const t=new Date(e).getTime();return Number.isNaN(t)?null:t}(e)}function v(e){var t,n,r,a;const o=h.exec(e);if(!o)return null;const s=o.groups,i=+s.year,l=+s.month-1,u=+s.day,c=+(null!=(t=s.hours)?t:"0"),p=+(null!=(n=s.minutes)?n:"0"),y=+(null!=(r=s.seconds)?r:"0");if(c>23)return null;if(p>59)return null;if(y>59)return null;const f=null!=(a=s.ms)?a:"0",d=f?+f.padEnd(3,"0").substring(0,3):0;let m;return m=s.isUTC?Date.UTC(i,l,u,c,p,y,d):s.offsetSign?6e4*("+"===s.offsetSign?-1:1)*(60*+s.offsetHours+ +s.offsetMinutes)+Date.UTC(i,l,u,c,p,y,d):new Date(i,l,u,c,p,y,d).getTime(),Number.isNaN(m)?null:m}const h=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/,x="xlink:href",F="2.0.0",E="__esri_wfs_id__",k="wfs-layer:feature-type-not-found",P="wfs-layer:unknown-geometry-type";async function R(e,t){const n=function(e){const t=X(e);(function(e){const t=e.firstElementChild.getAttribute("version");if(t&&t!==F)throw new s("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${t}. Supported version: ${F}`)})(t),Y(t);const n=t.firstElementChild,r=new Map;return{operations:N(n),get featureTypes(){return Array.from(j(n,r))},readFeatureTypes:()=>j(n,r)}}((await o(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:F,...null==t?void 0:t.customParameters},signal:null==t?void 0:t.signal})).data);return function(e,t){i(e)&&(l(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=u(t.operations.DescribeFeatureType.url)),l(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=u(t.operations.GetFeature.url)))}(e,n),n}const C=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function N(e){let t=!1;const n={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if(g(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{n.GetCapabilities.url=e.getAttribute(x)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{n.DescribeFeatureType.url=e.getAttribute(x)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{n.GetFeature.url=e.getAttribute(x)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:e=>{const t=e.textContent;C.has(t.toLowerCase())&&(n.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{t="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{n.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),!t)throw new s("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(c(n.GetFeature.outputFormat))throw new s("wfs-layer:geojson-not-supported","WFS service doesn't support GeoJSON output format");return n}function j(e,t){return w(e,{FeatureTypeList:{FeatureType:e=>{if(t.has(e))return t.get(e);const n={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},a=new Set([4326]),o=e=>{var t,n;const r=parseInt(null==(t=e.textContent.match(/(?<wkid>\d+$)/i))||null==(n=t.groups)?void 0:n.wkid,10);Number.isNaN(r)||a.add(r)};return g(e,{Name:e=>{const{name:t,prefix:r}=q(e.textContent);n.typeName=`${r}:${t}`,n.name=t,n.namespacePrefix=r,n.namespaceUri=e.lookupNamespaceURI(r)},Abstract:e=>{n.description=e.textContent},Title:e=>{n.title=e.textContent},WGS84BoundingBox:e=>{n.extent=function(e){let t,n,a,o;for(const r of e.children)switch(r.localName){case"LowerCorner":[t,n]=r.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[a,o]=r.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:n,xmax:a,ymax:o,spatialReference:r}}(e)},DefaultSRS:o,DefaultCRS:o,OtherSRS:o,OtherCRS:o}),n.title||(n.title=n.name),n.supportedSpatialReferences.push(...a),t.set(e,n),n}}})}function $(e,t,n){return T(e,(e=>n?e.name===t&&e.namespaceUri===n:e.typeName===t||e.name===t))}async function D(t,n,r,a={}){var o;const{featureType:i,extent:l}=await O(t,n,r,a),{fields:u,geometryType:y,swapXY:f,objectIdField:d,geometryField:m}=await async function(e,t,n={}){const[r,a]=await p([G(e.operations.DescribeFeatureType.url,t,n),I(e,t,n)]);if(r.error||a.error)throw new s("wfs-layer:getWFSLayerTypeInfo-error",`An error occurred while getting info about the feature type '${t}'`,{error:r.error||a.error});const{fields:o,errors:i}=r.value,l=r.value.geometryType||a.value.geometryType,u=a.value.swapXY;if(c(l))throw new s(P,`The geometry type could not be determined for type '${t}`,{typeName:t,geometryType:l,fields:o,errors:i});return{...M(o),geometryType:l,swapXY:u}}(t,i.typeName,a);return{url:t.operations.GetCapabilities.url,name:i.name,namespaceUri:i.namespaceUri,fields:u,geometryField:m,geometryType:y,objectIdField:d,spatialReference:null!=(o=a.spatialReference)?o:e.WGS84,extent:l,swapXY:f,wfsCapabilities:t,customParameters:a.customParameters}}async function O(a,o,i,l={}){const{spatialReference:u=e.WGS84}=l,p=a.readFeatureTypes(),y=o?$(p,o,i):p.next().value;if(c(y))throw o?new s(k,`The type '${o}' could not be found in the service`):new s("wfs-layer:empty-service","The service is empty");let m=new t({...y.extent,spatialReference:u});if(!n(u,r))try{await f(r,u,void 0,l),m=d(m,r)}catch{throw new s("wfs-layer:unsupported-spatial-reference","Projection not supported")}return{extent:m,spatialReference:u,featureType:y}}function M(e){var t;const n=e.find((e=>"geometry"===e.type));let r=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),r||(r=new b({name:E,type:"oid",alias:E}),e.unshift(r)),{geometryField:null!=(t=null==n?void 0:n.name)?t:null,objectIdField:r.name,fields:e}}async function I(e,t,n={}){var r;let s,i=!1;const[l,u]=await Promise.all([A(e.operations.GetFeature.url,t,e.operations.GetFeature.outputFormat,{...n,count:1}),o(e.operations.GetFeature.url,{responseType:"text",query:W(t,void 0,{...n,count:1}),signal:null==n?void 0:n.signal})]),c="FeatureCollection"===l.type&&(null==(r=l.features[0])?void 0:r.geometry);if(c){let e;switch(s=a.fromJSON(m(c.type)),c.type){case"Point":e=c.coordinates;break;case"LineString":case"MultiPoint":e=c.coordinates[0];break;case"MultiLineString":case"Polygon":e=c.coordinates[0][0];break;case"MultiPolygon":e=c.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(u.data);if(t){const n=e[0].toFixed(3),r=e[1].toFixed(3),a=parseFloat(t[1]).toFixed(3);n===parseFloat(t[2]).toFixed(3)&&r===a&&(i=!0)}}return{geometryType:s,swapXY:i}}async function G(e,t,n){return U(t,(await o(e,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:F,TYPENAME:t,...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data)}function U(e,t){const{name:n}=q(e),r=X(t);Y(r);const a=T(w(r.firstElementChild,{element:e=>({name:e.getAttribute("name"),typeName:q(e.getAttribute("type")).name})}),(({name:e})=>e===n));if(y(a)){const e=T(w(r.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute("name")===a.typeName));if(y(e))return L(e)}throw new s(k,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(r)})}const V=new Set(["objectid","fid"]);function L(e){var t,n;const r=[],a=[];let o;const i=w(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const l of i){const i=l.getAttribute("name");if(!i)continue;let u,c;if(l.hasAttribute("type")?u=q(l.getAttribute("type")).name:g(l,{simpleType:{restriction:e=>(u=q(e.getAttribute("base")).name,{maxLength:e=>{c=+e.getAttribute("value")}})}}),!u)continue;const p="true"===l.getAttribute("nillable");let y=!1;switch(u.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":a.push(new b({name:i,alias:i,type:"integer",nullable:p}));break;case"float":case"double":case"decimal":a.push(new b({name:i,alias:i,type:"double",nullable:p}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":a.push(new b({name:i,alias:i,type:"string",nullable:p,length:null!=(t=c)?t:255}));break;case"datetime":case"date":a.push(new b({name:i,alias:i,type:"date",nullable:p,length:null!=(n=c)?n:36}));break;case"pointpropertytype":o="point",y=!0;break;case"multipointpropertytype":o="multipoint",y=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":o="polyline",y=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":o="polygon",y=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":y=!0,r.push(new s(P,`geometry type '${u}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:r.push(new s("wfs-layer:unknown-field-type",`Unknown field type '${u}'`,{type:(new XMLSerializer).serializeToString(e)}))}y&&a.push(new b({name:i,alias:i,type:"geometry",nullable:p}))}for(const e of a)if("integer"===e.type&&!e.nullable&&V.has(e.name.toLowerCase())){e.type="oid";break}return{geometryType:o,fields:a,errors:r}}async function A(e,t,n,r){let{data:a}=await o(e,{responseType:"text",query:W(t,n,r),signal:null==r?void 0:r.signal});a=a.replace(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{var i;if(null!=r&&null!=(i=r.dateFields)&&i.length){const e=new Set(r.dateFields);return JSON.parse(a,((t,n)=>e.has(t)?S(n):n))}return JSON.parse(a)}catch(e){throw new s("wfs-layer:malformed-json","Error while parsing the response",{response:a,error:e})}}function W(e,t,n){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:F,TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:"EPSG:4326",STARTINDEX:null==n?void 0:n.startIndex,COUNT:null==n?void 0:n.count,...null==n?void 0:n.customParameters}}function X(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function q(e){const[t,n]=e.split(":");return{prefix:n?t:"",name:null!=n?n:t}}function Y(e){let t,n;if(g(e.firstElementChild,{Exception:e=>(t=e.getAttribute("exceptionCode"),{ExceptionText:e=>{n=e.textContent}})}),t)throw new s(`wfs-layer:${t}`,n)}export{A as B,R as U,$ as V,D as W,M as q,E as x}