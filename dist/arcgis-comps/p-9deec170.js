import{e as t,d as i,i as s,m as p,a0 as e,r,v as o,N as a,t as m}from"./p-9ae46e68.js";import{r as c}from"./p-8be826d6.js";import{l as j,u as h}from"./p-ebe5e529.js";import{h as n}from"./p-1f10277d.js";import{e as d}from"./p-2b250922.js";import{p as f,r as l}from"./p-d18723b0.js";import{i as b}from"./p-9ca88c10.js";import{s as u}from"./p-bdb8e9d6.js";import{a as w}from"./p-52e6638d.js";import"./p-84bf99cb.js";import"./p-69f28d91.js";import"./p-81e5b36e.js";import"./p-566b0715.js";import"./p-fe01b82b.js";import"./p-7a648ea5.js";import"./p-b2a0fae5.js";import"./p-6ebb24ba.js";import"./p-4fd6e394.js";import"./p-4681e856.js";import"./p-a0e42f29.js";import"./p-41655335.js";import"./p-3ffd0931.js";import"./p-8031c809.js";import"./p-3048cc18.js";import"./p-c7a0a732.js";import"./p-b2d0e2de.js";import"./p-db87794e.js";import"./p-22c8d854.js";import"./p-3d1b25b6.js";import"./p-f42060e0.js";import"./p-79553c8d.js";import"./p-8e03c038.js";import"./p-32462343.js";import"./p-98a14d68.js";import"./p-32824614.js";import"./p-40d3b500.js";import"./p-c8f716a9.js";import"./p-57ae469d.js";import"./p-27ef204b.js";import"./p-3a2e88bf.js";import"./p-9e860e7b.js";import"./p-ada83011.js";import"./p-98ce0cca.js";import"./p-4003c7ae.js";import"./p-a7080451.js";import"./p-7e9d2371.js";import"./p-94f8dc11.js";import"./p-bb07d873.js";import"./p-8ac97b63.js";import"./p-a0a931f0.js";import"./p-dfc6337f.js";import"./p-77e6a663.js";import"./p-c5b7f7c3.js";import"./p-30ddb3a0.js";import"./p-74fc1b7f.js";import"./p-b3024dec.js";import"./p-4fcbc3c5.js";import"./p-4b3ae2cf.js";import"./p-6443bfb4.js";import"./p-8e6daf54.js";import"./p-c0757461.js";import"./p-93d9099f.js";import"./p-d3898fd7.js";import"./p-844dad6c.js";import"./p-c59d0a4d.js";import"./p-3a5fe179.js";import"./p-138c2b2c.js";import"./p-ae0b06e3.js";import"./p-a293872e.js";import"./p-f271906a.js";import"./p-cf2267f9.js";import"./p-d2e19070.js";import"./p-e5429b9e.js";import"./p-cf8dc9be.js";import"./p-f17028ec.js";import"./p-5c89c68e.js";import"./p-725fd184.js";import"./p-0c91ebaf.js";import"./p-72355290.js";import"./p-d68829c1.js";import"./p-81102839.js";import"./p-2f7c985e.js";import"./p-00b9ea57.js";import"./p-5a0fe1d0.js";import"./p-7818def0.js";import"./p-da143060.js";import"./p-15bb2887.js";import"./p-1d6f3ddb.js";import"./p-789e71c1.js";import"./p-523f37cd.js";import"./p-a198d6d0.js";import"./p-15515b8a.js";import"./p-264c75ac.js";import"./p-c431b12a.js";import"./p-b0f556d6.js";import"./p-8b767e6c.js";import"./p-8d03d70f.js";import"./p-9658240e.js";import"./p-d6725707.js";import"./p-d925341f.js";import"./p-c3efb223.js";import"./p-bae36c84.js";import"./p-39da60a5.js";import"./p-56ed1c7a.js";import"./p-b62a8a4f.js";import"./p-f614dce4.js";import"./p-fe4caffe.js";import"./p-6ab16fcc.js";import"./p-0c60bcc4.js";import"./p-7c7c5507.js";import"./p-dd4e6b8b.js";import"./p-16def889.js";import"./p-d40c97c9.js";import"./p-47e1bd73.js";import"./p-81abd5fc.js";import"./p-eb19a862.js";import"./p-b392deaf.js";import"./p-4414d64f.js";import"./p-a617738c.js";import"./p-ffe0d3ad.js";import"./p-9dbf3f05.js";import"./p-97ec6ae5.js";import"./p-285c6a34.js";const y=o=>{let a=class extends o{async fetchPopupFeatures(t,i){const{layer:s}=this;if(!t)return Promise.reject(new p("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s}));if("tile"!==s.type)return Promise.reject(new p("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:s.type}));const o=this.get("view.scale"),a=s.allSublayers.toArray().filter((t=>t.popupTemplate&&t.popupEnabled&&t.visible&&(0===t.minScale||o<=t.minScale)&&(0===t.maxScale||o>=t.maxScale)));return e(a.map((async s=>{const p=s.createQuery(),e=r(i)?i.event:null,o=u({renderer:s.renderer,event:e});return p.geometry=this.createFetchPopupFeaturesQueryGeometry(t,o),p.outFields=await s.popupTemplate.getRequiredFields(),(await s.queryFeatures(p)).features}))).then((t=>[].concat(...t.map((t=>t.value)).filter(Boolean))))}};return t([i()],a.prototype,"layer",void 0),a=t([s("esri.layers.mixins.TileLayerView")],a),a},v=o.getLogger("esri.views.2d.layers.TileLayerView2D"),g=[0,0];let T=class extends(y(b(c(j(h))))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}initialize(){const t=this.layer.tileInfo,i=t&&t.spatialReference;let s;i||(s=new p("layerview:tiling-information-missing","The layer doesn't provide tiling information",{layer:this.layer})),i.equals(this.view.spatialReference)||(s=new p("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer})),this.watch("resampling",(()=>{this.doRefresh()})),s&&this.addResolvingPromise(Promise.reject(s))}get resampling(){return!("resampling"in this.layer)||!1!==this.layer.resampling}hitTest(){return null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this.notifyChange("updating")}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null;this._tileInfoView=new n(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new f({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(t,i)=>this.fetchTile(t,i)}),this._tileStrategy=new l({cachePolicy:"keep",resampling:this.resampling,acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),tileInfoView:this._tileInfoView}),this.requestUpdate(),this.container.requestRender(),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQueryGeometry(t,i){return w(t,i,this.view)}async doRefresh(){this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((t=>this._enqueueTileFetch(t))),this.notifyChange("updating"))}isUpdating(){var t;return(null==(t=this._fetchQueue)?void 0:t.length)>0}acquireTile(t){const i=this._bitmapView.createTile(t),s=i.bitmap;return[s.x,s.y]=this._tileInfoView.getTileCoords(g,i.key),s.resolution=this._tileInfoView.getTileResolution(i.key),[s.width,s.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(i),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",(()=>t.destroy())),this.requestUpdate()}async fetchTile(t,i){const s="tilemapCache"in this.layer?this.layer.tilemapCache:null,p=!m(i)&&i.signal;if(!s)try{return await this._fetchImage(t,p)}catch(t){if(!a(t)&&!this.resampling)return this._createBlankImage();throw t}const e=new d(0,0,0,0);let r;try{if(await s.fetchAvailabilityUpsample(t.level,t.row,t.col,e,{signal:p}),e.level!==t.level&&!this.resampling)return this._createBlankImage();r=await this._fetchImage(e,p)}catch(i){if(a(i))throw i;r=await this._fetchImage(t,p)}const{level:o,row:c,col:j}=e;return this.resampling&&o!==t.level?this._resampleImage(r,o,c,j,t.level,t.row,t.col):r}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",(()=>this.requestUpdate()))}catch(t){a(t)||v.error(t)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchTile(t.level,t.row,t.col,{signal:i})}_resampleImage(t,i,s,p,e,r,o){const a=this._tileInfoView.tileInfo.size,m=this._tileInfoView.getTileResolution(i),c=this._tileInfoView.getTileResolution(e);let j=this._tileInfoView.getLODInfoAt(e);const h=j.getXForColumn(o),n=j.getYForRow(r);j=this._tileInfoView.getLODInfoAt(i);const d=j.getXForColumn(p),f=j.getYForRow(s),l=Math.round((h-d)/m),b=Math.round(-(n-f)/m),u=Math.round(a[0]*(c/m)),w=Math.round(a[1]*(c/m)),y=this._createBlankImage();return y.getContext("2d").drawImage(t,l,b,u,w,0,0,a[0],a[1]),y}_createBlankImage(){const t=this._tileInfoView.tileInfo.size,i=document.createElement("canvas");return[i.width,i.height]=t,i}};t([i()],T.prototype,"resampling",null),T=t([s("esri.views.2d.layers.TileLayerView2D")],T);const P=T;export default P;