import{c as e,e as t,d as i,a0 as r,a2 as s,_ as n,a3 as a,i as o,I as l,A as c,Z as u,s as h,Q as d}from"./p-e58503d5.js";import{r as p}from"./p-389c5380.js";import{v as m}from"./p-afac6fb2.js";import{h as v,d as y,w as f,O as w,C as S}from"./p-da33e926.js";import{j as g,f as b}from"./p-1ab449fc.js";import{n as x}from"./p-cbc915be.js";import{B as j}from"./p-efbca0ca.js";import _ from"./p-0eb619a6.js";import{a as I}from"./p-21bd46cc.js";const R=e.getLogger("esri.layers.mixins.SceneService"),A=e=>{let A=class extends e{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=l((async(e,t,i)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(i,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return r.fromJSON(e.spatialReference);{const t=e.store,i=t.indexCRS||t.geographicCRS,s=i&&parseInt(i.substring(i.lastIndexOf("/")+1,i.length),10);return null!=s?new r(s):null}}readFullExtent(e,t,i){if(null!=e&&"object"==typeof e){const r=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return n.fromJSON(r,i)}const r=t.store,s=this._readSpatialReference(t);return null==s||null==r||null==r.extent||!Array.isArray(r.extent)||r.extent.some((e=>e<N))?null:new n({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:s})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},i=e.split(".");return i.length>=2&&(t.major=parseInt(i[0],10),t.minor=parseInt(i[1],10)),t}readVersion(e,t){const i=t.store,r=null!=i.version?i.version.toString():"";return this.parseVersionString(r)}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const i=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return v(this.url,t.name);let r=t.name;if(!r&&this.url){const e=y(this.url);c(e)&&(r=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&i&&(r=i+" - "+r),f(r)}set url(e){const t=w({layer:this,url:e,nonStandardUrlAllowed:!1,logger:R});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,i,r){S(this,e,"layers",t,r)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=u(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=x(this.parsedUrl.path,this.rootNode,e,this.apiKey,R,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===(null==e?void 0:e.type)){var t,i;const r=e.rootIndex%e.pageSize,s=null==(t=e.rootPage)||null==(i=t.nodes)?void 0:i[r];if(null==s||null==s.obb||null==s.obb.center||null==s.obb.halfSize)throw new h("sceneservice:invalid-node-page","Invalid node page.");if(s.obb.center[0]<N||null==this.fullExtent||this.fullExtent.hasZ)return;const n=s.obb.halfSize,a=s.obb.center[2],o=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);this.fullExtent.zmin=a-o,this.fullExtent.zmax=a+o}else if("node"===(null==e?void 0:e.type)){var r;const t=null==(r=e.rootNode)?void 0:r.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<N)return;const i=t[2],s=t[3];this.fullExtent.zmin=i-s,this.fullExtent.zmax=i+s}}async _fetchService(e){if(null==this.url)throw new h("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await d(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await d(this.parsedUrl.path,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let i=!1;if(t.data.layerType&&"Voxel"===t.data.layerType&&(i=!0),i)return this.read(t.data,{origin:"service",url:this.parsedUrl}),this._fetchVoxelServiceLayer();const r=t.data;this.read(r,{origin:"service",url:this.parsedUrl}),this.validateLayer(r)}async _fetchVoxelServiceLayer(e){const t=(await d(this.parsedUrl.path+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,{origin:"service",url:this.parsedUrl}),this.validateLayer(t)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,i){e.typeKeywords||(e.typeKeywords=[]);const r=t.getTypeKeywords();for(const t of r)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,i)=>i.indexOf(e)===t)),1===i&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const i={...O,...t};let r=_.from(e);r||(R.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new h("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),r.id&&(r=r.clone(),r.id=null);const s=r.portal||j.getDefault();await this._ensureLoadBeforeSave(),r.type=T,r.portal=s;const n={origin:"portal-item",url:null,messages:[],portal:s,portalItem:r,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},a={layers:[this.write({},n)]};return await Promise.all(n.resources.pendingOperations),await this._validateAgainstJSONSchema(a,n,i),r.url=this.url,r.title||(r.title=this.title),this._updateTypeKeywords(r,i,1),await s._signIn(),await s.user.addItem({item:r,folder:i&&i.folder,data:a}),await I(this.resourceReferences,n,null),this.portalItem=r,p(n),n.portalItem=r,r}async _save(e){const t={...O,...e};this.portalItem||(R.error("_save(): requires the .portalItem property to be set"),await Promise.reject(new h("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==T&&(R.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+T),await Promise.reject(new h("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${T}"`))),await this._ensureLoadBeforeSave();const i={origin:"portal-item",url:this.portalItem.itemUrl&&u(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||j.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},r={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations),await this._validateAgainstJSONSchema(r,i,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:r}),await I(this.resourceReferences,i,null),p(i),this.portalItem}async _validateAgainstJSONSchema(e,t,i){let r=t.messages.filter((e=>"error"===e.type)).map((e=>new h(e.name,e.message,e.details)));if(i&&i.validationOptions.ignoreUnsupported&&(r=r.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),i.validationOptions.enabled||P){const t=(await import("./p-f65c8472.js")).validate(e,i.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(R.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===i.validationOptions.failPolicy){const e=t.map((e=>new h("sceneservice:schema-validation",e))).concat(r);throw new h("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(r.length>0)throw new h("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:r})}};return t([i(g)],A.prototype,"id",void 0),t([i({type:r})],A.prototype,"spatialReference",void 0),t([s("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],A.prototype,"readSpatialReference",null),t([i({type:n})],A.prototype,"fullExtent",void 0),t([s("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],A.prototype,"readFullExtent",null),t([i({readOnly:!0,type:m})],A.prototype,"heightModelInfo",void 0),t([i({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],A.prototype,"minScale",void 0),t([i({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],A.prototype,"maxScale",void 0),t([i({readOnly:!0})],A.prototype,"version",void 0),t([s("version",["store.version"])],A.prototype,"readVersion",null),t([i({type:String,json:{read:{source:"copyrightText"}}})],A.prototype,"copyright",void 0),t([i({type:String,json:{read:!1}})],A.prototype,"sublayerTitleMode",void 0),t([i({type:String})],A.prototype,"title",void 0),t([s("portal-item","title")],A.prototype,"readTitlePortalItem",null),t([s("service","title",["name"])],A.prototype,"readTitleService",null),t([i({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],A.prototype,"layerId",void 0),t([i(b)],A.prototype,"url",null),t([a("url")],A.prototype,"writeUrl",null),t([i()],A.prototype,"parsedUrl",null),t([i({readOnly:!0})],A.prototype,"store",void 0),t([i({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],A.prototype,"rootNode",void 0),A=t([o("esri.layers.mixins.SceneService")],A),A},N=-1e38,P=!1,T="Scene Service",O={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};export{A as N}