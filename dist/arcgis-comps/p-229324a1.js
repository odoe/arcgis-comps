import{W as e,H as t,a7 as i,id as r,T as s,bX as n,ez as a,s as o,e as l,d as c,ij as u,ad as h,aL as d,a8 as p,ea as y,eb as m,aO as v,i as f,E as w,ik as g,aJ as S,il as x,im as b,io as j,aI as I,b4 as R,ao as _}from"./p-7b6f6c18.js";import{r as T}from"./p-207b5a2e.js";import{getSiblingOfSameTypeI as P}from"./p-bb20f481.js";async function N(r,s,n,a,o,l){let c=null;if(e(n)){const i=`${r}/nodepages/`,s=i+Math.floor(n.rootIndex/n.nodesPerPage);try{return{type:"page",rootPage:(await t(s,{query:{f:"json",token:a},responseType:"json",signal:l})).data,rootIndex:n.rootIndex,pageSize:n.nodesPerPage,lodMetric:n.lodSelectionMetricType,urlPrefix:i}}catch(t){e(o)&&o.warn("#fetchIndexInfo()","Failed to load root node page. Falling back to node documents.",s,t),c=t}}if(!s)return null;const u=`${r}/nodes/`,h=u+(s&&s.split("/").pop());try{return{type:"node",rootNode:(await t(h,{query:{f:"json",token:a},responseType:"json",signal:l})).data,urlPrefix:u}}catch(e){throw new i("sceneservice:root-node-missing","Root node missing.",{pageError:c,nodeError:e,url:h})}}async function A(e,t,a){if(!t||!t.resources)return;const o=t.portalItem===e.portalItem?new Set(e.paths):new Set;e.paths.length=0,e.portalItem=t.portalItem;const l=new Set(t.resources.toKeep.map((e=>e.resource.path))),c=new Set,u=[];l.forEach((t=>{o.delete(t),e.paths.push(t)}));for(const i of t.resources.toUpdate)if(o.delete(i.resource.path),l.has(i.resource.path)||c.has(i.resource.path)){const{resource:t,content:s,finish:n,error:o}=i,l=P(t,r());e.paths.push(l.path),u.push(O({resource:l,content:s,finish:n,error:o},a))}else e.paths.push(i.resource.path),u.push(U(i,a)),c.add(i.resource.path);for(const i of t.resources.toAdd)u.push(O(i,a)),e.paths.push(i.resource.path);if(o.forEach((e=>{const i=t.portalItem.resourceFromPath(e);u.push(i.portalItem.removeResource(i).catch((()=>{})))})),0===u.length)return;const h=await s(u);n(a);const d=h.filter((e=>"error"in e)).map((e=>e.error));if(d.length>0)throw new i("save:resources","Failed to save one or more resources",{errors:d})}async function O(e,t){const i=await a(e.resource.portalItem.addResource(e.resource,e.content,t));if(!0!==i.ok)throw e.error&&e.error(i.error),i.error;e.finish&&e.finish(e.resource)}async function U(e,t){const i=await a(e.resource.update(e.content,t));if(!0!==i.ok)throw e.error(i.error),i.error;e.finish(e.resource)}const k=o.getLogger("esri.layers.mixins.SceneService"),q=r=>{let s=class extends r{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=w((async(e,t,i)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(i,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return h.fromJSON(e.spatialReference);{const t=e.store,i=t.indexCRS||t.geographicCRS,r=i&&parseInt(i.substring(i.lastIndexOf("/")+1,i.length),10);return null!=r?new h(r):null}}readFullExtent(e,t,i){if(null!=e&&"object"==typeof e){const r=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return p.fromJSON(r,i)}const r=t.store,s=this._readSpatialReference(t);return null==s||null==r||null==r.extent||!Array.isArray(r.extent)||r.extent.some((e=>e<E))?null:new p({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:s})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},i=e.split(".");return i.length>=2&&(t.major=parseInt(i[0],10),t.minor=parseInt(i[1],10)),t}readVersion(e,t){const i=t.store,r=null!=i.version?i.version.toString():"";return this.parseVersionString(r)}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(t,i){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return g(this.url,i.name);let s=i.name;if(!s&&this.url){const t=S(this.url);e(t)&&(s=t.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(s=r+" - "+s),x(s)}set url(e){const t=b({layer:this,url:e,nonStandardUrlAllowed:!1,logger:k});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,i,r){j(this,e,"layers",t,r)}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=I(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=N(this.parsedUrl.path,this.rootNode,e,this.apiKey,k,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===(null==e?void 0:e.type)){var t,r;const s=e.rootIndex%e.pageSize,n=null==(t=e.rootPage)||null==(r=t.nodes)?void 0:r[s];if(null==n||null==n.obb||null==n.obb.center||null==n.obb.halfSize)throw new i("sceneservice:invalid-node-page","Invalid node page.");if(n.obb.center[0]<E||null==this.fullExtent||this.fullExtent.hasZ)return;const a=n.obb.halfSize,o=n.obb.center[2],l=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);this.fullExtent.zmin=o-l,this.fullExtent.zmax=o+l}else if("node"===(null==e?void 0:e.type)){var s;const t=null==(s=e.rootNode)?void 0:s.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<E)return;const i=t[2],r=t[3];this.fullExtent.zmin=i-r,this.fullExtent.zmax=i+r}}async _fetchService(e){if(null==this.url)throw new i("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const i=await t(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(i.data&&Array.isArray(i.data.layers)&&i.data.layers.length>0)return i.data.layers[0].id}async _fetchServiceLayer(e){const i=await t(this.parsedUrl.path,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let r=!1;if(i.data.layerType&&"Voxel"===i.data.layerType&&(r=!0),r)return this.read(i.data,{origin:"service",url:this.parsedUrl}),this._fetchVoxelServiceLayer();const s=i.data;this.read(s,{origin:"service",url:this.parsedUrl}),this.validateLayer(s)}async _fetchVoxelServiceLayer(e){const i=(await t(this.parsedUrl.path+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(i,{origin:"service",url:this.parsedUrl}),this.validateLayer(i)}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,i){e.typeKeywords||(e.typeKeywords=[]);const r=t.getTypeKeywords();for(const t of r)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,i)=>i.indexOf(e)===t)),1===i&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const r={...$,...t};let s=R.from(e);s||(k.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new i("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),s.id&&(s=s.clone(),s.id=null);const n=s.portal||_.getDefault();await this._ensureLoadBeforeSave(),s.type=L,s.portal=n;const a={origin:"portal-item",url:null,messages:[],portal:n,portalItem:s,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},o={layers:[this.write({},a)]};return await Promise.all(a.resources.pendingOperations),await this._validateAgainstJSONSchema(o,a,r),s.url=this.url,s.title||(s.title=this.title),this._updateTypeKeywords(s,r,1),await n._signIn(),await n.user.addItem({item:s,folder:r&&r.folder,data:o}),await A(this.resourceReferences,a,null),this.portalItem=s,T(a),a.portalItem=s,s}async _save(e){const t={...$,...e};this.portalItem||(k.error("_save(): requires the .portalItem property to be set"),await Promise.reject(new i("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==L&&(k.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+L),await Promise.reject(new i("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${L}"`))),await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&I(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||_.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},s={layers:[this.write({},r)]};return await Promise.all(r.resources.pendingOperations),await this._validateAgainstJSONSchema(s,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:s}),await A(this.resourceReferences,r,null),T(r),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let s=t.messages.filter((e=>"error"===e.type)).map((e=>new i(e.name,e.message,e.details)));if(r&&r.validationOptions.ignoreUnsupported&&(s=s.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),r.validationOptions.enabled||F){const t=(await import("./p-fd906c62.js")).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(k.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===r.validationOptions.failPolicy){const e=t.map((e=>new i("sceneservice:schema-validation",e))).concat(s);throw new i("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(s.length>0)throw new i("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:s})}};return l([c(u)],s.prototype,"id",void 0),l([c({type:h})],s.prototype,"spatialReference",void 0),l([d("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readSpatialReference",null),l([c({type:p})],s.prototype,"fullExtent",void 0),l([d("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readFullExtent",null),l([c({readOnly:!0,type:y})],s.prototype,"heightModelInfo",void 0),l([c({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],s.prototype,"minScale",void 0),l([c({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],s.prototype,"maxScale",void 0),l([c({readOnly:!0})],s.prototype,"version",void 0),l([d("version",["store.version"])],s.prototype,"readVersion",null),l([c({type:String,json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),l([c({type:String,json:{read:!1}})],s.prototype,"sublayerTitleMode",void 0),l([c({type:String})],s.prototype,"title",void 0),l([d("portal-item","title")],s.prototype,"readTitlePortalItem",null),l([d("service","title",["name"])],s.prototype,"readTitleService",null),l([c({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],s.prototype,"layerId",void 0),l([c(m)],s.prototype,"url",null),l([v("url")],s.prototype,"writeUrl",null),l([c()],s.prototype,"parsedUrl",null),l([c({readOnly:!0})],s.prototype,"store",void 0),l([c({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],s.prototype,"rootNode",void 0),s=l([f("esri.layers.mixins.SceneService")],s),s},E=-1e38,F=!1,L="Scene Service",$={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};export{q as N,N as n}