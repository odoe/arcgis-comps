import{af as t,d_ as e,H as r,e as s,i as a,ai as i}from"./p-c8bc3433.js";import{f as o,u as n,d as c,b as u,p as m,o as p}from"./p-ace7ce6b.js";import"./p-84bf99cb.js";import"./p-26cd027c.js";const l=p({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:t=>t.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});let b=class extends i{constructor(t){super(t)}solve(s,a){return async function(s,a,i){const p=[],b=[],f={},d={},A=t(s),{path:y}=A;a.stops&&a.stops.features&&n(a.stops.features,b,"stops.features",f),a.pointBarriers&&a.pointBarriers.features&&n(a.pointBarriers.features,b,"pointBarriers.features",f),a.polylineBarriers&&a.polylineBarriers.features&&n(a.polylineBarriers.features,b,"polylineBarriers.features",f),a.polygonBarriers&&a.polygonBarriers.features&&n(a.polygonBarriers.features,b,"polygonBarriers.features",f);const B=await e(b);for(const t in f){const e=f[t];p.push(t),d[t]=B.slice(e[0],e[1])}if(c(d,p)){let t=null;try{t=await u(y,a.apiKey,i)}catch{}t&&!t.hasZ&&m(d,p)}for(const t in d)d[t].forEach(((e,r)=>{a.get(t)[r].geometry=e}));const j={...i,query:{...A.query,...l.toQueryParams(a),f:"json"}},v=y.endsWith("/solve")?y:`${y}/solve`,N=await r(v,j);return o(N)}(this.url,s,a)}};b=s([a("esri.tasks.RouteTask")],b);const f=b;export default f;