import{e as s,d as t,i,p as e,u as h,a as n}from"./p-e58503d5.js";import{p as r}from"./p-01e5a461.js";import{k as a}from"./p-cbbdb7db.js";import{f as o}from"./p-ca295674.js";let l=class extends e{constructor(){super(...arguments),this.suspended=!1,this.extent=null,this.extentIntersectionDirty=!0,this._isVisibleBelowSurface=!1,this.handles=new h,this.layerView=null,this.updating=!0}setup(s){this.layerView=s,this.extentIntersection=new a({renderCoordsHelper:s.view.renderCoordsHelper});const t=s.view,i=t.basemapTerrain,e=t.resourceController.scheduler;this.handles.add([t.on("resize",(()=>this.viewChange())),t.state.watch("camera",(()=>this.viewChange()),!0),e.registerTask(o.FRUSTUM_VISIBILITY,this),i.on("elevation-bounds-change",(()=>this.elevationBoundsChange()))]),"local"===t.viewingMode?this.isVisibleBelowSurface=!0:this.handles.add([n(i,["opacity","wireframe"],(()=>this.updateIsVisibleBelowSurface())),n(t,"map.ground.navigationConstraint.type",(()=>this.updateIsVisibleBelowSurface()))])}destroy(){this.layerView=null,this.extent=null,this.extentIntersection=null,this.handles&&(this.handles.destroy(),this.handles=null)}_setDirty(){this.updating||this._set("updating",!0)}setExtent(s){this.extent=s,this.extentIntersectionDirty=!0,this._setDirty()}viewChange(){this._setDirty()}elevationBoundsChange(){this._setDirty(),this.extentIntersectionDirty=!0}set isVisibleBelowSurface(s){this._isVisibleBelowSurface=s,this._setDirty(),this.extentIntersectionDirty=!0}updateIsVisibleBelowSurface(){const s=this.layerView.view;this.isVisibleBelowSurface="local"===s.viewingMode||!s.basemapTerrain.opaque||s.map.ground&&s.map.ground.navigationConstraint&&"none"===s.map.ground.navigationConstraint.type}updateExtentIntersection(){if(!this.extentIntersectionDirty)return;this.extentIntersectionDirty=!1;const s=this.layerView.view;let t;if(this._isVisibleBelowSurface)t=-.3*r(s.spatialReference).radius;else{const{min:i,max:e}=s.basemapTerrain.elevationBounds;t=i-Math.max(1,(e-i)*(1.2-1))}this.extentIntersection.update(this.extent,s.spatialReference,t)}get running(){return this.updating}runTask(){if(this._set("updating",!1),!this.extent)return void this._set("suspended",!1);this.updateExtentIntersection();const s=this.layerView.view.frustum,t=r(this.layerView.view.spatialReference).radius;this._set("suspended",!this.extentIntersection.isVisibleInFrustum(s,t))}};s([t({readOnly:!0})],l.prototype,"suspended",void 0),s([t({readOnly:!0})],l.prototype,"updating",void 0),l=s([i("esri.views.3d.layers.graphics.Graphics3DFrustumVisibility")],l);const u=l;export{u as c}