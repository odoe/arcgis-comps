import{e as t,d as i,i as s,p as e,u as n,A as h,b as r,ai as a,S as o,af as l,a as c}from"./p-e58503d5.js";import{h as u}from"./p-54330161.js";import{m as p}from"./p-889f7a78.js";import{b as d}from"./p-3e39c093.js";import{d as m,aX as f,aY as y}from"./p-340cd100.js";import{b as g}from"./p-5e833dfc.js";import{y as v,I as w}from"./p-e31c89bd.js";import{d as b,s as j}from"./p-7392987e.js";import{l as O}from"./p-7731c620.js";let S=class extends e{constructor(t){super(t),this.graphicsCore=null,this.elevationAlignment=new b,this.watchUpdatingTracking=new O,this.handles=new n,this.suspendResumeExtent=null}normalizeCtorArgs(t){let i=null;t.scaleVisibilityEnabled&&(delete(t={...t}).scaleVisibilityEnabled,i=new v);const s=new w({owner:t.owner,layer:t.layer,preferredUpdatePolicy:1,graphicSymbolSupported:!0});return{...t,graphicsCore:s,scaleVisibility:i}}initialize(){const t=this.scaleVisibility;h(t)&&"minScale"in this.layer&&this.watchUpdatingTracking.add(this.layer,"scaleRangeId",(()=>t.layerMinMaxScaleChangeHandler())),"elevationInfo"in this.layer&&this.watchUpdatingTracking.add(this.layer,"elevationInfo",((t,i)=>{p(t,i)&&this.watchUpdatingTracking.addPromise(this.graphicsCore.elevationInfoChange())}))}async setup(){const t=(t,i,s)=>this.graphicsCore.spatialIndex.queryGraphicUIDsInExtent(t,i,s);this.elevationAlignment.setup(this.owner,t,this.graphicsCore,this.view.elevationProvider),h(this.scaleVisibility)&&"minScale"in this.layer&&this.scaleVisibility.setup(this.owner,this.layer,t,this.graphicsCore,this.owner.view.basemapTerrain),this._set("objectStates",new j(this.graphicsCore));try{await this.graphicsCore.setup({elevationAlignment:this.elevationAlignment,scaleVisibility:this.scaleVisibility,objectStates:this.objectStates})}catch(t){if(r(t))return;throw t}this.destroyed||(this.handles.add(this.view.watch("clippingArea",(()=>this.updateClippingExtent()),!0)),this.updateClippingExtent(),this.setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics())}destroy(){this.handles=a(this.handles),this.watchUpdatingTracking.destroy(),this._set("elevationAlignment",a(this.elevationAlignment)),this._set("scaleVisibility",a(this.scaleVisibility)),this._set("objectStates",a(this.objectStates)),this._set("graphicsCore",a(this.graphicsCore))}get suspended(){return!(!h(this.scaleVisibility)||!this.scaleVisibility.suspended)}get updating(){var t,i;return!!(null!=(t=this.graphicsCore)&&t.updating||h(this.scaleVisibility)&&this.scaleVisibility.updating||null!=(i=this.watchUpdatingTracking)&&i.updating)}getGraphicFromGraphicUid(t){if(this.owner.loadedGraphics){const i=this.owner.loadedGraphics.find((i=>i.uid===t));if(i)return m(i,this.layer instanceof d?this.layer:null)}}whenGraphicBounds(t,i){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(t,i):Promise.reject()}computeAttachmentOrigin(t,i){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(t,i):null}getSymbolLayerSize(t,i){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(t,i):null}maskOccludee(t){const{set:i,handle:s}=this.objectStates.acquireSet(1,null);return this.objectStates.setUid(i,t.uid),s}highlight(t){if(t instanceof g)return A;if("number"==typeof t)return this.highlight([t]);if(t instanceof u)return this.highlight([t]);if(t instanceof o&&(t=t.toArray()),Array.isArray(t)&&t.length>0){if(t[0]instanceof u){const i=t.map((t=>t.uid)),{set:s,handle:e}=this.objectStates.acquireSet(0,null);return this.objectStates.setUids(s,i),e}if("number"==typeof t[0]){const i=t,{set:s,handle:e}=this.objectStates.acquireSet(0,null);return this.objectStates.setObjectIds(s,i),e}}return A}updateClippingExtent(){this.graphicsCore.setClippingExtent(this.view.clippingArea,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics()}updateSuspendResumeExtent(){l(this.scaleVisibility)||(this.suspendResumeExtent=f(this.graphicsCore.computedExtent,this.suspendResumeExtent,y,this.graphicsCore.extentPadding),this.scaleVisibility.setExtent(this.suspendResumeExtent))}setupSuspendResumeExtent(){l(this.scaleVisibility)||(c(this.graphicsCore,"computedExtent",(()=>this.updateSuspendResumeExtent()),!0),this.graphicsCore.watch("extentPadding",(()=>this.updateSuspendResumeExtent())))}};t([i({constructOnly:!0})],S.prototype,"owner",void 0),t([i({constructOnly:!0})],S.prototype,"layer",void 0),t([i({readOnly:!0,aliasOf:"owner.view"})],S.prototype,"view",void 0),t([i({constructOnly:!0})],S.prototype,"graphicsCore",void 0),t([i({constructOnly:!0})],S.prototype,"scaleVisibility",void 0),t([i({readOnly:!0})],S.prototype,"elevationAlignment",void 0),t([i({readOnly:!0})],S.prototype,"objectStates",void 0),t([i({readOnly:!0})],S.prototype,"watchUpdatingTracking",void 0),t([i({readOnly:!0})],S.prototype,"suspended",null),t([i({readOnly:!0})],S.prototype,"updating",null),S=t([s("esri.views.3d.layers.graphics.Graphics3DGraphicLikeLayerView")],S);const A={remove(){},pause(){},resume(){}},x=S;export{x as E}