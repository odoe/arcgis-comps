import{cg as t,e as s,d as i,i as e,p as h,u as n,r,A as a,cp as o}from"./p-e58503d5.js";import{u as c,a as l,h as d,y as u,q as p,b as g}from"./p-ea916a39.js";import{C as m,f}from"./p-ca295674.js";class v{constructor(){this._extents=new t({allocator:t=>t||c()}),this._tmpExtent=c(),this._dirty=!1}get empty(){return 0===this._extents.length}get size(){return this._extents.length}clear(){this._extents.clear()}add(t){this.contains(t)||(this.removeContained(t),l(this._extents.pushNew(),t),this._dirty=!0)}pop(){return this._dirty&&this.mergeTight(),this._extents.pop()}merge(t){return this.mergeTight(t),t.hasProgressed}mergeTight(t=m){const s=this._extents,i=new Set;let e=0;for(;e!==s.length;){s.sort(((t,s)=>t[0]-s[0])),e=s.length,i.clear();for(let e=0;e<s.length;++e){if(t.done)return;const h=s.getItemAt(e);for(let t=e+1;t<s.length;++t){const e=s.getItemAt(t);if(e[0]>=h[2])break;i.add(e)}i.forEach((e=>{if(h===e)return;if(e[2]<=h[0])return void i.delete(e);const n=u(h),r=u(e),a=this._tmpExtent;d(h,e,a);const o=n+r;(u(a)-o)/o<.05&&(l(h,a),i.delete(e),s.remove(e),t.madeProgress())})),i.add(h)}}this._dirty=!1}contains(t){return this._extents.some((s=>p(s,t)))}removeContained(t){this._extents.filterInPlace((s=>!p(t,s)))}get test(){const t=this;return{containsPoint:s=>t._extents.some((t=>g(t,s)))}}}let y=class extends h{constructor(){super(...arguments),this.dirtyExtents=new v,this.globalDirty=!1,this.averageExtentUpdateSize=0,this.dirtyGraphicsSet=new Set,this.handles=new n,this.updateElevation=!1,this.layerView=null,this.graphicsCore=null,this.events=new r}setup(t,s,i,e){this.layerView=t,this.queryGraphicUIDsInExtent=s,this.graphicsCore=i,this.elevationProvider=e;const h=this.layerView.view.resourceController.scheduler;this.handles.add([e.on("elevation-change",(t=>this._elevationChanged(t))),this.layerView.watch("suspended",(()=>this.suspendedChange())),h.registerTask(f.ELEVATION_ALIGNMENT,this)])}destroy(){this.dirtyGraphicsSet.clear(),this.handles.destroy(),this.handles=null,this.layerView=null,this.graphicsCore=null,this.queryGraphicUIDsInExtent=null}clear(){this.dirtyGraphicsSet.clear(),this.notifyChange("updating")}suspendedChange(){!0===this.layerView.suspended?this.updateElevation=!1:!1===this.layerView.suspended&&this.updateElevation&&(this.globalDirty=!0,this.notifyChange("updating"))}elevationInfoChange(){this.globalDirty=!0,this.notifyChange("updating")}get updating(){return this.running}get running(){return this.dirtyGraphicsSet.size>0||this.dirtyExtents&&!this.dirtyExtents.empty||this.globalDirty}get updatingRemaining(){return this.dirtyGraphicsSet.size+this.dirtyExtents.size*this.averageExtentUpdateSize}runTask(t){for(this.globalDirty&&(this.markAllGraphicsElevationDirty(),this.globalDirty=!1,t.madeProgress()),t.run((()=>this.dirtyExtents.merge(t)));this.running&&!t.done;)this._updateDirtyGraphics(t),this._updateDirtyExtents(t);this.layerView.view.deconflictor.setDirty(),this.notifyChange("updating")}_updateDirtyGraphics(t){const s=this.layerView.view.renderCoordsHelper,i=0===this.graphicsCore.effectiveUpdatePolicy;for(const e of this.dirtyGraphicsSet.keys()){const h=this.graphicsCore.getGraphics3DGraphicById(e);if(this.dirtyGraphicsSet.delete(e),a(h)&&(h.alignWithElevation(this.elevationProvider,s,i),t.madeProgress()),t.done)return}}_updateDirtyExtents(t){for(;!this.dirtyExtents.empty&&!t.done;){const s=this.dirtyExtents.pop(),i=this.elevationProvider.spatialReference;this.events.emit("invalidate-elevation",{extent:s,spatialReference:i});const e=this.dirtyGraphicsSet.size;this.queryGraphicUIDsInExtent(s,i,(t=>{const s=this.graphicsCore.getGraphics3DGraphicById(t);a(s)&&s.needsElevationUpdates()&&this.dirtyGraphicsSet.add(t)})),this.averageExtentUpdateSize=.1*(this.dirtyGraphicsSet.size-e)+.9*this.averageExtentUpdateSize,t.madeProgress()}}markAllGraphicsElevationDirty(){this.dirtyExtents.clear(),this.dirtyGraphicsSet.clear(),this.graphicsCore.graphics3DGraphics.forEach(((t,s)=>this.dirtyGraphicsSet.add(s)))}_elevationChanged(t){if("scene"===t.context&&(!this.graphicsCore.layer.elevationInfo||"relative-to-scene"!==this.graphicsCore.layer.elevationInfo.mode))return;const{extent:s,spatialReference:i}=t;if(this.layerView.suspended){if(!this.updateElevation){const t=this.graphicsCore.computedExtent;t&&s[2]>t.xmin&&s[0]<t.xmax&&s[3]>t.ymin&&s[1]<t.ymax&&(this.updateElevation=!0)}this.events.emit("invalidate-elevation",{extent:s,spatialReference:i})}else s[0]===-1/0?this.globalDirty=!0:this.dirtyExtents.add(s),this.notifyChange("updating")}};s([i({readOnly:!0})],y.prototype,"updating",null),s([i({readOnly:!0})],y.prototype,"updatingRemaining",null),y=s([e("esri.views.3d.layers.graphics.Graphics3DElevationAlignment")],y);const S=y;class b{constructor(){this.items=[]}addObject(t,s){this.items.push({type:0,objectStateId:s,object:t})}addRenderGeometry(t,s,i){this.items.push({type:1,objectStateId:s,renderGeometry:t,owner:i})}addExternal(t,s){this.items.push({type:2,objectStateId:s,remove:t})}remove(t){for(let s=this.items.length-1;s>=0;--s){const i=this.items[s];i.objectStateId===t&&(this._removeObjectStateItem(i),this.items.splice(s,1))}}removeObject(t){for(let s=this.items.length-1;s>=0;--s){const i=this.items[s];0===i.type&&i.object===t&&(this._removeObjectStateItem(i),this.items.splice(s,1))}}removeRenderGeometry(t){for(let s=this.items.length-1;s>=0;--s){const i=this.items[s];1===i.type&&i.renderGeometry===t&&(this._removeObjectStateItem(i),this.items.splice(s,1))}}removeAll(){this.items.forEach((t=>{this._removeObjectStateItem(t)})),this.items=[]}_removeObjectStateItem(t){switch(t.type){case 0:0===t.objectStateId.channel?t.object.removeHighlight(t.objectStateId):1===t.objectStateId.channel&&t.object.removeOcclude(t.objectStateId);break;case 1:t.owner.removeRenderGeometryObjectState(t.renderGeometry,t.objectStateId);break;case 2:t.remove(t.objectStateId)}}}class j{constructor(t,s){this.stateType=t,this.objectIdField=s,this.objectStateSet=new b,this.ids=new Set,this.paused=!1}hasGraphic(t){return this.ids.has(this.objectIdField?t.graphic.attributes[this.objectIdField]:t.graphic.uid)}}class w{constructor(t){this._graphicsCore=t,this._stateSets=new Array}destroy(){this._stateSets&&this._stateSets.forEach((t=>t.objectStateSet.removeAll())),this._stateSets=null}acquireSet(t,s){const i=new j(t,s);this._stateSets.push(i);const e=o((()=>this.releaseSet(i)));return{set:i,handle:e}}releaseSet(t){t.objectStateSet.removeAll();const s=this._stateSets?this._stateSets.indexOf(t):-1;-1!==s&&this._stateSets.splice(s,1)}_addObjectStateSet(t,s){t.addObjectStateSet(s.stateType,s.objectStateSet)}_removeObjectStateSet(t,s){t.removeObjectState(s.objectStateSet)}setUid(t,s){t.ids.add(s);const i=this._graphicsCore.graphics3DGraphics.get(s);i&&this._addObjectStateSet(i,t)}setUids(t,s){s.forEach((s=>this.setUid(t,s)))}setObjectIds(t,s){s.forEach((s=>t.ids.add(s))),this.initializeSet(t)}addGraphic(t){this._stateSets.forEach((s=>{!s.paused&&s.hasGraphic(t)&&this._addObjectStateSet(t,s)}))}removeGraphic(t){this._stateSets.forEach((s=>{s.hasGraphic(t)&&this._removeObjectStateSet(t,s)}))}allGraphicsDeleted(){this._stateSets&&this._stateSets.forEach((t=>t.objectStateSet.removeAll()))}initializeSet(t){const s=this._graphicsCore.graphics3DGraphics;t.objectIdField?s.forEach((s=>{s&&t.hasGraphic(s)&&this._addObjectStateSet(s,t)})):t.ids.forEach((i=>{const e=s.get(i);e&&this._addObjectStateSet(e,t)}))}get test(){return{states:this._stateSets}}}export{S as d,w as s}