import{h as e}from"./p-e273719b.js";import{h as r}from"./p-54330161.js";import{c as i,A as a,af as n}from"./p-e58503d5.js";import{m as s}from"./p-6b2eb7a7.js";import{n as t,e as o}from"./p-dfc6337f.js";import"./p-74de0937.js";import"./p-2f398ed1.js";import"./p-d3105731.js";import"./p-b79fcce3.js";import"./p-93765525.js";import"./p-765e6c28.js";import"./p-a9a30646.js";import"./p-8747982c.js";import"./p-8bc9b36a.js";import"./p-7a658388.js";import"./p-fb38a9d0.js";import"./p-f94762ac.js";import"./p-ea916a39.js";import"./p-8a919d07.js";import"./p-efbca0ca.js";import"./p-c048b814.js";import"./p-53bb6ab4.js";import"./p-01e5a461.js";const l=i.getLogger("esri.renderers.visualVariables.support.visualVariableUtils"),c=new r,u=Math.PI,f=/^\s*(return\s+)?\$view\.scale\s*(;)?\s*$/i;function p(r,i,n){const s="visualVariables"in r&&r.visualVariables?r.visualVariables.filter((e=>"color"===e.type))[0]:r;if(!s)return;if("esri.renderers.visualVariables.ColorVariable"!==s.declaredClass)return void l.warn("The visualVariable should be an instance of esri.renderers.visualVariables.ColorVariable");const t="number"==typeof i,o=t?null:i,c=o&&o.attributes;let u=t?i:null;const f=s.field,{ipData:p,hasExpression:d}=s.cache;let b=s.cache.compiledFunc;if(!f&&!d){const e=s.stops;return e&&e[0]&&e[0].color}if("number"!=typeof u)if(d){if(!a(n)||!a(n.arcade))return void l.error("Use of arcade expressions requires an arcade context");const e=n.arcade.arcadeUtils,r=e.getViewInfo({viewingMode:n.viewingMode,scale:n.scale,spatialReference:n.spatialReference}),i=e.createExecContext(o,r);if(!b){const r=e.createSyntaxTree(s.valueExpression);b=e.createFunction(r),s.cache.compiledFunc=b}u=e.executeFunction(b,i)}else c&&(u=c[f]);const v=s.normalizationField,m=c?parseFloat(c[v]):void 0;if(null!=u&&(!v||t||!isNaN(m)&&0!==m)){isNaN(m)||t||(u/=m);const r=S(u,p);if(r){const i=r[0],t=r[1],o=i===t?s.stops[i].color:e.blendColors(s.stops[i].color,s.stops[t].color,r[2],a(n)?n.color:void 0);return new e(o)}}}function d(e,r,i){const a="visualVariables"in e&&e.visualVariables?e.visualVariables.filter((e=>"opacity"===e.type))[0]:e;if(!a)return;if("esri.renderers.visualVariables.OpacityVariable"!==a.declaredClass)return void l.warn("The visualVariable should be an instance of esri.renderers.visualVariables.OpacityVariable");const s="number"==typeof r,t=s?null:r,o=t&&t.attributes;let c=s?r:null;const u=a.field,{ipData:f,hasExpression:p}=a.cache;let d=a.cache.compiledFunc;if(!u&&!p){const e=a.stops;return e&&e[0]&&e[0].opacity}if("number"!=typeof c)if(p){if(n(i)||n(i.arcade))return void l.error("Use of arcade expressions requires an arcade context");const e=i.arcade.arcadeUtils,r=e.getViewInfo({viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference}),s=e.createExecContext(t,r);if(!d){const r=e.createSyntaxTree(a.valueExpression);d=e.createFunction(r),a.cache.compiledFunc=d}c=e.executeFunction(d,s)}else o&&(c=o[u]);const b=a.normalizationField,v=o?parseFloat(o[b]):void 0;if(null!=c&&(!b||s||!isNaN(v)&&0!==v)){isNaN(v)||s||(c/=v);const e=S(c,f);if(e){const r=e[0],i=e[1];if(r===i)return a.stops[r].opacity;{const n=a.stops[r].opacity;return n+(a.stops[i].opacity-n)*e[2]}}}}function b(e,r,i){const a="visualVariables"in e&&e.visualVariables?e.visualVariables.filter((e=>"rotation"===e.type))[0]:e;if(!a)return;if("esri.renderers.visualVariables.RotationVariable"!==a.declaredClass)return void l.warn("The visualVariable should be an instance of esri.renderers.visualVariables.RotationVariable");const s=a.axis||"heading",t="heading"===s&&"arithmetic"===a.rotationType?90:0,o="heading"===s&&"arithmetic"===a.rotationType?-1:1,c="number"==typeof r?null:r,u=c&&c.attributes,f=a.field,{hasExpression:p}=a.cache;let d=a.cache.compiledFunc,b=0;if(!f&&!p)return b;if(p){if(n(i)||n(i.arcade))return void l.error("Use of arcade expressions requires an arcade context");const e=i.arcade.arcadeUtils,r=e.getViewInfo({viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference}),s=e.createExecContext(c,r);if(!d){const r=e.createSyntaxTree(a.valueExpression);d=e.createFunction(r),a.cache.compiledFunc=d}b=e.executeFunction(d,s)}else u&&(b=u[f]||0);return b="number"!=typeof b||isNaN(b)?null:t+o*b,b}function v(e,r,i){const s="number"==typeof r,t=s?null:r,c=t&&t.attributes;let u=s?r:null;const{isScaleDriven:f}=e.cache;let p=e.cache.compiledFunc;if(f){const r=a(i)?i.scale:void 0,n=a(i)?i.view:void 0;u=null==r||"3d"===n?function(e){let r=null,i=null;const a=e.stops;return a?(r=a[0].value,i=a[a.length-1].value):(r=e.minDataValue||0,i=e.maxDataValue||0),(r+i)/2}(e):r}else if(!s)switch(e.inputValueType){case"expression":{if(n(i)||n(i.arcade))return void l.error("Use of arcade expressions requires an arcade context");const r=i.arcade.arcadeUtils,a=r.getViewInfo({viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference}),s=r.createExecContext(t,a);if(!p){const i=r.createSyntaxTree(e.valueExpression);p=r.createFunction(i),e.cache.compiledFunc=p}u=r.executeFunction(p,s);break}case"field":c&&(u=c[e.field]);break;case"unknown":u=null}if(!o(u))return null;if(s||!e.normalizationField)return u;const d=c?parseFloat(c[e.normalizationField]):null;return o(d)&&0!==d?u/d:null}function m(e,r,i){const a="visualVariables"in e&&e.visualVariables?e.visualVariables.filter((e=>"size"===e.type))[0]:e;if(!a)return;if("esri.renderers.visualVariables.SizeVariable"!==a.declaredClass)return void l.warn("The visualVariable should be an instance of esri.renderers.visualVariables.SizeVariable");const n=x(v(a,r,i),a,r,i,a.cache.ipData);return null==n||isNaN(n)?0:n}function h(e,r,i){return null==e?null:t(e)?m(e,r,i):o(e)?e:null}function V(e,r,i){return o(i)&&e>i?i:o(r)&&e<r?r:e}function j(e,r,i,n){const s=(e-r.minDataValue)/(r.maxDataValue-r.minDataValue),t=h(r.minSize,i,n),o=h(r.maxSize,i,n),l=a(n)?n.shape:void 0;if(e<=r.minDataValue)return t;if(e>=r.maxDataValue)return o;if("area"===r.scaleBy&&l){const e="circle"===l,r=e?u*(t/2)**2:t*t,i=r+s*((e?u*(o/2)**2:o*o)-r);return e?2*Math.sqrt(i/u):Math.sqrt(i)}return t+s*(o-t)}function g(e,r,i,n){const s=a(n)?n.shape:void 0,t=e/r.minDataValue,o=h(r.minSize,i,n),l=h(r.maxSize,i,n);let c=null;return c="circle"===s?2*Math.sqrt(t*(o/2)**2):"square"===s||"diamond"===s||"image"===s?Math.sqrt(t*o**2):t*o,V(c,o,l)}function w(e,r,i,n){const t=(a(n)&&n.resolution?n.resolution:1)*s[r.valueUnit],o=h(r.minSize,i,n),l=h(r.maxSize,i,n),{valueRepresentation:c}=r;let f=null;return f="area"===c?2*Math.sqrt(e/u)/t:"radius"===c||"distance"===c?2*e/t:e/t,V(f,o,l)}function x(e,r,i,a,n){switch(r.transformationType){case"additive":return function(e,r,i,a){return e+(h(r.minSize,i,a)||r.minDataValue)}(e,r,i,a);case"constant":return function(e,r,i){const a=e.stops;let n=a&&a.length&&a[0].size;return null==n&&(n=e.minSize),h(n,r,i)}(r,i,a);case"clamped-linear":return j(e,r,i,a);case"proportional":return g(e,r,i,a);case"stops":return function(e,r,i,a,n){const[s,t,o]=S(e,n);if(s===t)return h(r.stops[s].size,i,a);{const e=h(r.stops[s].size,i,a);return e+(h(r.stops[t].size,i,a)-e)*o}}(e,r,i,a,n);case"real-world-size":return w(e,r,i,a);case"identity":return e;case"unknown":return null}}function y(e,r,i){const{isScaleDriven:a}=e.cache;if(!(a&&"3d"===i||r))return null;const n={scale:r,view:i};let s=h(e.minSize,c,n),t=h(e.maxSize,c,n);if(null!=s||null!=t){if(s>t){const e=t;t=s,s=e}return{minSize:s,maxSize:t}}}function N(e,r,i){if(!e.visualVariables)return;const a=[],n=[],s=[],t=[],o=[];for(const r of e.visualVariables)switch(r.type){case"color":n.push(r);break;case"opacity":s.push(r);break;case"rotation":o.push(r);break;case"size":t.push(r)}return n.forEach((e=>{const n=p(e,r,i);a.push({variable:e,value:n})})),s.forEach((e=>{const n=d(e,r,i);a.push({variable:e,value:n})})),o.forEach((e=>{const n=b(e,r,i);a.push({variable:e,value:n})})),t.forEach((e=>{const n=m(e,r,i);a.push({variable:e,value:n})})),a.filter((e=>null!=e.value))}function S(e,r){if(!r)return;let i=0,a=r.length-1;return r.some(((r,n)=>e<r?(a=n,!0):(i=n,!1))),[i,a,(e-r[i])/(r[a]-r[i])]}function z(e,r,i){const a=["proportional","proportional","proportional"];for(const n of e){const e=n.useSymbolValue?"symbol-value":m(n,r,i);switch(n.axis){case"width":a[0]=e;break;case"depth":a[1]=e;break;case"height":a[2]=e;break;case"width-and-depth":a[0]=e,a[1]=e;break;case"all":case void 0:case null:a[0]=e,a[1]=e,a[2]=e}}return a}export{z as getAllSizes,p as getColor,d as getOpacity,b as getRotationAngle,m as getSize,x as getSizeForValue,h as getSizeFromNumberOrVariable,y as getSizeRangeAtScale,N as getVisualVariableValues,f as viewScaleRE}