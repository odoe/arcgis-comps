import{c as t,e as s,d as i,i as e,r as o,u as r,S as h,k as p,O as n,ai as c,af as a,A as l,cq as d,aE as m,bv as f,cu as j,s as v}from"./p-e58503d5.js";import{m as u,c as b,q as y}from"./p-b79fcce3.js";import{h as x}from"./p-54330161.js";import{h as _}from"./p-5f05b534.js";import{y as w}from"./p-8bc9b36a.js";import{h as g}from"./p-1e75ba5c.js";import{s as G}from"./p-dd537345.js";import I from"./p-a76c7be2.js";import{q as M,v as S}from"./p-90239435.js";import{h as V}from"./p-6c3025fa.js";import{u as R}from"./p-612a2c14.js";import{l as E}from"./p-ab86fcff.js";import{e as k}from"./p-f5813fa9.js";import"./p-53bb6ab4.js";import"./p-93765525.js";import"./p-765e6c28.js";import"./p-a9a30646.js";import"./p-8747982c.js";import"./p-c048b814.js";import"./p-7d081d01.js";import"./p-efbca0ca.js";import"./p-7731c620.js";import"./p-5d962998.js";import"./p-3e39c093.js";import"./p-a24f7752.js";import"./p-74de0937.js";import"./p-fb38a9d0.js";import"./p-ccdb8e80.js";import"./p-d3105731.js";import"./p-c6970847.js";import"./p-a6c8fb32.js";import"./p-6b2eb7a7.js";import"./p-01e5a461.js";import"./p-7a658388.js";import"./p-e273719b.js";import"./p-2f398ed1.js";import"./p-f94762ac.js";import"./p-ea916a39.js";import"./p-8a919d07.js";import"./p-e6fe5d89.js";import"./p-746a9d8f.js";import"./p-7ee74a78.js";import"./p-c93d2280.js";import"./p-fea9512d.js";import"./p-0edb3309.js";import"./p-e8160b60.js";import"./p-2e8ad983.js";import"./p-1f81b35d.js";import"./p-b6fa3228.js";import"./p-dae095dd.js";import"./p-0e784e4d.js";import"./p-dbdf15fc.js";import"./p-e0d9ff4c.js";import"./p-08e5f531.js";import"./p-dfc6337f.js";import"./p-9f1c2d50.js";import"./p-889f7a78.js";import"./p-81b9df84.js";import"./p-5ce39624.js";import"./p-e9bae5e9.js";import"./p-b0565d49.js";import"./p-51a17e75.js";import"./p-d208934e.js";import"./p-a131049b.js";import"./p-a2324023.js";import"./p-afac6fb2.js";import"./p-480e5606.js";import"./p-2db4840f.js";import"./p-bba8b671.js";import"./p-dc852195.js";import"./p-22c9f19c.js";import"./p-c096b5df.js";import"./p-da33e926.js";import"./p-4a6dc5e4.js";import"./p-6a92ecb9.js";import"./p-7a5bfd29.js";import"./p-5e833dfc.js";import"./p-1ab449fc.js";import"./p-e3270d48.js";import"./p-e44bd0a6.js";import"./p-e654504b.js";import"./p-0eb619a6.js";import"./p-fe68aab5.js";import"./p-de86b3c9.js";import"./p-37d3434c.js";import"./p-120b7410.js";import"./p-b1eff69d.js";import"./p-612de336.js";import"./p-91fe06d4.js";import"./p-ab0e9273.js";import"./p-ff2962f5.js";import"./p-15a9486c.js";import"./p-22ccef7d.js";import"./p-da9e7ba9.js";import"./p-2a99994a.js";import"./p-6f4b0bc8.js";import"./p-a184d75f.js";import"./p-f70b836b.js";import"./p-ca657fcf.js";import"./p-df35b79d.js";import"./p-f16641e7.js";import"./p-b8beb0d3.js";import"./p-d443df87.js";import"./p-7ca40eac.js";import"./p-9087b4d3.js";import"./p-c1cd5521.js";import"./p-ca4492df.js";import"./p-9d34911e.js";import"./p-182bb5be.js";import"./p-db87794e.js";import"./p-a8f0aa27.js";import"./p-4a96de15.js";import"./p-5032dfbd.js";import"./p-a87cccba.js";import"./p-2ae44317.js";import"./p-9f58a277.js";import"./p-9e860e7b.js";import"./p-f3659a34.js";import"./p-b312c1fd.js";import"./p-4d38e149.js";import"./p-dcdb33cf.js";import"./p-95909347.js";import"./p-3c70d22f.js";import"./p-8f986f60.js";import"./p-2c84c65f.js";import"./p-d748d513.js";class C{constructor(t,s,i){this.graphic=t,this.mover=s,this.selected=i,this.type="reshape-start"}}class O{constructor(t,s,i){this.graphic=t,this.mover=s,this.selected=i,this.type="reshape"}}class z{constructor(t,s,i){this.graphic=t,this.mover=s,this.selected=i,this.type="reshape-stop"}}class A{constructor(t,s,i){this.mover=t,this.dx=s,this.dy=i,this.type="move-start"}}class F{constructor(t,s,i){this.mover=t,this.dx=s,this.dy=i,this.type="move"}}class H{constructor(t,s,i){this.mover=t,this.dx=s,this.dy=i,this.type="move-stop"}}class D{constructor(t){this.added=t,this.type="vertex-select"}}class T{constructor(t){this.removed=t,this.type="vertex-deselect"}}class U{constructor(t,s,i,e){this.added=t,this.graphic=s,this.oldGraphic=i,this.vertices=e,this.type="vertex-add"}}class P{constructor(t,s,i,e){this.removed=t,this.graphic=s,this.oldGraphic=i,this.vertices=e,this.type="vertex-remove"}}const q=V.reshapeGraphics,L={vertices:{default:new w({style:"circle",size:q.vertex.size,color:q.vertex.color,outline:{color:q.vertex.outlineColor,width:1}}),hover:new w({style:"circle",size:q.vertex.hoverSize,color:q.vertex.hoverColor,outline:{color:q.vertex.hoverOutlineColor,width:1}}),selected:new w({style:"circle",size:q.selected.size,color:q.selected.color,outline:{color:q.selected.outlineColor,width:1}})},midpoints:{default:new w({style:"circle",size:q.midpoint.size,color:q.midpoint.color,outline:{color:q.midpoint.outlineColor,width:1}}),hover:new w({style:"circle",size:q.midpoint.size,color:q.midpoint.color,outline:{color:q.midpoint.outlineColor,width:1}})}},N="esri.views.draw.support.Reshape",B=t.getLogger(N);let J=class extends o.EventedAccessor{constructor(t){super(t),this._activeOperationInfo=null,this._editGeometryOperations=null,this._handles=new r,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingTask=null,this._stagedVertex=null,this._viewHandles=new r,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.vertexGraphics=new h,this.layer=null,this.midpointGraphics=new h,this.midpointSymbol=new w({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=[],this.snappingManager=null,this.type="reshape",this.view=null}initialize(){this._setup(),this._handles.add([p(this,"view.ready",(()=>{const{layer:t,view:s}=this;M(s,t),this._viewHandles.add([s.on("key-down",(t=>this._keyDownHandler(t)),R.TOOL)])})),n(this,"graphic",(()=>this.refresh())),n(this,"layer",((t,s)=>{s&&(this._clearSelection(),this._resetGraphics(s)),this.refresh()})),n(this,"enableMidpoints",(()=>{this.refresh()}))])}destroy(){var t;this._reset(),null==(t=this._mover)||t.destroy(),this._mover=null,this._handles=c(this._handles),this._viewHandles=c(this._viewHandles)}get state(){const t=!!this.get("view.ready"),s=!(!this.get("graphic")||!this.get("layer"));return t&&s?"active":t?"ready":"disabled"}set symbols(t){const{midpoints:s=L.midpoints,vertices:i=L.vertices}=t||{};this._set("symbols",{midpoints:s,vertices:i})}isUIGraphic(t){const s=[];return this.graphic&&s.push(this.graphic),s.length&&s.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_setup(){const{graphic:t,layer:s}=this;if(!s||!t||a(t.geometry))return;const i=t.geometry;"mesh"!==i.type&&"extent"!==i.type?(this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpGeometryHelper(){const t=this.graphic.geometry;if(a(t)||"mesh"===t.type||"extent"===t.type)return void this._logGeometryTypeError();const s="multipoint"===t.type?new u({paths:t.points,spatialReference:t.spatialReference}):t;this._editGeometryOperations=E.fromGeometry(s,2)}_saveSnappingContextForHandle(t,s){var i;this._snappingGraphicsLayer=new _({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer),this._snappingContext=new k({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},pointer:(null==(i=s.viewEvent)?void 0:i.pointerType)||"mouse",excludeFeature:this.graphic,visualizer:new g(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){l(this.snappingManager)&&this.snappingManager.doneSnapping(),l(this._snappingGraphicsLayer)&&(this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=c(this._editGeometryOperations),this._snappingTask=d(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this._set("selectedVertices",[])}_removeMidpointGraphics(t){const s=t||this.layer;s&&s.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach((t=>t.destroy())),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const s=t||this.layer;s&&s.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach((t=>t.destroy())),this.vertexGraphics.removeAll()}_getCoordinatesForUI(t){const s=b(t.clone());if("polygon"===t.type)for(const t of s){const s=t[t.length-1];t[0][0]===s[0]&&t[0][1]===s[1]&&t.length>2&&t.pop()}return s}_setupGraphics(){const t=this.graphic.geometry;if(l(t)&&("polyline"===t.type||"polygon"===t.type)){const s=this._getCoordinatesForUI(t);this.enableMidpoints&&this._setUpMidpointGraphics(s),this.enableVertices&&this._setUpVertexGraphics(s)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const s=this._createMidpointGraphics(t);this.midpointGraphics.addMany(s),this.layer.addMany(s)}_setUpVertexGraphics(t){this._removeVertexGraphics();const s=this._createVertexGraphics(t);this.vertexGraphics.addMany(s),this._storeRelatedVertexIndices(),this.layer.addMany(s)}_createVertexGraphics(t){const{_graphicAttributes:s,symbols:i,view:{spatialReference:e}}=this,o=[];return null==t||t.forEach(((t,r)=>{t.forEach(((t,h)=>{var p;const[n,c]=t;o.push(new x({geometry:new m({x:n,y:c,spatialReference:e}),symbol:null==i||null==(p=i.vertices)?void 0:p.default,attributes:{...s,pathIndex:r,pointIndex:h}}))}))})),o}_createMidpointGraphics(t){const{_graphicAttributes:s,symbols:i,view:{spatialReference:e}}=this,o=[];return null==t||t.forEach(((t,r)=>{t.forEach(((h,p)=>{const[n,c]=h,a=t[p+1]?p+1:0;if("polygon"===f(this.graphic.geometry,"type")||0!==a){const[h,l]=t[a],[d,f]=y([n,c],[h,l]);o.push(new x({geometry:new m({x:d,y:f,spatialReference:e}),symbol:i.midpoints.default,attributes:{...s,pathIndex:r,pointIndexStart:p,pointIndexEnd:a}}))}}))})),o}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const s=t.map((({geometry:t})=>({x:t.x,y:t.y})));for(let i=0;i<s.length;i++){const e=[];for(let t=0;t<s.length;t++){if(i===t)continue;const o=s[i],r=s[t];o.x===r.x&&o.y===r.y&&e.push(t)}t[i].attributes.relatedGraphicIndices=e}}_setupMover(){const{enableMovement:t,graphic:s,midpointGraphics:i,vertexGraphics:e,view:o}=this,r=f(s.geometry,"type"),h="point"===r||"multipoint"===r,p=e.concat(i).items;t&&p.push(s),this._mover=new I({enableMoveAllGraphics:!1,indicatorsEnabled:h,graphics:p,view:o,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const s=t.graphic;if(s===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t);else if(this._isMidpoint(s)){if(2===t.viewEvent.button)return;const i=this.graphic.clone(),e=this._createVertexFromMidpoint(s);this.refresh(),this._emitVertexAddEvent([s],i,e)}else this._isVertex(s)&&(t.viewEvent.stopPropagation(),2===t.viewEvent.button?this._removeVertices(s):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(s)?this._removeFromSelection(s,!0):this._addToSelection(s)))}_setUpOperation(t){const{graphic:s,dx:i,dy:e}=t,o=s===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(s,t),this._activeOperationInfo={target:this.graphic,mover:s,operationType:o?"move":"reshape",totalDx:i,totalDy:e}}_onGraphicMoveStartCallback(t){const s=t.graphic,{dx:i,dy:e}=t;if(s===this.graphic)return this._clearSelection(),this._resetGraphics(),this._setUpOperation(t),this._emitMoveStartEvent(i,e),void("point"===this._editGeometryOperations.data.type&&this._onHandleMove(s,i,e,t,(()=>this._emitMoveEvent(i,e))));if(!this.selectedVertices.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const t=this.graphic.clone(),i=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],t,i)}this._addToSelection(s)}this._setUpOperation(t),this._emitReshapeStartEvent(s),this._onHandleMove(s,i,e,t,(()=>this._emitReshapeEvent(s)))}_onGraphicMoveCallback(t){const{graphic:s,dx:i,dy:e}=t;this._activeOperationInfo.totalDx+=i,this._activeOperationInfo.totalDy+=e;const{operationType:o}=this._activeOperationInfo;"move"===o?"point"===this._editGeometryOperations.data.type?this._onHandleMove(s,i,e,t,(()=>this._emitMoveEvent(i,e))):this._emitMoveEvent(i,e):this._onHandleMove(s,i,e,t,(()=>this._emitReshapeEvent(s)))}_onGraphicMoveStopCallback(t){const{graphic:s,dx:i,dy:e}=t;this._activeOperationInfo.totalDx+=i,this._activeOperationInfo.totalDy+=e,s===this.graphic?(this._emitMoveStopEvent(),this.refresh()):(this._onHandleMove(s,i,e,t,(()=>this._emitReshapeStopEvent(s))),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._isMidpoint(s)&&this.refresh())}_updateMidpointGraphicLocations(t){for(const s of this.midpointGraphics){const{pathIndex:i,pointIndexStart:e,pointIndexEnd:o}=s.attributes,[r,h]=t[i][e],[p,n]=t[i][o],[c,a]=y([r,h],[p,n]);s.geometry=new m({x:c,y:a,spatialReference:this.view.spatialReference})}}_getIndicesForVertexGraphic({attributes:t}){return[(null==t?void 0:t.pathIndex)||0,(null==t?void 0:t.pointIndex)||0]}_getVertexFromEditGeometry(t){const[s,i]=this._getIndicesForVertexGraphic(t);return this._editGeometryOperations.data.components[s].vertices[i]}_onHandleMove(t,s,i,e,o){if(d(this._snappingTask),!this._snappingContext)return;const r=this.view.toMap({x:e.x,y:e.y}),h="graphic-move-stop"===e.type;if(l(this.snappingManager)&&this.selectedVertices.length<2&&!h){const e=this.snappingManager;this._stagedVertex=e.update(r,this._snappingContext),this._syncGeometryAfterVertexMove(t,new m(this._stagedVertex),s,i,h),o(),this._snappingTask=j((async p=>{const n=await e.snap(r,this._snappingContext,p);n.valid&&(this._stagedVertex=n.apply(),this._syncGeometryAfterVertexMove(t,new m(this._stagedVertex),s,i,h),o())}))}else{const e=l(this._stagedVertex)?new m(this._stagedVertex):r;this._syncGeometryAfterVertexMove(t,e,s,i,h),o()}}async _syncGeometryAfterVertexMove(t,s,i,e,o=!1){const r=this._editGeometryOperations.data.geometry;if("point"===r.type)t.geometry=s;else{const{x:h,y:p}=s,[n,c]=this._getIndicesForVertexGraphic(t);let a=b(r);const l=a[n].length-1;a[n][c]=[h,p],"polygon"===r.type&&(0===c?a[n][l]=[h,p]:c===l&&(a[n][0]=[h,p])),this._isVertex(t)&&(a=this._moveRelatedCoordinates(a,t,h,p),a=this._moveSelectedHandleCoordinates(a,t,i,e,"polygon"===r.type),this._updateMidpointGraphicLocations(a)),this.graphic.geometry=r.clone();const d=this._getVertexFromEditGeometry(t);this._editGeometryOperations.moveVertices([d],h-d.pos[0],p-d.pos[1],0),o&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),s):t.geometry=s)}}_moveRelatedCoordinates(t,s,i,e){const{relatedGraphicIndices:o}=s.attributes;for(const r of o){const o=this.vertexGraphics.getItemAt(r),{pathIndex:h,pointIndex:p}=o.attributes;t[h][p]=[i,e],o.geometry=s.geometry}return t}_moveSelectedHandleCoordinates(t,s,i,e,o){for(const r of this.selectedVertices)if(r!==s){const{pathIndex:s,pointIndex:h,relatedGraphicIndices:p}=r.attributes,n=G(r.geometry,i,e,this.view),c=t[s].length-1;t[s][h]=[n.x,n.y],r.geometry=n,o&&(0===h?t[s][c]=[n.x,n.y]:h===c&&(t[s][0]=[n.x,n.y]));for(const s of p){const i=this.vertexGraphics.getItemAt(s),{pathIndex:e,pointIndex:o}=i.attributes;t[e][o]=[n.x,n.y],i.geometry=n}}return t}_onGraphicPointerOverCallback(t){const s=t.graphic;this._isVertex(s)&&!this._isSelected(s)&&(s.symbol=this.symbols.vertices.hover),this._updateHoverCursor(s)}_onGraphicPointerOutCallback(t){const s=t.graphic;this._isVertex(s)&&!this._isSelected(s)&&(s.symbol=this.symbols.vertices.default),this.view.cursor="default"}_createVertexFromMidpoint(t){const{_graphicAttributes:s,graphic:i}=this,e=i.geometry;if(a(e)||"polygon"!==e.type&&"polyline"!==e.type)return[];const o=e.clone(),r=[],{pathIndex:h,pointIndexStart:p,pointIndexEnd:n}=t.attributes,{x:c,y:l}=t.geometry,d=0===n?p+1:n,m=b(o);return m[h].splice(d,0,[c,l]),t.attributes={...s,pathIndex:h,pointIndex:d,relatedGraphicIndices:[]},r.push({coordinates:m[h][d],componentIndex:h,vertexIndex:d}),this.graphic.geometry=o,r}_addToSelection(t){t instanceof x&&(t=[t]);for(const s of t)s.symbol=this.symbols.vertices.selected;this._set("selectedVertices",this.selectedVertices.concat(t)),this._emitSelectEvent(t)}_removeFromSelection(t,s){const{vertices:i}=this.symbols,e=s?i.hover:i.default;t instanceof x&&(t=[t]);for(const s of t)this.selectedVertices.splice(this.selectedVertices.indexOf(s),1),this._set("selectedVertices",this.selectedVertices),s.set("symbol",e);this._emitDeselectEvent(t)}_clearSelection(){if(this.selectedVertices.length){const t=this.selectedVertices;for(const t of this.selectedVertices)t.set("symbol",this.symbols.vertices.default);this._set("selectedVertices",[]),this._emitDeselectEvent(t)}}_keyDownHandler(t){S.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const s=this.graphic.geometry;if(a(s)||"polygon"!==s.type&&"polyline"!==s.type)return;if("polygon"===s.type&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;t instanceof x&&(t=[t]);const i=this.graphic.clone(),e=s.clone();let o=b(e);const r=[];t instanceof x&&(t=[t]);for(const s of t){const{x:t,y:i}=s.geometry;for(let s=0;s<o.length;s++){const e=o[s];for(let h=0;h<e.length;h++){const[p,n]=e[h];t===p&&i===n&&(r.push({coordinates:o[s][h],componentIndex:s,vertexIndex:h}),o[s].splice(Number(h),1))}}}if("polygon"===e.type)o=o.filter((t=>{if(t.length<2)return!1;const[s,i]=t[0],[e,o]=t[t.length-1];return(2!==t.length||s!==e||i!==o)&&(s===e&&i===o||t.push(t[0]),!0)})),e.rings=o;else{for(const t of o)1===t.length&&o.splice(o.indexOf(t),1);e.paths=o}this.graphic.geometry=e,this.refresh(),this._emitVertexRemoveEvent(t,i,r)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_emitMoveStartEvent(t,s){const i=new A(this.graphic,t,s);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)}_emitMoveEvent(t,s){const i=new F(this.graphic,t,s);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)}_emitMoveStopEvent(){const{totalDx:t,totalDy:s}=this._activeOperationInfo,i=new H(this.graphic,t,s);this.emit("move-stop",i),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(i)}_emitReshapeStartEvent(t){const s=new C(this.graphic,t,this.selectedVertices);this.emit("reshape-start",s),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(s)}_emitReshapeEvent(t){const s=new O(this.graphic,t,this.selectedVertices);this.emit("reshape",s),this.callbacks.onReshape&&this.callbacks.onReshape(s)}_emitReshapeStopEvent(t){const s=new z(this.graphic,t,this.selectedVertices);this.emit("reshape-stop",s),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(s)}_emitSelectEvent(t){const s=new D(t);this.emit("select",s),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(s)}_emitDeselectEvent(t){const s=new T(t);this.emit("deselect",s),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(s)}_emitVertexAddEvent(t,s,i){const e=new U(t,this.graphic,s,i);this.emit("vertex-add",e),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(e)}_emitVertexRemoveEvent(t,s,i){const e=new P(t,this.graphic,s,i);this.emit("vertex-remove",e),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(e)}_logGeometryTypeError(){B.error(new v("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};s([i()],J.prototype,"callbacks",void 0),s([i()],J.prototype,"enableMidpoints",void 0),s([i()],J.prototype,"enableMovement",void 0),s([i()],J.prototype,"enableVertices",void 0),s([i()],J.prototype,"graphic",void 0),s([i({readOnly:!0})],J.prototype,"vertexGraphics",void 0),s([i()],J.prototype,"layer",void 0),s([i({readOnly:!0})],J.prototype,"midpointGraphics",void 0),s([i()],J.prototype,"midpointSymbol",void 0),s([i({readOnly:!0})],J.prototype,"selectedVertices",void 0),s([i()],J.prototype,"snappingManager",void 0),s([i({readOnly:!0})],J.prototype,"state",null),s([i({value:L})],J.prototype,"symbols",null),s([i({readOnly:!0})],J.prototype,"type",void 0),s([i()],J.prototype,"view",void 0),J=s([e(N)],J);const K=J;export default K;