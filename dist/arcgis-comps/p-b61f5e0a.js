import{Q as s,cJ as t,S as i,bA as p,b3 as o,eT as r,e,i as m}from"./p-5420851c.js";import{l as a,u as h}from"./p-e4db8bd2.js";import{i as j}from"./p-2eec0ad8.js";import{r as d}from"./p-95c8b60a.js";import"./p-53bb6ab4.js";import"./p-e2fe661c.js";import"./p-4c6040da.js";import"./p-54db165f.js";import"./p-4d140ee3.js";import"./p-ba8c567b.js";import"./p-2d0c34e5.js";import"./p-47e1bd73.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-6df976c7.js";import"./p-50ff864e.js";import"./p-def8d692.js";import"./p-297addf1.js";import"./p-27418da2.js";import"./p-81f41410.js";import"./p-4b2b4a33.js";import"./p-4414d64f.js";import"./p-a617738c.js";import"./p-13d3a443.js";import"./p-8d730a3d.js";import"./p-97ec6ae5.js";import"./p-ad5a0ac5.js";import"./p-6189adb6.js";import"./p-78327456.js";import"./p-9315e4d7.js";import"./p-dcac8868.js";import"./p-c3fd4463.js";import"./p-97540775.js";import"./p-6e6d0422.js";import"./p-9047f753.js";import"./p-8bf8e457.js";import"./p-7e5e535f.js";import"./p-4d0ba4c4.js";import"./p-baad017f.js";import"./p-e991a11e.js";import"./p-b1c9647c.js";let n=class extends(a(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(s,t){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const i=this.graphicsViews.reverse().map((i=>i.hitTest(s,t)));return Promise.all(i).then((s=>s.filter(((s,t)=>(s&&(s.popupTemplate=this._popupTemplates.get(this.graphicsViews[t]),s.layer=this.layer,s.sourceLayer=this.layer),!!s)))[0]||null))}update(s){if(this.graphicsViews)for(const t of this.graphicsViews)t.processUpdate(s)}attach(){this.handles.add([s(this.layer,"featureCollections",(s=>{this._clear();for(const{popupInfo:r,featureSet:e,layerDefinition:m}of s){const s=t.fromJSON(e),a=new i(s.features),h=m.drawingInfo,n=r?p.fromJSON(r):null,c=o(h.renderer),f=new d({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:a,renderer:c,container:new j(this.view.featuresTilingScheme)});this._graphicsViewMap[s.geometryType]=f,this._popupTemplates.set(f,n),"polygon"!==s.geometryType||this.layer.polygonSymbol?"polyline"!==s.geometryType||this.layer.lineSymbol?"point"!==s.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=c.symbol):this.layer.lineSymbol=c.symbol:this.layer.polygonSymbol=c.symbol,this.graphicsViews.push(f),this.container.addChild(f.container)}})),s(this.layer,"polygonSymbol",(s=>{this._graphicsViewMap.polygon.renderer=new r({symbol:s})})),s(this.layer,"lineSymbol",(s=>{this._graphicsViewMap.polyline.renderer=new r({symbol:s})})),s(this.layer,"pointSymbol",(s=>{this._graphicsViewMap.point.renderer=new r({symbol:s})}))],"georsslayerview")}detach(){this.handles.remove("georsslayerview"),this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const s of this.graphicsViews)s.viewChange()}_clear(){this.container.removeAllChildren();for(const s of this.graphicsViews)s.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};n=e([m("esri.views.2d.layers.GeoRSSLayerView2D")],n);const c=n;export default c;