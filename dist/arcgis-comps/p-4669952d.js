import{e,d as i,aL as t,a8 as r,ij as s,i8 as l,ad as a,i as n,H as o,aI as u,bX as d,s as y,bm as c,aG as p,a5 as h,aK as b,a7 as f,dM as v,jc as m,x as g,jd as w,ae as S,B as I,e9 as x,is as j,i5 as D,gh as L,ab as M,eh as F,je as P,aT as O,iD as T,aO as E,ay as V,iG as N,i7 as C,jf as $,hX as k,a4 as q,iJ as B,j3 as G,W as _,ig as A,jg as J}from"./p-c8bc3433.js";import{r as Q}from"./p-6227298a.js";import{l as X}from"./p-03d6250d.js";import{i as U}from"./p-2f9d204e.js";const W=y=>{let c=class extends y{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(e,i){const t=i.capabilities&&i.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!t)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const r=this.type,s=-1!==t.indexOf("query"),l=-1!==t.indexOf("map"),a=!!i.exportTilesAllowed,n=-1!==t.indexOf("tilemap"),o="tile"!==r&&!!i.supportsDynamicLayers,u="tile"!==r&&(!i.tileInfo||o),d="tile"!==r&&(!i.tileInfo||o),y="tile"!==r,c=!!i.cimVersion&&Q.parse(i.cimVersion).since(1,4);return{operations:{supportsQuery:s,supportsExportMap:l,supportsExportTiles:a,supportsTileMap:n},exportMap:l?{supportsArcadeExpressionForLabeling:c,supportsSublayersChanges:y,supportsDynamicLayers:o,supportsSublayerVisibility:u,supportsSublayerDefinitionExpression:d}:null,exportTiles:a?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(e,i){let t=i.currentVersion;return t||(t=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),t}async fetchSublayerInfo(e,i){return await this.fetchAllLayersAndTables(i),this._allLayersAndTablesMap.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=o(u(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{this._allLayersAndTablesMap=new Map;for(const i of e.data.layers)this._allLayersAndTablesMap.set(i.id,i);return{result:e.data}}),(e=>({error:e}))));const i=await this._allLayersAndTablesPromise;if(d(e),"result"in i)return i.result;throw i.error}};return e([i({readOnly:!0})],c.prototype,"capabilities",void 0),e([t("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],c.prototype,"readCapabilities",null),e([i({json:{read:{source:"copyrightText"}}})],c.prototype,"copyright",void 0),e([i({type:r})],c.prototype,"fullExtent",void 0),e([i(s)],c.prototype,"id",void 0),e([i({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],c.prototype,"legendEnabled",void 0),e([i(l)],c.prototype,"popupEnabled",void 0),e([i({type:a})],c.prototype,"spatialReference",void 0),e([i()],c.prototype,"version",void 0),e([t("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],c.prototype,"readVersion",null),c=e([n("esri.layers.mixins.ArcGISMapService")],c),c};var H;function K(e){return e&&"esriSMS"===e.type}function R(e,i,t){var r;const s=this.originIdOf(i)>=G(t.origin);return{ignoreOrigin:!0,allowNull:s,enabled:!!t&&"map-image"===(null==(r=t.layer)?void 0:r.type)&&(t.writeSublayerStructure||s)}}function z(e,i,t){var r;return{enabled:!!t&&"tile"===(null==(r=t.layer)?void 0:r.type)&&this._isOverridden(i)}}function Y(e,i,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function Z(e,i,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(i)>=G(t.origin))}}const ee=y.getLogger("esri.layers.support.Sublayer");let ie=0;const te=new Set;te.add("layer"),te.add("parent"),te.add("loaded"),te.add("loadStatus"),te.add("loadError"),te.add("loadWarnings");let re=H=class extends(c(p(h(b)))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null}async load(e){return this.addResolvingPromise((async()=>{var i;if(!this.layer&&!this.url)throw new f("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let t=null;if(!this.layer||this.originIdOf("url")>2||"data-layer"===(null==(i=this.source)?void 0:i.type))t=(await o(this.url,{responseType:"json",query:{f:"json"},...e})).data;else{var r;let i=this.id;"map-layer"===(null==(r=this.source)?void 0:r.type)&&(i=this.source.mapLayerId),t=await this.layer.fetchSublayerInfo(i,e)}t&&(this.sourceJSON=t,this.read({layerDefinition:t},{origin:"service"}))})()),this}readCapabilities(e,i){const t=(e=(i=i.layerDefinition||i).capabilities||e)?e.toLowerCase().split(",").map((e=>e.trim())):[];return{exportMap:{supportsModification:!!i.canModifyLayer},operations:{supportsQuery:-1!==t.indexOf("query")}}}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new v(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,i){if((i=i.layerDefinition||i).globalIdField)return i.globalIdField;if(i.fields)for(const e of i.fields)if("esriFieldTypeGlobalID"===e.type)return e.name}get id(){const e=this._get("id");return null==e?ie++:e}set id(e){this._get("id")!==e&&(!1!==this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,i,t,r){e&&e.length&&(i.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},r)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((i=>i.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,i){return i.minScale||i.layerDefinition&&i.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,i){return i.maxScale||i.layerDefinition&&i.layerDefinition.maxScale||0}readObjectIdFieldFromService(e,i){if((i=i.layerDefinition||i).objectIdField)return i.objectIdField;if(i.fields)for(const e of i.fields)if("esriFieldTypeOID"===e.type)return e.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,i){const t=i.layerDefinition;return 1-.01*(null!=t.transparency?t.transparency:t.drawingInfo.transparency)}writeOpacity(e,i,t,r){i.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,i){i.parentLayerId=this.parent&&this.parent!==this.layer?m(this.parent.id):-1}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){if(e)for(const i of e.getSymbols())if(g(i)){ee.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new w({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return S(I.ofType(H),e)}writeSublayers(e,i,t){this.get("sublayers.length")&&(i[t]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTypeIdField(e,i){let t=(i=i.layerDefinition||i).typeIdField;if(t&&i.fields){t=t.toLowerCase();const e=i.fields.find((e=>e.name.toLowerCase()===t));e&&(t=e.name)}return null}get url(){var e,i;const t=null!=(e=null==(i=this.layer)?void 0:i.parsedUrl)?e:this._lastParsedUrl,r=this.source;if(!t)return null;if(this._lastParsedUrl=t,"map-layer"===(null==r?void 0:r.type))return`${t.path}/${r.mapLayerId}`;const s={layer:JSON.stringify({source:this.source})};return`${t.path}/dynamicLayer?${x(s)}`}set url(e){e?this._override("url",e):this._clearOverride("url")}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,i,t,r){i[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=j(this),i=new H;return j(i).store=e.clone(te),this.commitProperty("url"),i._lastParsedUrl=this._lastParsedUrl,i}createPopupTemplate(e){return D(this,e)}createQuery(){return new L({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var e,i;if(this.hasOwnProperty("sublayers"))return null;const t=null==(e=this.layer)?void 0:e.parsedUrl,r=new((await import("./p-c8bc3433.js").then((function(e){return e.ki}))).default)({url:t.path});return t&&this.source&&("map-layer"===this.source.type?r.layerId=this.source.mapLayerId:r.dynamicDataSource=this.source),null!=this.layer.refreshInterval&&(r.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(r.definitionExpression=this.definitionExpression),this.floorInfo&&(r.floorInfo=M(this.floorInfo)),this.originIdOf("labelingInfo")>2&&(r.labelingInfo=M(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(r.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(r.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(r.visible=this.visible),this.originIdOf("minScale")>0&&(r.minScale=this.minScale),this.originIdOf("maxScale")>0&&(r.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(r.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(r.popupTemplate=M(this.popupTemplate)),this.originIdOf("renderer")>2&&(r.renderer=M(this.renderer)),"data-layer"===(null==(i=this.source)?void 0:i.type)&&(r.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(r.title=this.title),"map-image"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(r.customParameters=this.layer.customParameters),"tile"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(r.customParameters=this.layer.customParameters),r}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:i,types:t}=this;if(!i||!e)return null;const r=e.attributes?e.attributes[i]:void 0;if(null==r)return null;let s=null;return t.some((e=>{const{id:i}=e;return null!=i&&(i.toString()===r.toString()&&(s=e),!!s)})),s}getFieldDomain(e,i){const t=this.getFeatureType(i&&i.feature);if(t){const i=t.domains&&t.domains[e];if(i&&"inherited"!==i.type)return i}return this._getLayerDomain(e)}async queryFeatures(e=this.createQuery(),i){var t,r,s,l;if(await this.load(),!this.get("capabilities.operations.supportsQuery"))throw new f("Sublayer.queryFeatures","this layer doesn't support queries.");const[{executeQuery:a},{default:n}]=await Promise.all([import("./p-c8bc3433.js").then((function(e){return e.kg})),import("./p-c8bc3433.js").then((function(e){return e.kh}))]),o=await a(this.url,L.from(e),null!=(t=null==(r=this.layer)?void 0:r.spatialReference)?t:null,{...i,query:{...null==(s=this.layer)?void 0:s.customParameters,token:null==(l=this.layer)?void 0:l.apiKey}}),u=n.fromJSON(o.data);if(null!=u&&u.features)for(const e of u.features)e.sourceLayer=this;return u}toExportImageJSON(e){var i;const t={id:this.id,source:(null==(i=this.source)?void 0:i.toJSON())||{mapLayerId:this.id,type:"mapLayer"}};if(this.definitionExpression){const i=_(e)?X(e,this):this.definitionExpression;t.definitionExpression=i}else _(e)&&(t.definitionExpression=e);const r=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,i)=>(e[i]=this.originIdOf(i),e)),{});if(Object.keys(r).some((e=>r[e]>2))){const e=t.drawingInfo={};r.renderer>2&&(e.renderer=this.renderer?this.renderer.toJSON():null),r.labelsVisible>2&&(e.showLabels=this.labelsVisible),this.labelsVisible&&r.labelingInfo>2&&(e.labelingInfo=this.labelingInfo?this.labelingInfo.map((e=>e.write({},{origin:"service",layer:this.layer}))):null,e.showLabels=!0),r.opacity>2&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.color=e.outline&&e.outline.color?e.outline.color:[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,i){if(e){const t="uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:[];for(const e of t)K(e.symbol)&&i(e.symbol);"symbol"in e&&K(e.symbol)&&i(e.symbol),"defaultSymbol"in e&&K(e.defaultSymbol)&&i(e.defaultSymbol)}}_setAndNotifyLayer(e,i){const t=this.layer,r=this._get(e);let s,l;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",l="supportsModification"}const a=j(this).getDefaultOrigin();if("service"!==a){if(s&&!1===this.get(`layer.capabilities.exportMap.${s}`))return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(l&&!1===this.get(`capabilities.exportMap.${l}`))return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${l}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,i),"service"!==a&&r!==i&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,i){i&&(i.forEach((e=>{e.parent=null,e.layer=null})),this.handles.removeAll()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null})),e.on("before-changes",(e=>{const i=this.get("layer.capabilities.exportMap.supportsSublayersChanges");null==i||i||(ee.error(new f("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,i){ee.error(new f("sublayer:locked",`Property '${e}' can't be changed on Sublayer from the layer '${this.layer.id}'`,{reason:i,sublayer:this,layer:this.layer}))}_getLayerDomain(e){const i=this.fieldsIndex.get(e);return i?i.domain:null}};re.test={isMapImageLayerOverridePolicy:e=>e===Y||e===R,isTileImageLayerOverridePolicy:e=>e===z},e([i({readOnly:!0})],re.prototype,"capabilities",void 0),e([t("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],re.prototype,"readCapabilities",null),e([i({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:R}}})],re.prototype,"definitionExpression",null),e([i({type:[F],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],re.prototype,"fields",void 0),e([i({readOnly:!0})],re.prototype,"fieldsIndex",null),e([i({type:P,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:R},origins:{"web-scene":{read:!1,write:!1}}}})],re.prototype,"floorInfo",null),e([i({type:r,json:{read:{source:"layerDefinition.extent"}}})],re.prototype,"fullExtent",void 0),e([i({type:String})],re.prototype,"globalIdField",void 0),e([t("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],re.prototype,"readGlobalIdFieldFromService",null),e([i({type:O,json:{write:{ignoreOrigin:!0}}})],re.prototype,"id",null),e([i({value:null,type:[T],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:Y}}})],re.prototype,"labelingInfo",null),e([E("labelingInfo")],re.prototype,"writeLabelingInfo",null),e([i({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:Y}}})],re.prototype,"labelsVisible",null),e([i({value:null})],re.prototype,"layer",null),e([i({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:Z}}})],re.prototype,"legendEnabled",void 0),e([i({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],re.prototype,"listMode",null),e([i({type:Number,value:0,json:{write:{overridePolicy:Y}}})],re.prototype,"minScale",null),e([t("minScale",["minScale","layerDefinition.minScale"])],re.prototype,"readMinScale",null),e([i({type:Number,value:0,json:{write:{overridePolicy:Y}}})],re.prototype,"maxScale",null),e([t("maxScale",["maxScale","layerDefinition.maxScale"])],re.prototype,"readMaxScale",null),e([i({type:String})],re.prototype,"objectIdField",void 0),e([t("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],re.prototype,"readObjectIdFieldFromService",null),e([i({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:Y}}})],re.prototype,"opacity",null),e([t("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],re.prototype,"readOpacity",null),e([E("opacity")],re.prototype,"writeOpacity",null),e([i({json:{type:O,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:Y}}})],re.prototype,"parent",void 0),e([E("parent")],re.prototype,"writeParent",null),e([i({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,i)=>!i.disablePopup},write:{target:"disablePopup",overridePolicy:Z,writer(e,i,t){i[t]=!e}}}})],re.prototype,"popupEnabled",void 0),e([i({type:V,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Z}}})],re.prototype,"popupTemplate",void 0),e([i({readOnly:!0})],re.prototype,"defaultPopupTemplate",null),e([i({types:N,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Y},origins:{"web-scene":{types:C,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Y}}}}})],re.prototype,"renderer",null),e([i({types:{key:"type",base:null,typeMap:{"data-layer":$,"map-layer":w}},cast(e){if(e){if("mapLayerId"in e)return k(w,e);if("dataSource"in e)return k($,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:Y}}})],re.prototype,"source",null),e([i()],re.prototype,"sourceJSON",void 0),e([i({value:null,json:{type:[O],write:{target:"subLayerIds",allowNull:!0,overridePolicy:Y}}})],re.prototype,"sublayers",null),e([q("sublayers")],re.prototype,"castSublayers",null),e([E("sublayers")],re.prototype,"writeSublayers",null),e([i({type:String,json:{name:"name",write:{overridePolicy:Z}}})],re.prototype,"title",void 0),e([i({type:String})],re.prototype,"typeIdField",void 0),e([t("typeIdField",["layerDefinition.typeIdField"])],re.prototype,"readTypeIdField",null),e([i({type:[B],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],re.prototype,"types",void 0),e([i({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:z}}})],re.prototype,"url",null),e([i({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:Y}}})],re.prototype,"visible",null),e([E("visible")],re.prototype,"writeVisible",null),re=H=e([n("esri.layers.support.Sublayer")],re);const se=re,le=y.getLogger("esri.layers.TileLayer"),ae=I.ofType(se);function ne(e,i){e&&e.forEach((e=>{i(e),e.sublayers&&e.sublayers.length&&ne(e.sublayers,i)}))}const oe=t=>{let r=class extends t{constructor(...e){super(...e),this.allSublayers=new A({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{}},this.handles.add(this.watch("sublayers",((e,i)=>this._handleSublayersChange(e,i)),!0))}readSublayers(e,i){if(!i||!e)return;const{sublayersSourceJSON:t}=this,r=G(i.origin);if(r<2)return;if(t[r]={context:i,visibleLayers:e.visibleLayers||t[r].visibleLayers,layers:e.layers||t[r].layers},r>2)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:s,origin:l}=this.createSublayersForOrigin("web-document"),a=j(this);a.setDefaultOrigin(l),this._set("sublayers",new ae(s)),a.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((i=>i.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const i=G("web-document"===e?"web-map":e);let t=2,r=this.sublayersSourceJSON[2].layers,s=this.sublayersSourceJSON[2].context,l=null;const a=[3,4,5].filter((e=>e<=i));for(const e of a){const i=this.sublayersSourceJSON[e];U(i.layers)&&(t=e,r=i.layers,s=i.context,i.visibleLayers&&(l={visibleLayers:i.visibleLayers,context:i.context}))}const n=[3,4,5].filter((e=>e>t&&e<=i));let o=null;for(const e of n){const{layers:i,visibleLayers:t,context:r}=this.sublayersSourceJSON[e];i&&(o={layers:i,context:r}),t&&(l={visibleLayers:t,context:r})}const u=function(e,i){const t=[],r={};return e?(e.forEach((e=>{const s=new se;if(s.read(e,i),r[s.id]=s,null!=e.parentLayerId&&-1!==e.parentLayerId){const i=r[e.parentLayerId];i.sublayers||(i.sublayers=[]),i.sublayers.unshift(s)}else t.unshift(s)})),t):t}(r,s),d=new Map,y=new Set;if(o)for(const e of o.layers)d.set(e.id,e);if(l)for(const e of l.visibleLayers)y.add(e);return ne(u,(e=>{o&&e.read(d.get(e.id),o.context),l&&e.read({defaultVisibility:y.has(e.id)},l.context)})),{origin:J(t),sublayers:new ae({items:u})}}read(e,i){super.read(e,i),this.readSublayers(e,i)}_handleSublayersChange(e,i){i&&(i.forEach((e=>{e.parent=null,e.layer=null})),this.handles.remove("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.handles.add(e.on("before-changes",(e=>{le.error(new f("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return e([i({readOnly:!0})],r.prototype,"allSublayers",void 0),e([i({readOnly:!0,type:I.ofType(se)})],r.prototype,"serviceSublayers",void 0),e([i({value:null,type:ae,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),e([i({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),r=e([n("esri.layers.mixins.SublayersOwner")],r),r};export{se as K,oe as f,W as y}