import{r as s,as as t,k as i,q as e,_ as r,ah as l,S as o,e as a,d as p,f as n,dT as u,a2 as h,i as d,A as m,a0 as b,dh as j,aj as c,a3 as f}from"./p-e58503d5.js";import"./p-b79fcce3.js";import{p as y}from"./p-e94b450b.js";import{l as v}from"./p-d208934e.js";import{b as S}from"./p-3e39c093.js";import{i as w}from"./p-a24f7752.js";import{y as g,f as L}from"./p-1ab449fc.js";import{w as x}from"./p-e44bd0a6.js";import{n as O}from"./p-fe68aab5.js";import{s as k}from"./p-c6970847.js";import{m as M}from"./p-efbca0ca.js";import{j as E,S as K,g as F,d as _}from"./p-49369cef.js";import"./p-53bb6ab4.js";import"./p-7731c620.js";import"./p-5d962998.js";import"./p-8747982c.js";import"./p-74de0937.js";import"./p-fb38a9d0.js";import"./p-ccdb8e80.js";import"./p-d3105731.js";import"./p-7a5bfd29.js";import"./p-8a919d07.js";import"./p-a6c8fb32.js";import"./p-765e6c28.js";import"./p-6b2eb7a7.js";import"./p-01e5a461.js";import"./p-e654504b.js";import"./p-0eb619a6.js";import"./p-93765525.js";import"./p-a9a30646.js";import"./p-f94762ac.js";import"./p-ea916a39.js";import"./p-2f398ed1.js";import"./p-51a17e75.js";import"./p-0e784e4d.js";import"./p-8bc9b36a.js";import"./p-7a658388.js";import"./p-e273719b.js";import"./p-dbdf15fc.js";import"./p-e0d9ff4c.js";import"./p-08e5f531.js";import"./p-dfc6337f.js";import"./p-9f1c2d50.js";import"./p-54330161.js";import"./p-c048b814.js";import"./p-889f7a78.js";import"./p-1f81b35d.js";import"./p-81b9df84.js";import"./p-5ce39624.js";import"./p-e9bae5e9.js";import"./p-b0565d49.js";import"./p-dc852195.js";import"./p-a131049b.js";import"./p-a2324023.js";var z;let C=z=class extends(s.EventedMixin(t(M))){constructor(){super(...arguments),this._sublayersHandles=null,this.description=null,this.id=null,this.networkLink=null,this.title=null,this.sourceJSON=null,this.fullExtent=null}initialize(){i(this,"networkLink").then((()=>e(this,"visible"))).then((()=>this.load()))}load(s){if(!this.networkLink)return;if(this.networkLink.viewFormat)return;const t=m(s)?s.signal:null,i=this._fetchService(this._get("networkLink").href,t).then((s=>{const t=E(s.sublayers);this.fullExtent=r.fromJSON(t),this.sourceJSON=s;const i=l(o.ofType(z),K(z,s));this.sublayers?this.sublayers.addMany(i):this.sublayers=i,this.layer.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")}));return this.addResolvingPromise(i),Promise.resolve(this)}set sublayers(s){const t=this._get("sublayers");t&&(t.forEach((s=>{s.parent=null,s.layer=null})),this._sublayersHandles.forEach((s=>s.remove())),this._sublayersHandles=null),s&&(s.forEach((s=>{s.parent=this,s.layer=this.layer})),this._sublayersHandles=[s.on("after-add",(({item:s})=>{s.parent=this,s.layer=this.layer})),s.on("after-remove",(({item:s})=>{s.parent=null,s.layer=null}))]),this._set("sublayers",s)}castSublayers(s){return l(o.ofType(z),s)}get visible(){return this._get("visible")}set visible(s){this._get("visible")!==s&&(this._set("visible",s),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(s,t){return!!t.visibility}set layer(s){this._set("layer",s),this.sublayers&&this.sublayers.forEach((t=>t.layer=s))}_fetchService(s,t){return F(s,this.layer.outSpatialReference,this.layer.refreshInterval,t).then((s=>_(s.data)))}};a([p()],C.prototype,"description",void 0),a([p()],C.prototype,"id",void 0),a([p({readOnly:!0,value:null})],C.prototype,"networkLink",void 0),a([p({json:{write:{allowNull:!0}}})],C.prototype,"parent",void 0),a([p({value:null,json:{write:{allowNull:!0}}})],C.prototype,"sublayers",null),a([n("sublayers")],C.prototype,"castSublayers",null),a([p({value:null,json:{read:{source:"name",reader:s=>u(s)}}})],C.prototype,"title",void 0),a([p({value:!0})],C.prototype,"visible",null),a([h("visible",["visibility"])],C.prototype,"readVisible",null),a([p()],C.prototype,"sourceJSON",void 0),a([p({value:null})],C.prototype,"layer",null),a([p({type:r})],C.prototype,"fullExtent",void 0),C=z=a([d("esri.layers.support.KMLSublayer")],C);const I=C,N=["kml","xml"];let P=class extends(w(O(k(g(x(v(S))))))){constructor(...s){super(...s),this._visibleFolders=[],this.allSublayers=new y({getCollections:()=>[this.sublayers],getChildrenFunction:s=>s.sublayers}),this.outSpatialReference=b.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.watch("sublayers",((s,t)=>{t&&t.forEach((s=>{s.parent=null,s.layer=null})),s&&s.forEach((s=>{s.parent=this,s.layer=this}))}),!0),this.on("sublayer-update",(()=>this.notifyChange("fullExtent")))}normalizeCtorArgs(s,t){return"string"==typeof s?{url:s,...t}:s}readSublayersFromItemOrWebMap(s,t){this._visibleFolders=t.visibleFolders}readSublayers(s,t,i){return K(I,t,i,this._visibleFolders)}writeSublayers(s,t){const i=[],e=s.toArray();for(;e.length;){const s=e[0];s.networkLink||(s.visible&&i.push(s.id),s.sublayers&&e.push(...s.sublayers.toArray())),e.shift()}t.visibleFolders=i}get title(){const s=this._get("title");return s&&"defaults"!==this.originOf("title")?s:this.url?j(this.url,N)||"KML":s||""}set title(s){this._set("title",s)}get visibleSublayers(){const s=this.sublayers,t=[],i=s=>{s.visible&&(t.push(s),s.sublayers&&s.sublayers.forEach(i))};return s&&s.forEach(i),t}get fullExtent(){return this._recomputeFullExtent()}load(s){const t=m(s)?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"]},s).catch(c).then((()=>this._fetchService(t)))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(s){const t=await Promise.resolve().then((()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:F(this.url,this.outSpatialReference,this.refreshInterval,s))),i=_(t.data);i&&this.read(i,{origin:"service"})}_recomputeFullExtent(){let s=null;m(this.extent)&&(s=this.extent.clone());const t=i=>{if(i.sublayers)for(const e of i.sublayers.items)t(e),e.visible&&e.fullExtent&&(m(s)?s.union(e.fullExtent):s=e.fullExtent.clone())};return t(this),s}};a([p({readOnly:!0})],P.prototype,"allSublayers",void 0),a([p({type:b})],P.prototype,"outSpatialReference",void 0),a([p({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],P.prototype,"path",void 0),a([p({readOnly:!0,json:{read:!1,write:!1}})],P.prototype,"legendEnabled",void 0),a([p({type:["show","hide","hide-children"]})],P.prototype,"listMode",void 0),a([p({type:["KML"]})],P.prototype,"operationalLayerType",void 0),a([p({})],P.prototype,"resourceInfo",void 0),a([p({type:o.ofType(I),json:{write:{ignoreOrigin:!0}}})],P.prototype,"sublayers",void 0),a([h(["web-map","portal-item"],"sublayers",["visibleFolders"])],P.prototype,"readSublayersFromItemOrWebMap",null),a([h("service","sublayers",["sublayers"])],P.prototype,"readSublayers",null),a([f("sublayers")],P.prototype,"writeSublayers",null),a([p({readOnly:!0,json:{read:!1}})],P.prototype,"type",void 0),a([p({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],P.prototype,"title",null),a([p(L)],P.prototype,"url",void 0),a([p({readOnly:!0})],P.prototype,"visibleSublayers",null),a([p({type:r})],P.prototype,"extent",void 0),a([p()],P.prototype,"fullExtent",null),P=a([d("esri.layers.KMLLayer")],P);const T=P;export default T;