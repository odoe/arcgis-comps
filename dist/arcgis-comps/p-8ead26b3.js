import{c5 as e,cH as s}from"./p-7b6f6c18.js";import{g as t}from"./p-cde787e2.js";import{r,o as i}from"./p-1088d11f.js";import{G as n}from"./p-e53f77c2.js";import{I as a}from"./p-804725e3.js";class h extends r{constructor(e,s,r,i,n,a=null){super(e,s,r,i,n),this.bitmap=new t(a,"standard",!1),this.bitmap.coordScale=[i,n],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy()}beforeRender(e){super.beforeRender(e),this.bitmap.beforeRender(e)}afterRender(e){super.afterRender(e),this.bitmap.afterRender(e)}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}_createTransforms(){return{dvs:e(),tileMat3:e()}}setTransform(e,s){super.setTransform(e,s),this.bitmap.transforms.dvs=this.transforms.dvs}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap&&(this.bitmap.stage=null)}}class o extends i{get requiresDedicatedFBO(){return this.children.some((e=>"additive"===e.bitmap.blendFunction))}createTile(e){const t=this._tileInfoView.getTileBounds(s(),e),[r,i]=this._tileInfoView.tileInfo.size;return new h(e,t[0],t[3],r,i)}destroyTile(){}prepareRenderPasses(e){const s=e.registerRenderPass({name:"bitmap (tile)",brushes:[n.bitmap],target:()=>this.children.map((e=>e.bitmap)),drawPhase:a.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===a.MAP&&super.doRender(e)}}export{o as n}