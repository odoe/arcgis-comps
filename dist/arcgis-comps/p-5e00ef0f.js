import{e,d as p,i,b as r}from"./p-5420851c.js";import s from"./p-121d0deb.js";import"./p-53bb6ab4.js";import"./p-4c6040da.js";import"./p-bdb8e9d6.js";import"./p-47e1bd73.js";import"./p-e4db8bd2.js";import"./p-e2fe661c.js";import"./p-baad017f.js";import"./p-54db165f.js";import"./p-4d140ee3.js";import"./p-13d3a443.js";import"./p-6189adb6.js";import"./p-ba8c567b.js";import"./p-2d0c34e5.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-7e5e535f.js";import"./p-9047f753.js";import"./p-8bf8e457.js";import"./p-4d0ba4c4.js";import"./p-e991a11e.js";import"./p-cc74fdc8.js";import"./p-03d6250d.js";import"./p-8dd46af5.js";import"./p-4dafedac.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:p}=this;e.source.supportsSpatialReference(p.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([p()],t.prototype,"layer",void 0),e([p({readOnly:!0})],t.prototype,"availableFields",null),t=e([i("esri.views.layers.OGCFeatureLayerView")],t),t};let a=class extends(t(s)){};a=e([i("esri.views.2d.layers.OGCFeatureLayerView2D")],a);const o=a;export default o;