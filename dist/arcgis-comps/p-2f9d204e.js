function n(n,r,l){return r.flatten((({sublayers:n})=>n)).length!==n.length||!!n.some((n=>n.originIdOf("minScale")>l||n.originIdOf("maxScale")>l||n.originIdOf("renderer")>l||n.originIdOf("labelingInfo")>l||n.originIdOf("opacity")>l||n.originIdOf("labelsVisible")>l||n.originIdOf("source")>l))||!e(n,r)}function r(n,r,l){return!!n.some((n=>{const r=n.source;return!(!r||"map-layer"===r.type&&r.mapLayerId===n.id&&(!r.gdbVersion||r.gdbVersion===l.gdbVersion))||n.originIdOf("renderer")>2||n.originIdOf("labelingInfo")>2||n.originIdOf("opacity")>2||n.originIdOf("labelsVisible")>2}))||!e(n,r)}function e(n,r){if(!n||!n.length)return!0;const e=r.slice().reverse().flatten((({sublayers:n})=>n&&n.toArray().reverse())).map((n=>n.id)).toArray();if(n.length>e.length)return!1;let l=0;const t=e.length;for(const{id:r}of n){for(;l<t&&e[l]!==r;)l++;if(l>=t)return!1}return!0}function l(n){return!!n&&n.some((n=>null!=n.minScale||n.layerDefinition&&null!=n.layerDefinition.minScale))}export{n as e,l as i,r as n}