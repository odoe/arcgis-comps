import{aR as e,s as r,e as t,d as s,i as p}from"./p-e58503d5.js";import{l as o}from"./p-d208934e.js";import{b as i}from"./p-3e39c093.js";import{w as n}from"./p-e44bd0a6.js";import"./p-53bb6ab4.js";import"./p-b79fcce3.js";import"./p-8747982c.js";import"./p-efbca0ca.js";import"./p-e654504b.js";import"./p-0eb619a6.js";let a=class extends(n(o(i))){constructor(e){super(e),this.resourceInfo=null,this.type="unsupported"}initialize(){this.addResolvingPromise(new Promise(((t,s)=>{e((()=>{const e=this.resourceInfo&&(this.resourceInfo.layerType||this.resourceInfo.type);let t="Unsupported layer type";e&&(t+=" "+e),s(new r("layer:unsupported-layer-type",t,{layerType:e}))}))})))}read(e,r){const t={resourceInfo:e};null!=e.id&&(t.id=e.id),null!=e.title&&(t.title=e.title),super.read(t,r)}write(e){return Object.assign(e||{},this.resourceInfo,{id:this.id})}};t([s({readOnly:!0})],a.prototype,"resourceInfo",void 0),t([s({type:["show","hide"]})],a.prototype,"listMode",void 0),t([s({json:{read:!1},readOnly:!0,value:"unsupported"})],a.prototype,"type",void 0),a=t([p("esri.layers.UnsupportedLayer")],a);const d=a;export default d;