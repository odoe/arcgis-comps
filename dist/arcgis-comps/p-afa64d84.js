import{e,d as t,i as r,s,T as i,A as a}from"./p-e58503d5.js";import{s as o}from"./p-b6fa3228.js";const n=n=>{let l=class extends n{async fetchPopupFeatures(e,t){const{layer:r}=this;if(!e)return Promise.reject(new s("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:r}));if("tile"!==r.type)return Promise.reject(new s("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:r.type}));const n=this.get("view.scale"),l=r.allSublayers.toArray().filter((e=>e.popupTemplate&&e.popupEnabled&&e.visible&&(0===e.minScale||n<=e.minScale)&&(0===e.maxScale||n>=e.maxScale)));return i(l.map((async r=>{const s=r.createQuery(),i=a(t)?t.event:null,n=o({renderer:r.renderer,event:i});return s.geometry=this.createFetchPopupFeaturesQueryGeometry(e,n),s.outFields=await r.popupTemplate.getRequiredFields(),(await r.queryFeatures(s)).features}))).then((e=>[].concat(...e.map((e=>e.value)).filter(Boolean))))}};return e([t()],l.prototype,"layer",void 0),l=e([r("esri.layers.mixins.TileLayerView")],l),l};export{n as i}