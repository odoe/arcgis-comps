import{aj as e,a0 as r,Z as s,Q as i,d4 as t,s as o,A as a,bh as p,e as n,d as l,a2 as c,a3 as m,f as d,i as f}from"./p-e58503d5.js";import"./p-b79fcce3.js";import{a as j}from"./p-7731c620.js";import{l as h}from"./p-d208934e.js";import{b as u}from"./p-3e39c093.js";import{i as b}from"./p-22c9f19c.js";import{s as y}from"./p-ecdff876.js";import{f as v,y as _,K as g}from"./p-bbc8d8eb.js";import{p as S}from"./p-c096b5df.js";import{i as T}from"./p-a24f7752.js";import{o as w}from"./p-4a6dc5e4.js";import{y as W,f as O}from"./p-1ab449fc.js";import{w as R}from"./p-e44bd0a6.js";import{n as B}from"./p-fe68aab5.js";import{s as L}from"./p-c6970847.js";import{d as k,y as A,p as D}from"./p-da33e926.js";import"./p-53bb6ab4.js";import"./p-5d962998.js";import"./p-8747982c.js";import"./p-efbca0ca.js";import"./p-09e4b01e.js";import"./p-db63fa0e.js";import"./p-01e5a461.js";import"./p-ea916a39.js";import"./p-2f398ed1.js";import"./p-d3105731.js";import"./p-e9bae5e9.js";import"./p-b0565d49.js";import"./p-a4587ab0.js";import"./p-e94b450b.js";import"./p-93765525.js";import"./p-765e6c28.js";import"./p-a9a30646.js";import"./p-0e784e4d.js";import"./p-8bc9b36a.js";import"./p-7a658388.js";import"./p-e273719b.js";import"./p-74de0937.js";import"./p-fb38a9d0.js";import"./p-f94762ac.js";import"./p-8a919d07.js";import"./p-dbdf15fc.js";import"./p-e0d9ff4c.js";import"./p-08e5f531.js";import"./p-dfc6337f.js";import"./p-9f1c2d50.js";import"./p-54330161.js";import"./p-c048b814.js";import"./p-6b2eb7a7.js";import"./p-889f7a78.js";import"./p-1f81b35d.js";import"./p-81b9df84.js";import"./p-5ce39624.js";import"./p-51a17e75.js";import"./p-120b7410.js";import"./p-a131049b.js";import"./p-a2324023.js";import"./p-612de336.js";import"./p-0edb3309.js";import"./p-e8160b60.js";import"./p-2e8ad983.js";import"./p-91fe06d4.js";import"./p-5e833dfc.js";import"./p-7a5bfd29.js";import"./p-15a9486c.js";import"./p-03d6250d.js";import"./p-2f9d204e.js";import"./p-ccdb8e80.js";import"./p-a6c8fb32.js";import"./p-e654504b.js";import"./p-0eb619a6.js";const I=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let M=class extends(T(v(L(W(R(y(_(S(h(j(B(b(w(u)))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(r){const s=a(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(e).then((()=>this._fetchService(s)))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=null==(e=this.parsedUrl)?void 0:e.path.toLowerCase();return r&&this._getDefaultAttribution(this._getMapName(r))}readSpatialReference(e,s){return(e=e||s.tileInfo&&s.tileInfo.spatialReference)&&r.fromJSON(e)}writeSublayers(e,r,s,i){if(!this.loaded||!e)return;const t=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),o=[],a={writeSublayerStructure:!1,...i};t.forEach((e=>{const r=e.write({},a);o.push(r)})),o.some((e=>Object.keys(e).length>1))&&(r.layers=o)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>s(e).path)):null}fetchTile(e,r,s,t={}){const{signal:o}=t,a=this.getTileUrl(e,r,s),p={responseType:"image",signal:o,query:{...this.refreshParameters}};return i(a,p).then((e=>e.data))}getTileUrl(e,r,s){const i=t({...this.parsedUrl.query,blankTile:!(!this.tilemapCache&&this.supportsBlankTile)&&null,...this.customParameters,token:this.apiKey}),o=this.tileServers;return`${o&&o.length?o[r%o.length]:this.parsedUrl.path}/tile/${e}/${r}/${s}${i?"?"+i:""}`}_fetchService(e){return new Promise(((r,s)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new o("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new o("tile-layer:undefined-url","layer's url is not defined");const t=k(this.parsedUrl.path);if(a(t)&&"ImageServer"===t.serverType)throw new o("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");i(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,s)})).then((r=>{if(r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!A(this.url))return this._fetchServerVersion(this.url,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!D(e))return Promise.reject();const s=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return i(s,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new o("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r&&r[2]}_getDefaultAttribution(e){if(!e)return;let r;e=e.toLowerCase();for(let s=0,i=I.length;s<i;s++)if(r=I[s],r.toLowerCase().indexOf(e)>-1)return p("//static.arcgis.com/attribution/"+r)}_getDefaultTileServers(e){const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),s=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||s?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};n([l({readOnly:!0})],M.prototype,"attributionDataUrl",null),n([l({type:["show","hide","hide-children"]})],M.prototype,"listMode",void 0),n([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],M.prototype,"isReference",void 0),n([l({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],M.prototype,"operationalLayerType",void 0),n([l({type:Boolean})],M.prototype,"resampling",void 0),n([l()],M.prototype,"sourceJSON",void 0),n([l({type:r})],M.prototype,"spatialReference",void 0),n([c("spatialReference",["spatialReference","tileInfo"])],M.prototype,"readSpatialReference",null),n([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],M.prototype,"path",void 0),n([l({readOnly:!0})],M.prototype,"sublayers",void 0),n([m("sublayers",{layers:{type:[g]}})],M.prototype,"writeSublayers",null),n([l({json:{read:!1,write:!1}})],M.prototype,"popupEnabled",void 0),n([l()],M.prototype,"tileServers",null),n([d("tileServers")],M.prototype,"castTileServers",null),n([l({readOnly:!0,json:{read:!1}})],M.prototype,"type",void 0),n([l(O)],M.prototype,"url",void 0),M=n([f("esri.layers.TileLayer")],M),M.prototype.fetchTile.__isDefault__=!0;const G=M;export default G;