import{e,d as t,i as r,s as i}from"./p-e58503d5.js";import{g as s}from"./p-1ab449fc.js";import{l as o}from"./p-c7bf6b71.js";const n=n=>{let a=class extends n{initialize(){this.exportImageParameters=new o({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(e){const{layer:t}=this;if(!e)return Promise.reject(new i("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));const{popupEnabled:r}=t;if(!r)return Promise.reject(new i("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:r}));const s=this.createFetchPopupFeaturesQuery(e);if(!s)return Promise.resolve([]);const{extent:o,width:n,height:a,x:p,y:h}=s;if(!(o&&n&&a))throw new i("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:o,width:n,height:a});const u=t.fetchFeatureInfo(o,n,a,p,h);return Promise.resolve(u?[u]:[])}};return e([t()],a.prototype,"exportImageParameters",void 0),e([t({readOnly:!0})],a.prototype,"exportImageVersion",null),e([t()],a.prototype,"layer",void 0),e([t(s)],a.prototype,"timeExtent",void 0),a=e([r("esri.layers.mixins.WMSLayerView")],a),a};export{n as a}