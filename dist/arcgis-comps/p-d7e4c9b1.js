import{aW as t,dL as e,af as i,A as s,c as r,e as h,d as n,i as a,p as o,u,$ as l,ai as c,V as d,b as f,T as m,aN as p,aR as y,n as g,S as v,s as x,bo as F,k as b,a as w,D as E,bv as T,q as O,r as C,cP as D}from"./p-e58503d5.js";import{I as M,d as S}from"./p-340cd100.js";import{a as R}from"./p-e654504b.js";import{y as L}from"./p-da33e926.js";import{projectGeometry as N}from"./p-42bb6c1e.js";import{b as P,a as j,m as I}from"./p-5e833dfc.js";import{c as V,k as U,E as A,a as z,H as q,u as k,G,e as Q,h as _,m as B}from"./p-ea916a39.js";import{w as H,A as $,O as W,S as J}from"./p-3bcc4805.js";import"./p-2f398ed1.js";import{v as K}from"./p-b79fcce3.js";import"./p-a131049b.js";import{o as X}from"./p-e1b62a0c.js";import{m as Y}from"./p-7de54cd0.js";import{D as Z,f as tt}from"./p-ca295674.js";import{h as et}from"./p-54330161.js";import{a as it,E as st,L as rt,v as ht}from"./p-8bc9b36a.js";import{M as nt}from"./p-d2d87566.js";import{l as at}from"./p-7731c620.js";import{t as ot,u as ut}from"./p-cbbdb7db.js";import{v as lt,p as ct}from"./p-62b5bdb3.js";import{l as dt}from"./p-6f439939.js";class ft{constructor(t,e){this.highestResolutionVersion=null,this.versions=[],this.ref(t,e)}get isReferenced(){return 0!==this.versions.length}get isSingle(){return 1===this.versions.length&&1===this.versions[0].refCount}ref(t,e){const i=this.feature;pt.oldVersion=i,this.feature&&Object.defineProperty(t,"uid",{value:this.feature.uid,configurable:!0});for(const s of this.versions)if(s.resolution===e){s.refCount++;const e=this.highestResolutionVersion===s&&!X(t,s.feature);return(e||this.highestResolutionVersion!==s)&&(s.feature=t),pt.newVersion=e?t:i,pt}const s={feature:t,resolution:e,refCount:1};return this.versions.push(s),!this.highestResolutionVersion||e<this.highestResolutionVersion.resolution?(pt.newVersion=t,this.highestResolutionVersion=s):pt.newVersion=i,pt}unref(t){for(let e=0;e<this.versions.length;e++){const i=this.versions[e];if(i.resolution===t)return i.refCount--,pt.oldVersion=this.feature,0===i.refCount&&(this.versions[e]=this.versions[this.versions.length-1],this.versions.length--,this.highestResolutionVersion===i&&(this.recalculateHighestResolutionVersion(),pt.oldVersion=i.feature)),pt.newVersion=this.feature,pt}return null}get feature(){return this.highestResolutionVersion?this.highestResolutionVersion.feature:null}recalculateHighestResolutionVersion(){if(0===this.versions.length)return void(this.highestResolutionVersion=null);let t=this.versions[0];for(let e=1;e<this.versions.length;e++){const i=this.versions[e];i.resolution<t.resolution&&(t=i)}this.highestResolutionVersion=t}}class mt{constructor(t){this._feature=t,this.refCount=1}get isReferenced(){return 0!==this.refCount}get isSingle(){return 1===this.refCount}ref(t){return++this.refCount,pt.oldVersion=this._feature,this.feature&&Object.defineProperty(t,"uid",{value:this.feature.uid,configurable:!0}),X(this._feature,t)||(this._feature=t),pt.newVersion=this._feature,pt}unref(){return pt.oldVersion=this._feature,this.refCount>0&&(this.refCount--,!this.isReferenced)?(pt.newVersion=null,pt):(pt.newVersion=this._feature,pt)}get feature(){return this._feature}}const pt={oldVersion:null,newVersion:null},yt=new Set;class gt{constructor(t){this.descriptor=t,this.fetchStatus=0,this._features=null,this._numVertices=0,this._featureLimit=0,this.featuresMissing=!0,this._shuffled=!1,this._numFeatures=vt,this._emptyFeatureRatio=0,this._estimatedSize=-1,this._estimatedUnusedSize=0,this._estimatedUnusedSizeDirty=!1,this._availableFields=yt,this._displayingFeatures=null,this.alive=!0,this.filtered=!1}get displayingFeatures(){return this._displayingFeatures}set displayingFeatures(t){this._displayingFeatures=t,this.extentIncludingBorrowedFeatures=null}get perTileMaximumNumberOfFeaturesExceeded(){return!this.filtered&&(this.featuresMissing||this.features&&this.featureLimit!==this.features.length)}get features(){return this._features}get featureLimit(){return this._featureLimit}set featureLimit(t){this._featureLimit!==t&&(this._featureLimit=t,this._estimatedUnusedSizeDirty=!0)}get availableFields(){return this._availableFields}setFeatures(e,i,s){this._availableFields=t(s,yt),this._features=e,this._shuffled=!1,this._estimatedSize=-1,this._estimatedUnusedSizeDirty=!0,e&&e.length>0?(this._emptyFeatureRatio=i/(e.length+i),this._numVertices=e.reduce(((t,e)=>t+H(e.geometry)),0)):(this._emptyFeatureRatio=0,this._numVertices=0)}get emptyFeatureRatio(){return this._emptyFeatureRatio}get numFeatures(){return this.hasPreciseFeatureCount?this._numFeatures:this._features?this._features.length:0}set numFeatures(t){this._numFeatures=t}get hasPreciseFeatureCount(){return this._numFeatures>vt}get needsFeatureCount(){return this._numFeatures===vt}get numVertices(){return this._numVertices}get id(){return this.descriptor.id}get estimatedSize(){return this.updateMemoryEstimates(),this._estimatedSize}get estimatedUnusedSize(){return this._estimatedUnusedSize}updateMemoryEstimates(){if(this._estimatedSize<0){if(this._estimatedSize=0,this._estimatedUnusedSize=0,this._features)for(let t=0;t<this._features.length;++t){const e=$(this._features[t]);this._estimatedSize+=e,t>=this.featureLimit&&(this._estimatedUnusedSize+=e)}return!0}if(this._estimatedUnusedSizeDirty){if(this._estimatedUnusedSize=0,this._estimatedUnusedSizeDirty=!1,this._features)for(let t=this.featureLimit;t<this._features.length;++t)this._estimatedUnusedSize+=$(this._features[t]);return!0}return!1}get isFetching(){return 2===this.fetchStatus||3===this.fetchStatus}get isRefetching(){return 3===this.fetchStatus}get needsFetching(){return 0===this.fetchStatus||1===this.fetchStatus}get needsRefetching(){return 1===this.fetchStatus}get isFetched(){return 4===this.fetchStatus||5===this.fetchStatus}resetFetching(){this.fetchStatus=3===this.fetchStatus?1:0}get needsDisplayUpdate(){return!!this._features&&!function(t,e,s){if(i(e)||i(t)||s!==e.length||s>t.length)return!1;for(let i=0;i<s;++i)if(t[i]!==e[i])return!1;return!0}(this._features,this.displayingFeatures,this.featureLimit)}intersects(t){return!t||!this.descriptor.extent||(V(t,xt),U(this.descriptor.extent,xt))}intersectionIncludingBorrowed(t,e){const i=s(this.extentIncludingBorrowedFeatures)?this.extentIncludingBorrowedFeatures:this.descriptor.extent;return t||i?(t?(V(t,e),A(e,i,e)):z(e,i),e):(z(e,q),e)}_shuffle(t){this._features.sort(((e,i)=>W(e,t)-W(i,t))),e(this._features,16438),this._shuffled=!0,this._estimatedUnusedSizeDirty=!0}reduceFeatures(t,e,i){if(t<=0)return!1;if(!this._features)return this.featureLimit=0,!1;let s=!1;this.featureLimit=Math.ceil(this.numFeatures*t),this.featureLimit>this._features.length&&(this.featureLimit=this._features.length,4===this.fetchStatus&&this._features.length>0&&(this.fetchStatus=1,s=!0)),!this._shuffled&&t<1&&this._shuffle(i);const r=Math.max(this.featureLimit,Math.ceil(e*this.numFeatures));return this._features.length>r&&(this._features.length=r,this.featuresMissing=!0,5===this.fetchStatus&&(this.fetchStatus=4)),s}get cache(){return{availableFields:this._availableFields,features:this.features,numFeatures:this._numFeatures,emptyFeatureRatio:this._emptyFeatureRatio,fetchStatus:this.fetchStatus,featuresMissing:this.featuresMissing}}set cache(t){this.requestController=null,this._availableFields=t.availableFields,this._features=t.features,this._numFeatures=t.numFeatures,this._emptyFeatureRatio=t.emptyFeatureRatio,this.fetchStatus=t.fetchStatus,this.featuresMissing=t.featuresMissing,this._estimatedSize=-1,this._estimatedUnusedSizeDirty=!0}}const vt=-1,xt=k(),Ft=r.getLogger("esri.views.3d.layers.support.FeatureTileFetcher3D");let bt=class extends o{constructor(t){super(t),this._useTileCount=!1,this.updating=!1,this.updatingTotal=0,this.updatingRemaining=0,this.expectedFeatureDiff=0,this.maximumNumberOfFeaturesExceeded=!1,this.maximumNumberOfFeaturesExceededThrottle=1e3,this._fullRatio=1,this._farRatio=1,this.changes={updates:{adds:new Array,removes:new Array},adds:new Array,removes:new Array},this.handles=new u,this._frameTask=Z,this._dirty=!1,this.featureTiles=new Map,this.displayingFeatureReferences=new Map,this.numDisplayingFeatureReferences=0,this.suspended=!0,this.pendingEdits=null}set maximumNumberOfFeatures(t){t=t||1/0;const e=this._get("maximumNumberOfFeatures");t===e||t<1||(this._set("maximumNumberOfFeatures",t),this.maximumFeaturesUpdated(e,t))}set memoryFactor(t){this.memoryFactor!==t&&(this._set("memoryFactor",t),this.setDirty())}set lodFactor(t){this.lodFactor!==t&&(this._set("lodFactor",t),this.supportsResolution&&this.refetch())}get useTileCount(){return this._useTileCount&&s(this.context.query.queryFeatureCount)}set useTileCount(t){this._useTileCount=t,this.notifyChange("useTileCount")}get memoryForUnusedFeatures(){let t=0;return this.featureTiles.forEach((e=>t+=e.estimatedUnusedSize)),t}get totalVertices(){let t=0;return this.featureTiles.forEach((e=>t+=e.numVertices)),t}get totalFeatures(){let t=0;return this.featureTiles.forEach((e=>t+=e.numFeatures)),t}set filterExtent(t){if(t&&this.context.tilingScheme&&!t.spatialReference.equals(this.context.tilingScheme.spatialReference))return void Ft.error("#filterExtent=","extent needs to be in the same spatial reference as the tiling scheme");const e=this._get("filterExtent");if(e===t||e&&t&&e.equals(t))return;const i=t?t.clone():null;this._set("filterExtent",i),this.reclip(i,e)}initialize(){this.handles.add(l(this,"tileDescriptors","change",(()=>this.setDirty()),(()=>this.setDirty()))),this.objectIdField=this.context.objectIdField,this.FeatureReferenceClass=this.context.capabilities.supportsMultipleResolutions?ft:mt;const t=this.context.scheduler;s(t)&&(this._frameTask=t.registerTask(tt.FEATURE_TILE_FETCHER,this)),this.setDirty()}destroy(){this._frameTask.remove(),this.handles=c(this.handles),this.featureTiles.forEach((t=>{this.cancelFetchTile(t),this.removeTile(t)})),this.featureTiles.clear(),this.displayingFeatureReferences.clear(),this.pendingEdits&&(this.pendingEdits.controller.abort(),this.pendingEdits=null)}get paused(){return this.suspended||!!this.pendingEdits}restart(){this.featureTiles.forEach((t=>{this.cancelFetchTile(t),this.clearTile(t),this.resetFetchTile(t)})),s(this.context.memoryCache)&&this.context.memoryCache.clear(),this.setDirty()}refetch(){this.featureTiles.forEach((t=>{this.cancelFetchTile(t),this.resetFetchTile(t)})),s(this.context.memoryCache)&&this.context.memoryCache.clear(),this.setDirty()}suspend(){this.suspended||(this.suspended=!0,this.pause(),this.setDirty())}resume(){this.suspended&&(this.suspended=!1,this.unpause())}pause(){this.paused&&(this.featureTiles.forEach((t=>this.cancelFetchTile(t))),this.updated())}unpause(){this.paused||(this.setDirty(),this.updated())}get availableFields(){let t=null;return this.featureTiles.forEach((e=>{i(e.displayingFeatures)||0===e.displayingFeatures.length||(i(t)?t=new Set(e.availableFields):t.forEach((i=>{e.availableFields.has(i)||d(t).delete(i)})))})),s(t)?t:new Set}applyEdits(t){this.pendingEdits||(this.pendingEdits={edits:Promise.resolve(),count:0,controller:new AbortController},this.pause());const e=this.pendingEdits;e.count++;const i=e.edits.then((()=>t.result.catch((t=>{if(f(t))throw t;return null})).then((t=>t?(this.applyEditsDeleteFeatures(t.deletedFeatures),this.applyEditsAddUpdateFeatures(t.addedFeatures,t.updatedFeatures,e.controller.signal).then((()=>t))):t)).then((t=>(0==--e.count&&(this.pendingEdits===e&&(this.pendingEdits=null),s(this.context.memoryCache)&&this.context.memoryCache.clear(),this.unpause(),this.updated()),t)))));return e.edits=i,this.updated(),i}applyEditsDeleteFeatures(t){if(0===t.length)return;const e=this.context.globalIdField,i=e&&this.availableFields.has(e),s=new Set,r=this.objectIdField;t.forEach((({objectId:t,globalId:h})=>{if((!t||t<0)&&e){i||Ft.errorOncePerTick(`Editing the specified service requires the layer's globalIdField, ${e} to be included the layer's outFields for updates to be reflected in the view`);const t=this.features.find((t=>t.attributes&&t.attributes[e]===h));t&&s.add(W(t,r))}else s.add(t)})),this.featureTiles.forEach((t=>{if(!t.features)return;const e=t.features.filter((t=>!s.has(W(t,this.objectIdField))));e.length!==t.features.length&&(t.setFeatures(e,0,t.availableFields),this.invalidateCounts())}))}async applyEditsAddUpdateFeatures(t,e,i){const s=[],r=new Set;if(t.forEach((t=>s.push(t.objectId))),e.forEach((t=>{s.push(t.objectId),r.add(t.objectId)})),0===s.length)return;const h=[];this.featureTiles.forEach((t=>{const e=this.applyEditsAddUpdateTile(t,s,r,i);e&&h.push(e)})),await m(h)}async applyEditsAddUpdateTile(t,e,i,s){if(!t.features)return;const r=this.createQuery(t);r.resultType=void 0,r.cacheHint=!1,r.objectIds=e;const h=await this.queryFeatures(r,s);let n=null;if(i.size>0){const e=t.features.filter((t=>!i.has(W(t,this.objectIdField))));e.length!==t.features.length&&(n=e)}if(h.features.length>0){n||(n=t.features.slice());for(const t of h.features)n.push(t)}n&&(t.hasPreciseFeatureCount&&(t.numFeatures=Math.max(t.numFeatures,n.length)),t.setFeatures(n,0,Ct(t.availableFields,h.fields)),this.invalidateCounts())}queryFeatures(t,e){return this.context.query.queryFeaturesDehydrated(t,{signal:e,timeout:Rt})}setDirty(){this._dirty=!0,this.updated()}get running(){return this.updating}runTask(t){if(this._frameTask.processQueue(t),!this._dirty||!this.constructed)return;this._dirty=!1;const e=this.getListOfTiles();if(this.markTilesNotAlive(e),!t.run((()=>this.addTiles(e,t)))||!t.run((()=>this.filterExtentTiles(e,t)))||!t.run((()=>this.removeTiles(e,t)))||t.done)return void this.setDirty();const i=this.sortTiles(e);t.run((()=>this.displayTiles(i,t)))&&t.run((()=>this.fetchTiles(i,t)))&&t.run((()=>this.updateMemoryEstimates(i,t)))||this.setDirty(),this.updated(),this.updating||this.updateMaximumNumberOfFeaturesExceeded()}markTilesNotAlive(t){for(const e of t)e.alive=!1}addTiles(t,e){return!this.suspended&&(this.tileDescriptors.forEach((i=>{const s=this.featureTiles.get(i.id);s?s.alive=!0:e.done||(t.push(this.addTile(i)),e.madeProgress())})),e.hasProgressed)}filterExtentTiles(t,e){for(const i of t){if(e.done)break;i.alive&&(i.filtered=!i.intersects(this.filterExtent),i.filtered&&(this.clearTile(i),e.madeProgress()))}return e.hasProgressed}removeTiles(t,e){for(let i=t.length-1;i>=0&&!e.done;i--){const s=t[i];s.alive||(this.removeTile(s),i!==t.length-1&&(t[i]=t[t.length-1]),t.pop(),e.madeProgress())}return e.hasProgressed}sortTiles(t){return t.sort(((t,e)=>t.descriptor.loadPriority-e.descriptor.loadPriority)),t}displayTiles(t,e){const i=this.updateRatio(t),s=t=>{const e=this._fullRatio<1?i(t)*this._farRatio:1;return t.reduceFeatures(e,this.memoryFactor,this.objectIdField)&&this.setDirty(),this.showTile(t)};for(const i of t)if(!e.run((()=>s(i)))){this.setDirty();break}return e.hasProgressed}fetchTiles(t,e){if(this.paused)return!1;let i=!1;for(const r of t){if(!r.needsFetching)continue;const t=s(this.context.memoryCache)?this.context.memoryCache.pop(r.id):null;if(s(t))r.cache=t,this.setDirty(),this.scheduleUpdated(),e.madeProgress();else{if(this.needsNumFeatures(r)){const t=new AbortController,s=this.fetchTileCount(r,t.signal);this._handleRequest(r,s,t,(()=>r.numFeatures=-2)),i=!0,e.madeProgress()}if(e.done)return!0}}if(i)return e.hasProgressed;for(const i of t)if(i.needsFetching){const t=new AbortController,s=this.fetchTile(i,t.signal);if(this._handleRequest(i,s,t,(t=>{i.setFeatures([],0,null),this.invalidateCounts(),i.featuresMissing=!1,this.context.logFetchError(Ft,t)})),e.madeProgress(),e.done)return!0}return e.hasProgressed}updateMemoryEstimates(t,e){return t.some((t=>!e.run((()=>t.updateMemoryEstimates()))&&(this.setDirty(),!0))),e.hasProgressed}reclip(t,e){if(!this.constructed)return;const s=new Array;this.featureTiles.forEach((r=>{i(r.displayingFeatures)||0===r.displayingFeatures.length||(r.intersectionIncludingBorrowed(e,Mt),r.intersectionIncludingBorrowed(t,St),G(Mt,St)||s.push(r))})),this.refreshDisplayingFeatures(s),this.updated()}refreshDisplayingFeatures(t){const e=new Set,s=this.changes.updates;for(const r of t)if(!i(r.displayingFeatures))for(const t of r.displayingFeatures){const i=W(t,this.objectIdField);if(e.has(i))continue;e.add(i);const{feature:r}=this.displayingFeatureReferences.get(i);s.removes.push(r),s.adds.push(r)}this.applyChanges()}updated(){let t=0;this.paused||this.featureTiles.forEach((e=>e.isFetching?++t:0));const e=this._dirty||t>0||!!this.pendingEdits;if(this._set("updating",e),e){let e=0,i=0,r=0,h=0,n=0;const a=this.displayingFeatureReferences.size/this.numDisplayingFeatureReferences;this.featureTiles.forEach((t=>{if(++i,t.isFetching&&t.hasPreciseFeatureCount){const e=this.maximumFeaturesForTile(t)*(1-t.emptyFeatureRatio),i=s(t.displayingFeatures)?t.displayingFeatures.length*a:0;n+=e-i}t.needsFetching?++h:t.numFeatures>0&&(++r,e+=t.numFeatures)})),h+=t;let o=0,u=0;e?(u=e,o=Math.min(h*e/r,e)):(u=i,o=h),n=Math.min(this.maximumNumberOfFeatures-this.features.length,n),this._set("updatingTotal",u),this._set("updatingRemaining",o),this._set("expectedFeatureDiff",n)}else this._set("updatingTotal",0),this._set("updatingRemaining",0),this._set("expectedFeatureDiff",0);this.debugger&&this.debugger.update()}updateMaximumNumberOfFeaturesExceeded(){const t=p(this.featureTiles,(t=>t.perTileMaximumNumberOfFeaturesExceeded));this._set("maximumNumberOfFeaturesExceeded",t)}updateRatio(t){const e=function(t){let e=0;for(const i of t)i.features&&i.features.length>0&&i.alive&&(e=Math.max(e,i.descriptor.lij[0]));return e}(t),i=t=>1/(1<<Math.max(0,e-t.descriptor.lij[0]));let s=0,r=0;for(const e of t){const t=e.numFeatures;s+=t,r+=t*i(e)}return this._fullRatio=Math.min(1,this.maximumNumberOfFeatures/s),this._farRatio=this.maximumNumberOfFeatures/r,this.scheduleUpdated(),i}maximumFeaturesUpdated(t,e){t!==e&&(e>t&&this.featureTiles.forEach((t=>{if(!t.featuresMissing)return;const e=this.maximumFeaturesForTile(t);t.features&&(t.features.length>=e||5===t.fetchStatus)||(this.cancelFetchTile(t),this.resetFetchTile(t))})),this.setDirty())}addTile(t){const e=new gt(t);return this.featureTiles.set(e.id,e),this.resetFetchTile(e),this.referenceDisplayingFeaturesFromRelatedTiles(e),e}referenceDisplayingFeaturesFromRelatedTiles(t){const e=t.descriptor.resolution;this.featureTiles.forEach((s=>{if(!(i(s.displayingFeatures)||t===s||t.descriptor.lij&&s.descriptor.lij&&!Y(t.descriptor.lij,s.descriptor.lij))){i(t.displayingFeatures)&&(t.displayingFeatures=[]),t.descriptor.extent&&s.descriptor.extent&&(i(t.extentIncludingBorrowedFeatures)&&(t.extentIncludingBorrowedFeatures=Q(t.descriptor.extent)),_(t.extentIncludingBorrowedFeatures,s.descriptor.extent,t.extentIncludingBorrowedFeatures));for(const i of s.displayingFeatures){t.displayingFeatures.push(i);const s=this.displayingFeatureReferences.get(W(i,this.objectIdField));s.ref(s.feature,e),this.numDisplayingFeatureReferences++}}})),t.featureLimit=s(t.displayingFeatures)?t.displayingFeatures.length:0}removeTile(t){this.clearTile(t),this.featureTiles.delete(t.id)}resetFetchTile(t){t.filtered=!t.intersects(this.filterExtent),t.filtered?t.needsFetching&&(t.fetchStatus=4):t.fetchStatus=0}cancelFetchTile(t){const e=t.requestController;s(e)&&(t.requestController=null,t.resetFetching(),e.abort())}async fetchTileCount(t,e){return t.numFeatures=await this.fetchCount(t,e),this.updateRatio(this.getListOfTiles()),3===t.fetchStatus?1:0}async fetchTile(t,e){const i=this.maximumFeaturesForTile(t);if(i<=0)return function(t){return t.setFeatures([],0,null),t.featuresMissing=!1,4}(t);const s=this.getMaxRecordCount(t),r=Math.ceil(i/s);if(wt(t)||!this.context.capabilities.supportsMaxRecordCountFactor||t.numFeatures<=i&&r>P.MAX_MAX_RECORD_COUNT_FACTOR)return this.fetchPagedTile(t,e);const h=this.createQuery(t);if(h.maxRecordCountFactor=Math.ceil(i/s),t.isRefetching&&t.features&&t.features.length>0){const e=Math.ceil(t.features.length/(1-t.emptyFeatureRatio)/s);h.maxRecordCountFactor=Math.max(e+1,h.maxRecordCountFactor)}const{features:n,exceededTransferLimit:a,fields:o}=await this.queryFeatures(h,e),u=a?h.maxRecordCountFactor>=P.MAX_MAX_RECORD_COUNT_FACTOR?5:4:5;return await this._frameTask.schedule((()=>{t.featuresMissing=n.length<t.numFeatures||a;const e=this._removeEmptyFeatures(n);t.setFeatures(n,e,Ot(o))}),e),this.invalidateCounts(),u}async fetchCount(t,e){return this.context.query.queryFeatureCount(this.createFeatureCountQuery(t),{signal:e})}async fetchPagedTile(t,e){let i,s=0,r=0,h=0,n=this.maximumFeaturesForTile(t)-h;const a=this.getMaxRecordCount(t);let o=null;for(;;){const u=this.createQuery(t),l=this.setPagingParameters(u,s,n,a),{features:c,exceededTransferLimit:f,fields:m}=await this.queryFeatures(u,e);if(await this._frameTask.schedule((()=>{l&&(s+=d(u.num)),h+=c.length,r+=this._removeEmptyFeatures(c),t.featuresMissing=s<t.numFeatures||f,i=i?i.concat(c):c,o=Ct(o,m),t.setFeatures(i,r,o)}),e),this.invalidateCounts(),this.setDirty(),n=this.maximumFeaturesForTile(t)-h,!l||!f||n<=0)return f?4:5}}createFeatureCountQuery(t){const e=this.createQuery(t);return this.context.capabilities.supportsCacheHint&&(e.resultType=void 0,e.cacheHint=!0),e}createQuery(t){const e=this.context.createQuery(),i=t.descriptor.extent;return i&&(e.geometry=B(i,this.context.tilingScheme.spatialReference)),this.setResolutionParams(e,t),this.useTileQuery(t)?e.resultType="tile":this.context.capabilities.supportsCacheHint&&(e.cacheHint=!0),e}setPagingParameters(t,e,i,s){return!!this.context.capabilities.supportsPagination&&(t.start=e,i>0&&this.context.capabilities.supportsMaxRecordCountFactor?(t.maxRecordCountFactor=Math.ceil(i/s),t.num=Math.min(t.maxRecordCountFactor*s,i)):t.num=Math.min(s),!0)}getEffectiveTileResolution(t){if(null==t.descriptor.resolution)return null;const e=1===this.context.viewingMode?this.context.tilingScheme.resolutionAtLevel(3):1/0;return Math.min(t.descriptor.resolution,e)/this.lodFactor}get supportsResolution(){return this.context.capabilities.supportsMultipleResolutions&&"point"!==this.context.geometryType}setResolutionParams(t,e){if(!this.supportsResolution)return;const i=this.getEffectiveTileResolution(e);null!=i&&(this.context.capabilities.supportsQuantization?t.quantizationParameters=new j({mode:"view",originPosition:"upper-left",tolerance:i,extent:this.context.fullExtent}):"polyline"===this.context.geometryType&&(t.maxAllowableOffset=i))}_removeEmptyFeatures(t){const e=t.length;for(let e=0;e<t.length;)J(t[e].geometry)?++e:(t[e]=t[t.length-1],--t.length);return e-t.length}needsNumFeatures(t){return this.useTileCount&&t.needsFeatureCount&&!wt(t)}getMaxRecordCount(t){const{tileMaxRecordCount:e,maxRecordCount:i}=this.context;return this.useTileQuery(t)&&s(e)&&e>0&&this.context.capabilities.supportsResultType?e:s(i)&&i>0?i:Dt}useTileQuery(t){return(!wt(t)||!this.context.capabilities.supportsCacheHint)&&this.context.capabilities.supportsResultType}_handleRequest(t,e,i,s){t.fetchStatus=t.needsRefetching?3:2,t.requestController=i;let r=!1;e.then((e=>{t.requestController=null,t.fetchStatus=e})).catch((e=>{t.requestController===i&&(t.requestController=null,t.fetchStatus=4),f(e)?r=!0:s(e)})).then((()=>{r||this.setDirty(),this.scheduleUpdated()}))}scheduleUpdated(){this.handles&&!this.handles.has("scheduleUpdated")&&this.handles.add(y((()=>{this.handles.remove("scheduleUpdated"),this.updated()})),"scheduleUpdated")}showTile(t){if(s(t.displayingFeatures)&&!t.needsDisplayUpdate)return!1;const e=t.features;if(0===t.featureLimit||!e){const e=s(t.displayingFeatures)&&t.displayingFeatures.length>0;return this.hideTileFeatures(t),t.displayingFeatures=[],e}const i=t.descriptor.resolution,r=this.changes.updates,h=this.changes.adds,n=Math.min(t.featureLimit,e.length);t.featureLimit=n;for(let t=0;t<n;++t){const s=e[t],n=W(s,this.objectIdField),a=this.displayingFeatureReferences.get(n);if(a){const t=a.ref(s,i);t.oldVersion!==t.newVersion&&(r.removes.push(t.oldVersion),r.adds.push(t.newVersion))}else this.displayingFeatureReferences.set(n,new this.FeatureReferenceClass(s,i)),h.push(s);this.numDisplayingFeatureReferences++}return this.hideTileFeatures(t),this.applyChanges(),t.displayingFeatures=e.slice(0,n),!0}hideTile(t){this.cancelFetchTile(t),this.hideTileFeatures(t)}hideTileFeatures(t){if(i(t.displayingFeatures))return;const e=this.changes.updates,s=this.changes.removes;for(const i of t.displayingFeatures){const r=W(i,this.objectIdField),h=this.displayingFeatureReferences.get(r);if(!h)continue;const n=h.unref(t.descriptor.resolution);this.numDisplayingFeatureReferences--,n?n.oldVersion!==n.newVersion&&(null==n.newVersion?(this.displayingFeatureReferences.delete(r),s.push(n.oldVersion)):(e.adds.push(n.newVersion),e.removes.push(n.oldVersion))):console.error("Hiding unreferenced feature")}this.applyChanges(),t.displayingFeatures=null}applyChanges(){const t=this.changes.updates;t.removes.length>0&&(this.features.removeMany(t.removes),t.removes.length=0),t.adds.length>0&&(this.features.addMany(t.adds),t.adds.length=0);const e=this.changes.adds,i=this.changes.removes,s=Math.min(e.length,i.length);let r=0;for(;r<s;){const t=Math.min(r+Lt,s);this.features.addMany(e.slice(r,t)),this.features.removeMany(i.slice(r,t)),r=t}e.length>s&&this.features.addMany(0===r?e:e.slice(r)),i.length>s&&this.features.removeMany(0===r?i:i.slice(r)),e.length=0,i.length=0}clearTile(t){this.hideTile(t),t.features&&s(this.context.memoryCache)&&this.context.memoryCache.put(t.id,t.cache,16+t.estimatedSize),t.setFeatures(null,0,null),this.invalidateCounts()}invalidateCounts(){this.notifyChange("totalVertices"),this.notifyChange("totalFeatures"),this.notifyChange("memoryForUnusedFeatures")}getListOfTiles(){return Array.from(this.featureTiles.values())}get storedFeatures(){return this.getListOfTiles().reduce(((t,e)=>t+(e.features?e.features.length:0)),0)}maximumFeaturesForTile(t){const e=t.hasPreciseFeatureCount?t.numFeatures:1/0;return Math.min(Math.ceil((t.hasPreciseFeatureCount?e:this.maximumNumberOfFeatures)*(this._fullRatio<1?this._farRatio:1)/(1-t.emptyFeatureRatio)),e)}get test(){return{process:t=>this.runTask(t),getFeatureTileById:t=>this.featureTiles.get(t),forEachFeatureTile:t=>this.featureTiles.forEach(t)}}};function wt(t){return"dummy-tile-full-extent"===t.id}function Et(t){const e=t.capabilities.query;return{supportsMultipleResolutions:Tt(t),supportsPagination:!(!e||!e.supportsPagination),supportsResultType:!(!e||!e.supportsResultType),supportsCacheHint:!(!e||!e.supportsCacheHint),supportsQuantization:!(!e||!e.supportsQuantization),supportsQuantizationEditMode:!(!e||!e.supportsQuantizationEditMode),supportsMaxRecordCountFactor:!(!e||!e.supportsMaxRecordCountFactor),supportsFormatPBF:!(!e||!e.supportsFormatPBF)}}function Tt(t){switch(t.geometryType){case"polyline":return!0;case"polygon":return t.capabilities&&t.capabilities.query&&t.capabilities.query.supportsQuantization;default:return!1}}function Ot(t){return i(t)?new Set:new Set(t.map((t=>t.name)))}function Ct(t,e){if(i(t)||i(e))return Ot(e);const s=new Set;for(const{name:i}of e)t.has(i)&&s.add(i);return s}h([n({constructOnly:!0})],bt.prototype,"features",void 0),h([n()],bt.prototype,"tileDescriptors",void 0),h([n({value:1/0})],bt.prototype,"maximumNumberOfFeatures",null),h([n({value:1})],bt.prototype,"memoryFactor",null),h([n({value:1})],bt.prototype,"lodFactor",null),h([n()],bt.prototype,"useTileCount",null),h([n({readOnly:!0})],bt.prototype,"updating",void 0),h([n({readOnly:!0})],bt.prototype,"updatingTotal",void 0),h([n({readOnly:!0})],bt.prototype,"updatingRemaining",void 0),h([n({readOnly:!0})],bt.prototype,"expectedFeatureDiff",void 0),h([n({readOnly:!0})],bt.prototype,"memoryForUnusedFeatures",null),h([n({readOnly:!0})],bt.prototype,"maximumNumberOfFeaturesExceeded",void 0),h([n({constructOnly:!0})],bt.prototype,"maximumNumberOfFeaturesExceededThrottle",void 0),h([n({readOnly:!0})],bt.prototype,"totalVertices",null),h([n({readOnly:!0})],bt.prototype,"totalFeatures",null),h([n()],bt.prototype,"filterExtent",null),h([n({constructOnly:!0})],bt.prototype,"context",void 0),bt=h([a("esri.views.3d.layers.support.FeatureTileFetcher3D")],bt);const Dt=2e3,Mt=k(),St=k(),Rt=6e5,Lt=200,Nt=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];class Pt{constructor(t,e,i){this.loadingGraphics=new Map,this.loadedGraphics=new Map,this.pendingGraphics=new Map,this._enabled=!0,this.tileFetcher=t,this.view=i,this.tilingScheme=new nt(e),this.loadedSymbols=Nt.map((t=>new it(new st({material:{color:[t[0],t[1],t[2],.6]},outline:{color:"black",size:1}})))),this.loadingSymbols=[new it(new st({material:{color:[200,200,200,.4]},outline:{color:[30,30,30],size:1}}))],this.pendingSymbols=[new it(new st({material:{color:[100,100,100,.4]},outline:{color:[30,30,30],size:1}}))],this.dataExtentSymbol=new it(new st({material:{color:[0,0,0,0]},outline:{color:"green",size:4}}))}destroy(){this.enabled=!1}get enabled(){return this._enabled}set enabled(t){this._enabled=t,this.update()}update(){this._enabled?(this.synchronizeMaps(this.loadingGraphics,{filter:t=>t.isFetching,symbols:this.loadingSymbols}),this.synchronizeMaps(this.loadedGraphics,{filter:t=>!t.isFetching,symbols:this.loadedSymbols}),this.synchronizeMaps(this.pendingGraphics,{filter:t=>!t.isFetching,symbols:this.pendingSymbols}),this.showDataExtent(this.tileFetcher.filterExtent)):(this.loadingGraphics.forEach((t=>{this.view.graphics.removeMany(t)})),this.loadingGraphics.clear(),this.loadedGraphics.forEach((t=>{this.view.graphics.removeMany(t)})),this.loadedGraphics.clear(),this.pendingGraphics.forEach((t=>{this.view.graphics.removeMany(t)})),this.pendingGraphics.clear(),this.dataExtentGraphic&&(this.view.graphics.remove(this.dataExtentGraphic),this.dataExtentGraphic=null))}showDataExtent(t){if(this.dataExtentGraphic&&(this.view.graphics.remove(this.dataExtentGraphic),this.dataExtentGraphic=null),!t)return;const e=K.fromExtent(t);this.dataExtentGraphic=new et({geometry:e,symbol:this.dataExtentSymbol}),this.view.graphics.add(this.dataExtentGraphic)}synchronizeMaps(t,e){const i=[];t.forEach(((t,s)=>{const r=this.tileFetcher.test.getFeatureTileById(s);r&&e.filter(r)||(this.view.graphics.removeMany(t),i.push(s))})),i.forEach((e=>t.delete(e))),this.tileFetcher.test.forEachFeatureTile((i=>{if(e.filter(i)&&!t.has(i.id)){const[s,r,h]=i.descriptor.lij;this.tilingScheme.ensureMaxLod(s);const n=this.tilingScheme.getExtentGeometry(s,r,h),a=[new et({geometry:n,symbol:e.symbols[s%e.symbols.length]}),new et({geometry:n.center,symbol:new rt({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new ht({text:`${s}/${r}/${h}`,halo:{color:"white",size:1/.75},material:{color:"black"},size:16})]})})];t.set(i.id,a),this.view.graphics.addMany(a)}}))}}const jt=r.getLogger("esri.layers.graphics.controllers.FeatureTileController3D");let It=class extends(g(o)){constructor(t){super(t),this.type="feature-tile-3d",this.watchUpdatingTracking=new at,this.serviceDataExtent=null,this.serviceDataCount=At.NO_SERVICE_DATA_COUNT,this.vertexLimitExceeded=!1,this.displayFeatureLimit=null,this.suspended=!1,this.tileFetcher=null,this.handles=new u,this.fetchDataInfoPromise=null,this.fetchDataInfoAbortController=null,this.lifeCycleAbortController=new AbortController}set extent(t){if(t&&!t.spatialReference.equals(this.layerView.view.spatialReference))return void jt.error("#extent=","extent needs to be in the same spatial reference as the view");const e=this._get("extent");if(e===t)return;if(e&&t&&e.equals(t))return;const i=t?t.clone():null;this._set("extent",i)}get updating(){return!!(s(this.tileFetcher)&&this.tileFetcher.updating||null!=this.fetchDataInfoPromise||"tiles"===this.mode&&this.layerView.view.featureTiles&&this.layerView.view.featureTiles.updating||this.watchUpdatingTracking&&this.watchUpdatingTracking.updating)}get updatingTotal(){return this.updating&&s(this.tileFetcher)?this.tileFetcher.updatingTotal:0}get updatingRemaining(){return this.updating&&s(this.tileFetcher)?this.tileFetcher.updatingRemaining:0}get expectedFeatureDiff(){return this.updating&&s(this.tileFetcher)?this.tileFetcher.expectedFeatureDiff:0}get memoryForUnusedFeatures(){return s(this.tileFetcher)?this.tileFetcher.memoryForUnusedFeatures:0}get maximumNumberOfFeaturesExceeded(){return!(!s(this.tileFetcher)||!this.tileFetcher.maximumNumberOfFeaturesExceeded)}get maximumNumberOfFeatures(){return s(this.displayFeatureLimit)?this.displayFeatureLimit.maximumNumberOfFeatures:0}set maximumNumberOfFeatures(t){t!==this.maximumNumberOfFeatures&&(null==t?this._clearOverride("maximumNumberOfFeatures"):this._override("maximumNumberOfFeatures",t))}get hasMaximumNumberOfFeaturesOverride(){return this._isOverridden("maximumNumberOfFeatures")}get mode(){var t,e;const i=this.layerView.layer;if("feature"===i.type&&s(i.infoFor3D))return"snapshot";if(!1===(null==(t=this.layerView.view.qualitySettings)||null==(e=t.graphics3D)?void 0:e.snapshotAvailable)||this.serviceDataCount===At.NO_SERVICE_DATA_COUNT||this.vertexLimitExceeded)return"tiles";const r=this.layerView.view,h=r&&r.featureTiles,n=h&&h.tilingScheme;if(i&&i.minScale&&this.serviceDataExtent&&n){const t=this.approximateExtentSizeAtScale(i.minScale,n);if((this.serviceDataExtent.width/t+this.serviceDataExtent.height/t)/2>At.MAX_SNAPSHOT_MIN_SCALE_FACTOR)return"tiles"}return!this.maximumNumberOfFeatures||this.serviceDataCount<=this.maximumNumberOfFeatures?"snapshot":"tiles"}get maxTotalSnapshotVertices(){const t=this._get("maxTotalSnapshotVertices")||0,e="snapshot"===this.mode&&s(this.tileFetcher)&&this.tileFetcher.totalVertices||0;return Math.max(t,e)}approximateExtentSizeAtScale(t,e){const i=this.layerView.view,s=Math.ceil((i.width/e.pixelSize+i.height/e.pixelSize)/2),r=e.levels[0];return s*((r.tileSize[0]/(r.scale/t)+r.tileSize[1]/(r.scale/t))/2)}get tileDescriptors(){return"snapshot"===this.mode?new v([{id:"dummy-tile-full-extent",lij:[0,0,0]}]):this.layerView.view.featureTiles?this.layerView.view.featureTiles.tiles:new v}get test(){return{fetchDataInfoPromise:this.fetchDataInfoPromise,tileFetcher:this.tileFetcher}}initialize(){this.watchUpdatingTracking.add(this,"vertexLimitInfo",(()=>this.watchUpdatingTracking.addPromise(this.updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal)))),this.watchUpdatingTracking.add(this,"mode",(()=>this.modeChanged()),2),this.addResolvingPromise(Promise.resolve().then((()=>this.verifyCapabilities())).then((()=>this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo()))).then((()=>this.initializeTileFetcher())))}verifyCapabilities(){const t=this.layerView.layer;if(!t.get("capabilities.operations.supportsQuery")&&"ogc-feature"!==t.type)throw new x("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",{layer:t})}destroy(){this.cancelFetchServiceDataInfo(),this.tileFetcher=c(this.tileFetcher),this.handles=c(this.handles),this.tilesHandle=F(this.tilesHandle),this.lifeCycleAbortController&&(this.lifeCycleAbortController.abort(),this.lifeCycleAbortController=null),this.watchUpdatingTracking.destroy(),this._set("watchUpdatingTracking",null)}suspend(){this.suspended||(this.suspended=!0,s(this.tileFetcher)&&this.tileFetcher.suspend())}resume(){this.suspended&&(this.suspended=!1,s(this.tileFetcher)&&this.tileFetcher.resume())}restart(){const t=()=>{s(this.tileFetcher)&&this.tileFetcher.restart()};this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo().then(t,t))}refetch(){const t=()=>{s(this.tileFetcher)&&this.tileFetcher.refetch()};this.watchUpdatingTracking.addPromise(this.fetchServiceDataInfo().then(t,t))}initializeTileFetcher(){const t=this.layerView.view;if(!t)return;const e=b(t.featureTiles,"tilingScheme",this.lifeCycleAbortController.signal);this.watchUpdatingTracking.addPromise(e),e.then((()=>{const{layerView:e,tileDescriptors:i}=this,s=e.layer,r=new bt({context:this.context,filterExtent:this.extent,tileDescriptors:i,features:this.graphics});this.tileFetcher=r,this.suspended?this.tileFetcher.suspend():this.tileFetcher.resume();const h=this.layerView.view.resourceController;h&&(this.handles.add(h.memoryController.events.on("quality-changed",(t=>{r.memoryFactor=t}))),this.tileFetcher.memoryFactor=h.memoryController.memoryFactor);const n="polygon"===this.context.geometryType?"polygonLodFactor":"polyline"===this.context.geometryType?"polylineLodFactor":null;n&&this.handles.add(w(this.layerView.view,"qualitySettings.graphics3D."+n,(t=>{r.lodFactor=t||1}))),this.watchUpdatingTracking.add(s,"createQueryVersion",(()=>this.dataFilterChanged())),this.watchUpdatingTracking.add(e,"availableFields",((t,e)=>this.availableFieldsChanged(e,t))),this.watchUpdatingTracking.add(e,"requiredFields",((t,e)=>this.requiredFieldsChanged(e,t))),this.handles.add([s.on("apply-edits",(t=>this.applyEdits(t))),this.watch("extent",(t=>r.filterExtent=t),!0),this.watch("tileDescriptors",(t=>r.tileDescriptors=t),!0),w(this,"maximumNumberOfFeatures",(t=>{r.maximumNumberOfFeatures=t,r.useTileCount=this.serviceDataCount>t}),!0),w(this,"serviceDataCount",(t=>r.useTileCount=t>this.maximumNumberOfFeatures),!0),w(M,"FEATURE_TILE_FETCH_SHOW_TILES",(e=>{e&&r&&!r.debugger?(r.debugger=new Pt(r,t.featureTiles.tilingScheme.toTileInfo(),t),r.debugger.update()):!e&&this.tileFetcher&&r.debugger&&(r.debugger.destroy(),r.debugger=null)}))]),this.supportsExceedsLimitQuery||this.watchUpdatingTracking.add(this,"maxTotalSnapshotVertices",(()=>this.watchUpdatingTracking.addPromise(this.updateVertexLimitExceeded(null,this.lifeCycleAbortController.signal))))})).catch((()=>{}))}modeChanged(){switch(this.mode){case"tiles":this.tilesHandle||(this.tilesHandle=this.layerView.view.featureTiles.addClient());break;default:jt.warn("Unhandled feature layer mode "+this.mode);case"snapshot":s(this.tilesHandle)&&(this.tilesHandle.remove(),this.tilesHandle=null)}}dataFilterChanged(){this._set("maxTotalSnapshotVertices",0),this.notifyChange("maxTotalSnapshotVertices"),this.refetch()}applyEdits(t){i(this.tileFetcher)||this.tileFetcher.applyEdits(t).then((t=>{t&&(t.deletedFeatures.length||t.updatedFeatures.length||t.addedFeatures.length)&&this.watchUpdatingTracking.addPromise(this.updateServiceDataExtent(this.lifeCycleAbortController.signal))})).catch((t=>{if(!f(t))throw t}))}availableFieldsChanged(t,e){s(this.tileFetcher)&&Ut(this.tileFetcher.availableFields,e)&&this.refetch()}requiredFieldsChanged(t,e){s(this.tileFetcher)&&Ut(this.tileFetcher.availableFields,e)&&this.restart()}createVertexLimitExceededQuery(t){const e=this.layerView.layer,i=e.createQuery();return i.outStatistics=[new I({statisticType:"exceedslimit",maxVertexCount:t,outStatisticFieldName:"exceedslimit",maxPointCount:1e8,maxRecordCount:1e8})],e.capabilities.query.supportsCacheHint&&(i.cacheHint=!0),i}createDataInfoQuery(){const t=this.layerView.layer,e=t.createQuery();return e.outSpatialReference=this.layerView.view.spatialReference,t.capabilities.query.supportsCacheHint&&(e.cacheHint=!0),e}fullExtentIsAccurate(){const t=this.layerView.layer;if(t.definitionExpression)return!1;switch(t.type){case"feature":return L(t.url);case"csv":case"geojson":case"ogc-feature":case"wfs":return!0;default:return}}async updateServiceDataExtent(t){try{await this.tryUpdateServiceDataExtent(t)}catch(t){f(t)||this._set("serviceDataExtent",E(this.layerView.fullExtentInLocalViewSpatialReference))}}async tryUpdateServiceDataExtent(t){const e=this.layerView,i=e.layer,r=i.capabilities.query.supportsExtent,h=E(e.fullExtentInLocalViewSpatialReference),n=i.fullExtent,a=this.fullExtentIsAccurate();if(r&&this.serviceDataCount<=At.MAX_FEATURE_COUNT_FOR_EXTENT&&(!h||!a)&&"queryExtent"in i){const e=this.createDataInfoQuery(),s=await i.queryExtent(e,{timeout:At.QUERY_EXTENT_TIMEOUT,signal:t});this._set("serviceDataExtent",s.extent)}else if(h)this._set("serviceDataExtent",h);else if(s(n)){const s="portalItem"in i?i.portalItem:null,r=await N(n,e.view.spatialReference,s,t);this._set("serviceDataExtent",r)}else this._set("serviceDataExtent",null)}async updateServiceDataCount(t){const e=this.layerView.layer;if(!("queryFeatureCount"in e))return void this._set("serviceDataCount",At.NO_SERVICE_DATA_COUNT);const i=await R(e.queryFeatureCount(this.createDataInfoQuery(),{timeout:At.QUERY_STATISTICS_TIMEOUT,signal:t}));if(!0===i.ok)this._set("serviceDataCount",i.value);else{if(f(i.error))throw i.error;this._set("serviceDataCount",At.NO_SERVICE_DATA_COUNT)}}get vertexLimitInfo(){if(i(this.displayFeatureLimit)||i(this.displayFeatureLimit.averageSymbolComplexity))return null;const{averageSymbolComplexity:t,maximumTotalNumberOfPrimitives:e}=this.displayFeatureLimit,{primitivesPerCoordinate:s,primitivesPerFeature:r}=t,h=this._get("vertexLimitInfo");return i(h)||h.maximumTotalNumberOfPrimitives!==e||h.primitivesPerCoordinate!==s||h.primitivesPerFeature!==r?{primitivesPerCoordinate:s,primitivesPerFeature:r,maximumTotalNumberOfPrimitives:e}:h}get supportsExceedsLimitQuery(){const t=this.layerView.layer;return t.capabilities&&t.capabilities.operations&&t.capabilities.operations.supportsExceedsLimitStatistics}get minimumNumberOfVerticesForGeometry(){switch(this.layerView.layer.geometryType){case"point":case"multipoint":return 1;case"polygon":return 4;case"polyline":return 2;case"multipatch":case"mesh":return 3;default:return 0}}async updateVertexLimitExceeded(t,e){const r=this.vertexLimitInfo;if(i(r))return void this._set("vertexLimitExceeded",!1);const h=this.minimumNumberOfVerticesForGeometry>1;if(!(r.primitivesPerFeature<=0||h))return void this._set("vertexLimitExceeded",!1);const{primitivesPerFeature:n,primitivesPerCoordinate:a,maximumTotalNumberOfPrimitives:o}=r;let u;0!==n&&s(t)&&await t;const l=this.serviceDataCount,c=l!==At.NO_SERVICE_DATA_COUNT;if(u=c?Math.ceil((o-l*n)/(a||1)):Math.ceil(o/(a||1)),h&&(u=Math.min(u,Vt)),c&&this.minimumNumberOfVerticesForGeometry*l>u)return void this._set("vertexLimitExceeded",!0);if(!this.supportsExceedsLimitQuery)return void this._set("vertexLimitExceeded",this.maxTotalSnapshotVertices>u);const d=await R(this.layerView.layer.queryFeatures(this.createVertexLimitExceededQuery(u),{timeout:At.QUERY_STATISTICS_TIMEOUT,signal:e}));if(!1===d.ok){if(f(d.error))throw d.error;return void this._set("vertexLimitExceeded",!1)}const m=d.value.features[0];this._set("vertexLimitExceeded",!(!m||!m.attributes||!m.attributes.exceedslimit))}async fetchServiceDataInfo(){this.cancelFetchServiceDataInfo();let t=new AbortController;const e=t.signal,i=this.updateServiceDataCount(e),s=m([i,this.updateVertexLimitExceeded(i,e)]),r=s.then((()=>this.updateServiceDataExtent(e))).catch((t=>{f(t)||jt.error("#fetchServiceDataInfo()",t)})).then((()=>{r===this.fetchDataInfoPromise&&(this.fetchDataInfoPromise=null,this.fetchDataInfoAbortController=null),t=null}));return t&&(this.fetchDataInfoPromise=r),this.fetchDataInfoAbortController=t,s.then((()=>{}),(()=>{}))}cancelFetchServiceDataInfo(){const t=this.fetchDataInfoAbortController;t&&(this.fetchDataInfoAbortController=null,this.fetchDataInfoPromise=null,t.abort())}get debug(){return{storedFeatures:s(this.tileFetcher)?this.tileFetcher.storedFeatures:0,totalFeatures:s(this.tileFetcher)?this.tileFetcher.totalFeatures:0,totalVertices:s(this.tileFetcher)?this.tileFetcher.totalVertices:0}}};h([n({readOnly:!0})],It.prototype,"type",void 0),h([n({constructOnly:!0})],It.prototype,"graphics",void 0),h([n({constructOnly:!0})],It.prototype,"layerView",void 0),h([n({constructOnly:!0})],It.prototype,"context",void 0),h([n()],It.prototype,"extent",null),h([n()],It.prototype,"updating",null),h([n({readOnly:!0})],It.prototype,"watchUpdatingTracking",void 0),h([n()],It.prototype,"updatingTotal",null),h([n()],It.prototype,"updatingRemaining",null),h([n()],It.prototype,"expectedFeatureDiff",null),h([n()],It.prototype,"memoryForUnusedFeatures",null),h([n()],It.prototype,"maximumNumberOfFeaturesExceeded",null),h([n({readOnly:!0})],It.prototype,"serviceDataExtent",void 0),h([n({readOnly:!0})],It.prototype,"serviceDataCount",void 0),h([n({readOnly:!0})],It.prototype,"vertexLimitExceeded",void 0),h([n()],It.prototype,"displayFeatureLimit",void 0),h([n({type:Number})],It.prototype,"maximumNumberOfFeatures",null),h([n({readOnly:!0})],It.prototype,"mode",null),h([n({readOnly:!0})],It.prototype,"maxTotalSnapshotVertices",null),h([n({readOnly:!0,dependsOn:["mode"]})],It.prototype,"tileDescriptors",null),h([n()],It.prototype,"tileFetcher",void 0),h([n()],It.prototype,"fetchDataInfoPromise",void 0),h([n({readOnly:!0})],It.prototype,"vertexLimitInfo",null),It=h([a("esri.layers.graphics.controllers.FeatureTileController3D")],It);const Vt=5e6;function Ut(t,e){if(!e)return!1;for(const i of e)if(!t.has(i))return!0;return!1}var At;!function(t){t.NO_SERVICE_DATA_COUNT=1/0,t.MAX_SNAPSHOT_MIN_SCALE_FACTOR=5,t.reset=function(){t.MAX_FEATURE_COUNT_FOR_EXTENT=1e4,t.QUERY_STATISTICS_TIMEOUT=12e3,t.QUERY_EXTENT_TIMEOUT=1e4}}(At||(At={})),At.reset();const zt=t=>{let e=class extends t{constructor(){super(...arguments),this.controller=null,this.updatePolicy=1,this.suspendResumeExtentMode="computed",this.slicePlaneEnabled=!1,this.drapeSourceType=1,this.fullExtentInLocalViewSpatialReference=null,this.suspendResumeExtent=null,this._controllerCreated=!1,this.clippingExtent=null,this.supportsHeightUnitConversion=!0,this.pendingController=null,this.queryEngine=null}initialize(){const t=this.layer;"isTable"in t&&t.isTable?this.addResolvingPromise(Promise.reject(new x("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:t}))):(this._set("graphics3d",new lt({owner:this,layer:t,frustumVisibilityEnabled:!0,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentVisibilityEnabled:!0,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!0,preferredUpdatePolicy:this.updatePolicy,suspendResumeExtentMode:this.suspendResumeExtentMode,updateClippingExtent:t=>this.updateClippingExtent(t)})),this.updatingHandles.add(this,"updatePolicy",(t=>this.graphics3d.graphicsCore.preferredUpdatePolicy=t)),this.updatingHandles.add(this,"suspendResumeExtentMode",(t=>{this.graphics3d.suspendResumeExtentMode=t})),this.addResolvingPromise(this.graphics3d.setup().then((()=>this.validateGeometryType())).then((()=>this.queryEngine=new ct({layerView:this,priority:tt.FEATURE_QUERY_ENGINE}))).then((()=>dt(this))).then((t=>this.fullExtentInLocalViewSpatialReference=t)).then((()=>this.initializeController()))),this.notifyChange("updating"))}destroy(){this.destroyPendingController(),this.controller=c(this.controller),this._set("graphics3d",c(this.graphics3d)),this.queryEngine=c(this.queryEngine),this.loadedGraphics=null}destroyPendingController(){this.pendingController&&(this.pendingController.destroy(),this.pendingController=null)}get legendEnabled(){var t,e;return this.canResume()&&!(null!=(t=this.graphics3d)&&null!=(e=t.frustumVisibility)&&e.suspended)}notifyGraphicGeometryChanged(t){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(t)}notifyGraphicVisibilityChanged(t){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(t)}getRenderingInfo(t,e,i){const r=ot(t,{renderer:e,arcade:i});if(s(r)&&r.color){const t=r.color;t[0]=t[0]/255,t[1]=t[1]/255,t[2]=t[2]/255}return r}async getRenderingInfoAsync(t,e,i,s){return ut(t,{renderer:e,arcade:i,...s})}getGraphicFromGraphicUid(t){var e;let i=null;return null==(e=this.loadedGraphics)||e.forEach((e=>{e.uid===t&&(i=S(e,this.layer))})),i}get graphics3DGraphics(){return this.graphics3d?this.graphics3d.graphicsCore.graphics3DGraphics:null}get graphics3DGraphicsByObjectID(){return this.graphics3d?this.graphics3d.graphicsCore.graphics3DGraphicsByObjectID:null}get symbolUpdateType(){return this.graphics3d?this.graphics3d.graphicsCore.symbolUpdateType:null}whenGraphicBounds(t,e){return this.graphics3d?this.graphics3d.graphicsCore.whenGraphicBounds(t,e):null}computeAttachmentOrigin(t,e){return this.graphics3d?this.graphics3d.graphicsCore.computeAttachmentOrigin(t,e):null}getSymbolLayerSize(t,e){return this.graphics3d?this.graphics3d.graphicsCore.getSymbolLayerSize(t,e):null}queryFeatures(t,e){return this.queryEngine.executeQuery(this._ensureQuery(t),T(e,"signal"))}queryObjectIds(t,e){return this.queryEngine.executeQueryForIds(this._ensureQuery(t),T(e,"signal"))}queryFeatureCount(t,e){return this.queryEngine.executeQueryForCount(this._ensureQuery(t),T(e,"signal"))}queryExtent(t,e){return this.queryEngine.executeQueryForExtent(this._ensureQuery(t),T(e,"signal"))}_ensureQuery(t){return i(t)?this.createQuery():P.from(t)}highlight(t){return this.graphics3d.highlight(t,this.layer.objectIdField)}maskOccludee(t){return this.graphics3d.maskOccludee(t)}canResume(){return super.canResume()&&(!this.graphics3d||!this.graphics3d.suspended)}getSuspendInfo(){const t=super.getSuspendInfo();return this.graphics3d?{...t,...this.graphics3d.suspendInfo}:t}isUpdating(){var t,e;return!(!this.graphics3d||this.graphics3d.destroyed||this._controllerCreated&&(null==(t=this.controller)||!t.updating)&&null!=(e=this.view.basemapTerrain)&&e.ready&&!this.graphics3d.updating)}async initializeController(){const t=this.createController();this.pendingController=t,await t.when(),this.setControllerWhenInitialized(t)}async setControllerWhenInitialized(t){try{await this.when()}catch(t){}this._controllerCreated=!0,this.notifyChange("updating"),this.isResolved()&&!this.destroyed?(await O(this.view,"basemapTerrain.ready"),this.beforeSetController(t),this.pendingController=null,this.controller=t,this.loadedGraphics=t.graphics,this.notifyChange("updating")):this.destroyPendingController()}updateClippingExtent(t){if(this.clippingExtent=t,!this.controller)return!1;switch(this.controller.type){case"stream":return!1;case"feature-tile-3d":return this.controller.extent=t,!0}}validateGeometryType(){switch(this.layer.geometryType){case"multipatch":case"multipoint":return Promise.reject(new x("featurelayerview3d:unsupported-geometry-type","Unsupported geometry type ${geometryType}",{geometryType:this.layer.geometryType}))}}_getResourceInfo(){const t=this.controller&&this.controller instanceof It?this.controller:null;return{displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:t?t.maximumNumberOfFeatures:-1,totalNumberOfFeatures:t?t.serviceDataCount:-1,nodes:0,core:this.graphics3d.graphicsCore.performanceInfo,elevationUpdating:this.graphics3d.elevationAlignment.updating,visibilityFrustum:!this.graphics3d.frustumVisibility.suspended,visibilityScale:!this.graphics3d.scaleVisibility.suspended}}get performanceInfo(){return this._getResourceInfo()}};return h([n()],e.prototype,"loadedGraphics",void 0),h([n()],e.prototype,"suspended",void 0),h([n({readOnly:!0})],e.prototype,"legendEnabled",null),h([n()],e.prototype,"updating",void 0),h([n()],e.prototype,"controller",void 0),h([n()],e.prototype,"graphics3d",void 0),h([n({readOnly:!0})],e.prototype,"updatePolicy",void 0),h([n({readOnly:!0})],e.prototype,"suspendResumeExtentMode",void 0),h([n({type:Boolean})],e.prototype,"slicePlaneEnabled",void 0),h([n({readOnly:!0})],e.prototype,"suspendInfo",void 0),e=h([a("esri.views.3d.layers.FeatureLikeLayerView3D")],e),e};class qt extends C{constructor(){super(...arguments),this._set=new Set}clear(){if(this._set.size>0){const t=this.toArray();this._set.clear(),this.emit("after-changes",{type:2}),this.emit("change",{added:[],removed:t})}}get length(){return this._set.size}addMany(t){if(0!==t.length){for(const e of t)this._set.add(e);this.emit("after-changes",{type:1}),this.emit("change",{added:t,removed:[]})}}remove(t){this._set.delete(t)&&(this.emit("after-changes",{type:2}),this.emit("change",{added:[],removed:[t]}))}removeMany(t){const e=[];for(const i of t)this._set.delete(i)&&e.push(i);e.length>0&&(this.emit("after-changes",{type:2}),this.emit("change",{added:[],removed:e}))}toArray(){return[...this._set]}find(t){let e;return D(this._set,(i=>!!t(i)&&(e=i,!0))),e}forEach(t){this._set.forEach((e=>t(e)))}}export{zt as E,It as S,Et as U,qt as s}