import { t as t$1, l as l$1 } from './generateRendererUtils-8e5bff36.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const t="equal-interval",i=1,l=5,a=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,r=new Set(["esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble"]);function o(e){const n=null!=e.normalizationField||null!=e.normalizationType,t=null!=e.minValue||null!=e.maxValue,i=!!e.sqlExpression&&e.supportsSQLExpression;return !n&&!t&&!i}function s(e){const n=e.returnDistinct?[...new Set(e.values)]:e.values,t=n.filter((e=>null!=e)).length,i={count:t};return e.supportsNullCount&&(i.nullcount=n.length-t),e.percentileParams&&(i.median=c(n,e.percentileParams)),i}function u(e){const{values:n,useSampleStdDev:t,supportsNullCount:i}=e;let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,r=null,o=null,s=null,u=null,d=0;const m=null==e.minValue?-1/0:e.minValue,f=null==e.maxValue?1/0:e.maxValue;for(const c of n)Number.isFinite(c)?c>=m&&c<=f&&(r+=c,l=Math.min(l,c),a=Math.max(a,c),d++):"string"==typeof c&&d++;if(d&&null!=r){o=r/d;let e=0;for(const t of n)Number.isFinite(t)&&t>=m&&t<=f&&(e+=(t-o)**2);u=t?d>1?e/(d-1):0:d>0?e/d:0,s=Math.sqrt(u);}else l=null,a=null;const p={avg:o,count:d,max:a,min:l,stddev:s,sum:r,variance:u};return i&&(p.nullcount=n.length-d),e.percentileParams&&(p.median=c(n,e.percentileParams)),p}function c(e,n){const{fieldType:t,value:i,orderBy:l,isDiscrete:a}=n,r=d(t,"desc"===l);if(0===(e=[...e].filter((e=>null!=e)).sort(((e,n)=>r(e,n)))).length)return null;if(i<=0)return e[0];if(i>=1)return e[e.length-1];const o=(e.length-1)*i,s=Math.floor(o),u=s+1,c=o%1,m=e[s],f=e[u];return u>=e.length||a||"string"==typeof m||"string"==typeof f?m:m*(1-c)+f*c}function d(e,n){const t=n?1:-1,i=f(n),l=m(n);if(!(!!e&&["esriFieldTypeDate","esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...r].includes(e)))return (e,n)=>"number"==typeof e&&"number"==typeof n?i(e,n):"string"==typeof e&&"string"==typeof n?l(e,n):t;if("esriFieldTypeDate"===e)return (e,n)=>{const l=new Date(e).getTime(),a=new Date(n).getTime();return isNaN(l)||isNaN(a)?t:i(l,a)};if(r.has(e))return (e,n)=>i(e,n);if("esriFieldTypeString"===e)return (e,n)=>l(e,n);if("esriFieldTypeGUID"===e||"esriFieldTypeGlobalID"===e){const e=m(n);return (n,t)=>e(p(n),p(t))}return n?(e,n)=>1:(e,n)=>-1}function m(e){return e?(e,n)=>(e=e.toUpperCase())>(n=n.toUpperCase())?-1:e<n?1:0:(e,n)=>(e=e.toUpperCase())<(n=n.toUpperCase())?-1:e>n?1:0}function f(e){return e?(e,n)=>n-e:(e,n)=>e-n}function p(e){return e.substr(24,12)+e.substr(19,4)+e.substr(16,2)+e.substr(14,2)+e.substr(11,2)+e.substr(9,2)+e.substr(6,2)+e.substr(4,2)+e.substr(2,2)+e.substr(0,2)}function v(e,n){return n?(["avg","stddev","variance"].forEach((n=>{null!=e[n]&&(e[n]=Math.ceil(e[n]));})),e):e}function b(e){const n={};for(let t of e)(null==t||"string"==typeof t&&""===t.trim())&&(t=null),null==n[t]?n[t]={count:1,data:t}:n[t].count++;return {count:n}}function g(e,n,t){const i=e.count,l=[];if(t&&n&&"coded-value"===n.type){n.codedValues.forEach((e=>{const n=e.code;i.hasOwnProperty(n)||(i[n]={data:n,count:0});}));}for(const a in i){const e=i[a];l.push({value:e.data,count:e.count,label:e.label});}return {uniqueValueInfos:l}}function h(e,n,t,i){let l=null;switch(n){case"log":0!==e&&(l=Math.log(e)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(i)&&0!==i&&(l=e/i*100);break;case"field":Number.isFinite(t)&&0!==t&&(l=e/t);break;case"natural-log":e>0&&(l=Math.log(e));break;case"square-root":e>0&&(l=e**.5);}return l}function y(e,t){const i=F({field:t.field,normalizationType:t.normalizationType,normalizationField:t.normalizationField,classificationMethod:t.classificationMethod,standardDeviationInterval:t.standardDeviationInterval,breakCount:t.numClasses||l});return e=T(e,t.minValue,t.maxValue),t$1({definition:i,values:e,normalizationTotal:t.normalizationTotal})}function T(e,n,t){return n=null==n?-1/0:n,t=null==t?1/0:t,e.filter((e=>Number.isFinite(e)&&e>=n&&e<=t))}function F(n){const l=n.field,a=n.classificationMethod||t,r=n.normalizationType,o=n.normalizationField,s=new l$1;return s.classificationField=l,s.breakCount=n.breakCount,s.classificationMethod=a,s.standardDeviationInterval="standard-deviation"===a?n.standardDeviationInterval||i:void 0,s.normalizationType=r,s.normalizationField="field"===r?o:void 0,s}function D(e,n){let t=e.classBreaks;const i=t.length,l=t[0].minValue,r=t[i-1].maxValue,o="standard-deviation"===n,s=a;return t=t.map((e=>{const n=e.label,t={minValue:e.minValue,maxValue:e.maxValue,label:n};if(o&&n){const e=n.match(s).map((e=>+e.trim()));2===e.length?(t.minStdDev=e[0],t.maxStdDev=e[1],e[0]<0&&e[1]>0&&(t.hasAvg=!0)):1===e.length&&(n.includes("<")?(t.minStdDev=null,t.maxStdDev=e[0]):n.includes(">")&&(t.minStdDev=e[0],t.maxStdDev=null));}return t})),{minValue:l,maxValue:r,classBreakInfos:t,normalizationTotal:e.normalizationTotal}}

export { D, b, c, d, g, h, o, s, u, v, y };
