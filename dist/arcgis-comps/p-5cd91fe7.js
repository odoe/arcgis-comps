import{A as e,af as t}from"./p-e58503d5.js";import{a as n,b as r,d as o}from"./p-97132756.js";import{C as l,y as s,c as f,a as i}from"./p-c45aa9e8.js";function a(e,t,l,s){const{rendererJSON:f,isRGBRenderer:i}=e;let a=null,c=null;if(t&&i)a=t;else if(t&&"pointCloudUniqueValueRenderer"===f.type){c=n.fromJSON(f);const e=c.colorUniqueValueInfos;a=new Uint8Array(3*s);const r=b(c.fieldTransformType);for(let n=0;n<s;n++){const o=(r?r(t[n]):t[n])+"";for(let t=0;t<e.length;t++)if(e[t].values.indexOf(o)>=0){a[3*n]=e[t].color.r,a[3*n+1]=e[t].color.g,a[3*n+2]=e[t].color.b;break}}}else if(t&&"pointCloudStretchRenderer"===f.type){c=r.fromJSON(f);const e=c.stops;a=new Uint8Array(3*s);const n=b(c.fieldTransformType);for(let r=0;r<s;r++){const o=n?n(t[r]):t[r],l=e.length-1;if(o<e[0].value)a[3*r]=e[0].color.r,a[3*r+1]=e[0].color.g,a[3*r+2]=e[0].color.b;else if(o>=e[l].value)a[3*r]=e[l].color.r,a[3*r+1]=e[l].color.g,a[3*r+2]=e[l].color.b;else for(let t=1;t<e.length;t++)if(o<e[t].value){const n=(o-e[t-1].value)/(e[t].value-e[t-1].value);a[3*r]=e[t].color.r*n+e[t-1].color.r*(1-n),a[3*r+1]=e[t].color.g*n+e[t-1].color.g*(1-n),a[3*r+2]=e[t].color.b*n+e[t-1].color.b*(1-n);break}}}else if(t&&"pointCloudClassBreaksRenderer"===f.type){c=o.fromJSON(f);const e=c.colorClassBreakInfos;a=new Uint8Array(3*s);const n=b(c.fieldTransformType);for(let r=0;r<s;r++){const o=n?n(t[r]):t[r];for(let t=0;t<e.length;t++)if(o>=e[t].minValue&&o<=e[t].maxValue){a[3*r]=e[t].color.r,a[3*r+1]=e[t].color.g,a[3*r+2]=e[t].color.b;break}}}else{a=new Uint8Array(3*s);for(let e=0;e<a.length;e++)a[e]=255}if(l&&c&&c.colorModulation){const e=c.colorModulation.minValue,t=c.colorModulation.maxValue,n=.3;for(let r=0;r<s;r++){const o=l[r],s=o>=t?1:o<=e?n:n+(1-n)*(o-e)/(t-e);a[3*r]=s*a[3*r],a[3*r+1]=s*a[3*r+1],a[3*r+2]=s*a[3*r+2]}}return a}function c(e,n){if(null==e.encoding||""===e.encoding){const r=s(n,e);if(t(r.vertexAttributes.position))return;const o=f(n,r.vertexAttributes.position),l=r.header.fields,i=[l.offsetX,l.offsetY,l.offsetZ],a=[l.scaleX,l.scaleY,l.scaleZ],c=o.length/3,u=new Float64Array(3*c);for(let e=0;e<c;e++)u[3*e]=o[3*e]*a[0]+i[0],u[3*e+1]=o[3*e+1]*a[1]+i[1],u[3*e+2]=o[3*e+2]*a[2]+i[2];return u}if("lepcc-xyz"===e.encoding)return i(n).result}function u(t,n,r){return e(t)&&t.attributeInfo.useElevation?d(n,r):e(t)?l(t.attributeInfo.storageInfo,t.buffer,r):null}function d(e,t){const n=new Float64Array(t);for(let r=0;r<t;r++)n[r]=e[3*r+2];return n}function p(e,t,n,r,o){const l=e.length/3;let s=0;for(let f=0;f<l;f++){let l=!0;for(let e=0;e<r.length&&l;e++){const{filterJSON:t}=r[e],n=o[e].values[f];switch(t.type){case"pointCloudValueFilter":{const e="exclude"===t.mode;-1!==t.values.indexOf(n)===e&&(l=!1);break}case"pointCloudBitfieldFilter":{const e=y(t.requiredSetBits),r=y(t.requiredClearBits);(n&e)===e&&0==(n&r)||(l=!1);break}case"pointCloudReturnFilter":{const e=15&n,r=n>>>4&15,o=r>1,s=1===e,f=e===r;let i=!1;for(const e of t.includedReturns)if("last"===e&&f||"firstOfMany"===e&&s&&o||"lastOfMany"===e&&f&&o||"single"===e&&!o){i=!0;break}i||(l=!1);break}}}l&&(n[s]=f,e[3*s]=e[3*f],e[3*s+1]=e[3*f+1],e[3*s+2]=e[3*f+2],t[3*s]=t[3*f],t[3*s+1]=t[3*f+1],t[3*s+2]=t[3*f+2],s++)}return s}function b(e){return null==e||"none"===e?null:"low-four-bit"===e?e=>15&e:"high-four-bit"===e?e=>(240&e)>>4:"absolute-value"===e?e=>Math.abs(e):"modulo-ten"===e?e=>e%10:null}function y(e){let t=0;for(const n of e||[])t|=1<<n;return t}export{u as a,c,d,p as m,a as u}