import{e,d as t,i as s,a1 as r,aS as o,N as n,a2 as i,a3 as u,A as a}from"./p-e58503d5.js";import{b as l}from"./p-765e6c28.js";import{m as p}from"./p-6b2eb7a7.js";var f;let d=f=class extends r{async collectRequiredFields(e,t){return l(e,t,this.expression)}clone(){return new f({expression:this.expression,title:this.title})}};e([t({type:String,json:{write:!0}})],d.prototype,"expression",void 0),e([t({type:String,json:{write:!0}})],d.prototype,"title",void 0),d=f=e([s("esri.layers.support.FeatureExpressionInfo")],d);const h=d;function c(e){return null!=p[e]}function m(e){return 1/(p[e]||1)}const x=function(){const e=Object.keys(p);return e.sort(),e}();var v;const y=o()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),E=new n({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let w=v=class extends r{constructor(){super(...arguments),this.offset=null}readFeatureExpressionInfo(e,t){return null!=e?e:t.featureExpression&&0===t.featureExpression.value?{expression:"0"}:void 0}writeFeatureExpressionInfo(e,t,s,r){t[s]=e.write({},r),"0"===e.expression&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):a(e)||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new v({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}};e([t({type:h,json:{write:!0}})],w.prototype,"featureExpressionInfo",void 0),e([i("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],w.prototype,"readFeatureExpressionInfo",null),e([u("featureExpressionInfo",{featureExpressionInfo:{type:h},"featureExpression.value":{type:[0]}})],w.prototype,"writeFeatureExpressionInfo",null),e([t({type:y.apiValues,nonNullable:!0,json:{type:y.jsonValues,read:y.read,write:{writer:y.write,isRequired:!0}}})],w.prototype,"mode",null),e([t({type:Number,json:{write:!0}})],w.prototype,"offset",void 0),e([t({type:x,json:{type:String,read:E.read,write:E.write}})],w.prototype,"unit",null),w=v=e([s("esri.layers.support.ElevationInfo")],w);const I=w;export{c as n,m as r,I as x}