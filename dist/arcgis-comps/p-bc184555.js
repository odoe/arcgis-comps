import{O as e,q as t,E as r,t as i}from"./p-b0a11892.js";import{r as n,m as s}from"./p-a989744e.js";import{dY as a}from"./p-c8bc3433.js";class o{constructor(e){this._resourceManager=e}dispose(){this._rasterizationCanvas=null}rasterizeJSONResource(a,o,c){if(this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),"simple-fill"===a.type||"esriSFS"===a.type){const[t,r,i]=e.rasterizeSimpleFill(this._rasterizationCanvas,a.style,o);return{size:[r,i],image:new Uint32Array(t.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0}}if("simple-line"===a.type||"esriSLS"===a.type||"line"===a.type&&a.dashTemplate){let r,i;if("simple-line"===a.type||"esriSLS"===a.type)switch(r=t(a.style,a.cap),a.cap){case"butt":i="Butt";break;case"square":i="Square";break;default:i="Round"}else r=a.dashTemplate,i=a.cim.capStyle;const[n,s,o]=e.rasterizeSimpleLine(r,i);return{size:[s,o],image:new Uint32Array(n.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}let l,h,m;if("simple-marker"===a.type||"esriSMS"===a.type||"line-marker"===a.type?(l=r.fromSimpleMarker(a),m=n(l)):a.cim&&"CIMHatchFill"===a.cim.type?(l=r.fromCIMHatchFill(a.cim),h=new i(l.frame.xmin,-l.frame.ymax,l.frame.xmax-l.frame.xmin,l.frame.ymax-l.frame.ymin)):a.cim.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===a.cim.markerPlacement.type?(l=r.fromCIMInsidePolygon(a.cim),h=new i(l.frame.xmin,-l.frame.ymax,l.frame.xmax-l.frame.xmin,l.frame.ymax-l.frame.ymin)):(l=a.cim,m=n(l)),m&&!c){const[e,t,r]=s(m);return e?{size:[t,r],image:new Uint32Array(e.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}const[f,p,u,d,w]=r.rasterize(this._rasterizationCanvas,l,h,this._resourceManager,!c);return f?{size:[p,u],image:new Uint32Array(f.buffer),sdf:!1,simplePattern:!1,anchorX:d,anchorY:w}:null}rasterizeImageResource(e,t,r,i){this._rasterizationCanvas||(this._rasterizationCanvas=document.createElement("canvas")),this._rasterizationCanvas.width=e,this._rasterizationCanvas.height=t;const n=this._rasterizationCanvas.getContext("2d");r instanceof ImageData?n.putImageData(r,0,0):(r.setAttribute("width",`${e}px`),r.setAttribute("height",`${t}px`),n.drawImage(r,0,0,e,t));const s=n.getImageData(0,0,e,t),o=new Uint8Array(s.data);if(i)for(const e of i)if(e&&e.oldColor&&4===e.oldColor.length&&e.newColor&&4===e.newColor.length){const[t,r,i,n]=e.oldColor,[s,a,c,l]=e.newColor;if(t===s&&r===a&&i===c&&n===l)continue;for(let e=0;e<o.length;e+=4)t===o[e]&&r===o[e+1]&&i===o[e+2]&&n===o[e+3]&&(o[e]=s,o[e+1]=a,o[e+2]=c,o[e+3]=l)}let c;for(let e=0;e<o.length;e+=4)c=o[e+3]/255,o[e]=o[e]*c,o[e+1]=o[e+1]*c,o[e+2]=o[e+2]*c;let l=o,h=e,m=t;const f=512;if(h>=f||m>=f){const r=h/m;r>1?(h=f,m=Math.round(f/r)):(m=f,h=Math.round(f*r)),l=new Uint8Array(4*h*m);const i=new Uint8ClampedArray(l.buffer);a(o,e,t,i,h,m,!1)}return{size:[h,m],image:new Uint32Array(l.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}}export{o as m}