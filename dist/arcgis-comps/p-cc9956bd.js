import{e,d as r,bl as t,bH as i,ck as s,bk as a,aL as n,i as o,bj as l,cJ as u,k as c,r as d,bn as p,cC as m,E as y,bq as f}from"./p-5420851c.js";import{c as b,a as B,u as v,d as h,b as g,p as A,o as P}from"./p-743dec27.js";import"./p-53bb6ab4.js";import"./p-48fed6fe.js";function R(e){return e.features.map((r=>{const t=c.fromJSON(e.spatialReference),i=n.fromJSON(r);return d(i.geometry)&&(i.geometry.spatialReference=t),i}))}function j(e){return u.fromJSON(e).features.map((e=>e.geometry))}let F=class extends l{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return j(e)}readIncidents(e){return j(e)}readPointBarriers(e,r){return j(r.barriers)}readPolylineBarriers(e){return j(e)}readPolygonBarriers(e){return j(e)}readRoutes(e){return R(e)}};e([r({type:[b]})],F.prototype,"directions",void 0),e([r({type:[t]})],F.prototype,"facilities",void 0),e([i("facilities")],F.prototype,"readFacilities",null),e([r({type:[t]})],F.prototype,"incidents",void 0),e([i("incidents")],F.prototype,"readIncidents",null),e([r({type:[B]})],F.prototype,"messages",void 0),e([r({type:[t]})],F.prototype,"pointBarriers",void 0),e([i("pointBarriers",["barriers"])],F.prototype,"readPointBarriers",null),e([r({type:[s]})],F.prototype,"polylineBarriers",void 0),e([i("polylineBarriers")],F.prototype,"readPolylineBarriers",null),e([r({type:[a]})],F.prototype,"polygonBarriers",void 0),e([i("polygonBarriers")],F.prototype,"readPolygonBarriers",null),e([r({type:[n]})],F.prototype,"routes",void 0),e([i("routes")],F.prototype,"readRoutes",null),F=e([o("esri.rest.support.ClosestFacilitySolveResult")],F);const C=F,k=P({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let N=class extends f{constructor(e){super(e),this.url=null}solve(e,r){return async function(e,r,t){const i=[],s=[],a={},n={},o=p(e),{path:l}=o;r.incidents&&r.incidents.features&&v(r.incidents.features,s,"incidents.features",a),r.facilities&&r.facilities.features&&v(r.facilities.features,s,"facilities.features",a),r.pointBarriers&&r.pointBarriers.features&&v(r.pointBarriers.features,s,"pointBarriers.features",a),r.polylineBarriers&&r.polylineBarriers.features&&v(r.polylineBarriers.features,s,"polylineBarriers.features",a),r.polygonBarriers&&r.polygonBarriers.features&&v(r.polygonBarriers.features,s,"polygonBarriers.features",a);const u=await m(s);for(const e in a){const r=a[e];i.push(e),n[e]=u.slice(r[0],r[1])}if(h(n,i)){let e=null;try{e=await g(l,r.apiKey,t)}catch{}e&&!e.hasZ&&A(n,i)}for(const e in n)n[e].forEach(((t,i)=>{r.get(e)[i].geometry=t}));const c={...t,query:{...o.query,...k.toQueryParams(r),f:"json"}},{data:d}=await y(`${l}/solveClosestFacility`,c);return C.fromJSON(d)}(this.url,e,r)}};e([r()],N.prototype,"url",void 0),N=e([o("esri.tasks.ClosestFacilityTask")],N);const w=N;export default w;