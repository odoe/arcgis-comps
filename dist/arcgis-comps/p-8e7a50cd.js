import{T as t,e as i,d as s,bN as e,i as r,p as a,i3 as h,b5 as o,o as n,r as p,a as l,d8 as d,aL as m,E as u,ch as c,b as f,g$ as y,bl as w,Q as g,Y as v}from"./p-5420851c.js";import{l as j,u as x}from"./p-e4db8bd2.js";import{j as b}from"./p-163c7216.js";import{m as R}from"./p-e9fbf3df.js";import{n as D}from"./p-e2fe661c.js";import{i as I}from"./p-2eec0ad8.js";import{r as E}from"./p-95c8b60a.js";import{d as P}from"./p-8d730a3d.js";import{t as V}from"./p-9161a423.js";import{i as T}from"./p-b3b13eb5.js";import{S}from"./p-f567bae9.js";import{d as q}from"./p-cc74fdc8.js";import{i as N}from"./p-8dd46af5.js";import"./p-53bb6ab4.js";import"./p-4c6040da.js";import"./p-54db165f.js";import"./p-4d140ee3.js";import"./p-ba8c567b.js";import"./p-2d0c34e5.js";import"./p-47e1bd73.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-6df976c7.js";import"./p-50ff864e.js";import"./p-def8d692.js";import"./p-297addf1.js";import"./p-27418da2.js";import"./p-81f41410.js";import"./p-4b2b4a33.js";import"./p-4414d64f.js";import"./p-a617738c.js";import"./p-13d3a443.js";import"./p-97ec6ae5.js";import"./p-ad5a0ac5.js";import"./p-6189adb6.js";import"./p-78327456.js";import"./p-9315e4d7.js";import"./p-dcac8868.js";import"./p-c3fd4463.js";import"./p-97540775.js";import"./p-6e6d0422.js";import"./p-9047f753.js";import"./p-8bf8e457.js";import"./p-7e5e535f.js";import"./p-4d0ba4c4.js";import"./p-baad017f.js";import"./p-e991a11e.js";import"./p-b1c9647c.js";const U=t.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let k=class extends a{constructor(){super(...arguments),this.attached=!1,this.container=new D,this.updateRequested=!1,this._graphicsView=null,this._projectFullExtentPromise=null,this._dataParameters={exportParametersVersion:0,extents:[],tileResolution:0,time:""},this.type="Graphics",this._graphics=new h,this._updateGraphics=o((async(t,i)=>{if(!t.stationary)return;const s=t.state,e=new n({xmin:s.extent.xmin,ymin:s.extent.ymin,xmax:s.extent.xmax,ymax:s.extent.ymax,spatialReference:s.spatialReference}),[r,a]=t.state.size,h={};h.timeExtent=this.timeExtent,h.requestAsImageElement=!1,h.signal=i,null==this._projectFullExtentPromise&&(this._projectFullExtentPromise=this._getProjectedFullExtent(e.spatialReference));const o="vector-field"===this.layer.renderer.type?this.layer.renderer.symbolTileSize:50,l=await this._projectFullExtentPromise,{extent:d,resolution:m,width:u,height:c}=R(e,r,a,o,l),f=await this.layer.fetchImage(d,u,c,h),y=this.layer.renderer;if("vector-field"===y.type){const i=f.pixelData.pixelBlock,s=y.sizeVariables[0];!p(i)||s.minDataValue&&s.maxDataValue||(s.minDataValue=i.statistics[0].minValue,s.maxDataValue=i.statistics[0].maxValue),this._pixelData={extent:d,pixelBlock:i};const e=d.clone().normalize(),r={exportParametersVersion:this.layer.exportImageServiceParameters.version,extents:e,tileResolution:m,time:JSON.stringify(this.timeExtent||"")},a=this._canReuseVectorFieldData(r)?this._dataParameters.extents:[],h=await y.getGraphicsFromPixelData(f.pixelData,"vector-uv"===this.layer.rasterInfo.dataType,a);if(a.length){const t=this._graphics.items.filter((t=>p(t.geometry)&&a.some((i=>i.intersects(t.geometry)))&&!e.some((i=>i.intersects(t.geometry)))));this._graphics.removeMany(t),this._graphics.addMany(h)}else this._graphics.set("items",h);this._graphicsView.update(t),this._dataParameters=r}}))}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this._updateGraphics(t).catch((t=>{l(t)||U.error(t)}))}hitTest(t,i){const s=this.view.toMap(d(t,i));return Promise.resolve(new m({attributes:{},geometry:s,layer:this.layer}))}attach(){this._graphicsView=new E({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new I(this.view.featuresTilingScheme)}),this.attached=!0}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null}install(t){this.container.addChild(this._graphicsView.container),t.addChild(this.container)}uninstall(t){this.container.removeChild(this._graphicsView.container),t.removeChild(this.container)}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}async _getProjectedFullExtent(t){try{return await b(this.layer.fullExtent,t)}catch(i){try{const i=(await u(this.layer.url,{query:{option:"footprints",outSR:t.wkid||JSON.stringify(t.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?n.fromJSON(i):null}catch{return null}}}_canReuseVectorFieldData(t){const i=this._dataParameters.exportParametersVersion===t.exportParametersVersion,s=this._dataParameters.time===t.time,e=Math.abs(this._dataParameters.tileResolution-t.tileResolution)/t.tileResolution<.01,r=this._dataParameters.extents.some((i=>t.extents.some((t=>i.intersects(t)))));return i&&s&&e&&r}};i([s()],k.prototype,"attached",void 0),i([s()],k.prototype,"container",void 0),i([s()],k.prototype,"layer",void 0),i([s()],k.prototype,"timeExtent",void 0),i([s()],k.prototype,"view",void 0),i([s()],k.prototype,"updateRequested",void 0),i([s()],k.prototype,"updating",null),i([e({graphics:"Graphics"})],k.prototype,"type",void 0),k=i([r("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],k);const M=k,B=t.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let F=class extends a{constructor(){super(...arguments),this.attached=!1,this.container=new D,this.updateRequested=!1,this.type="Imagery",this._bitmapView=null}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch((t=>{l(t)||B.error(t)}))}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren()}hitTest(t,i){const s=this.view.toMap(d(t,i));return Promise.resolve(new m({attributes:{},geometry:s,layer:this.layer}))}attach(){const t=this.layer.version>=10,i=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,s=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new V,this.strategy=new S({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:i,imageMaxWidth:s,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()}),this.attached=!0}install(t){this.container.addChild(this._bitmapView),t.addChild(this.container)}uninstall(t){this.container.removeChild(this._bitmapView),t.removeChild(this.container)}redraw(){this.strategy.updateExports((t=>{t.source instanceof HTMLImageElement?t.requestRender():this.layer.applyRenderer({pixelBlock:t.source.pixelBlock}).then((i=>{const s=t.source;s.pixelBlock=i.pixelBlock,s.filter=t=>this.layer.applyFilter(t),this.container.requestRender()}))}))}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(1===t.length&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const i=this.view.extent,s=t.map((t=>t.source)).filter((t=>t.extent&&t.extent.intersects(i))).map((t=>({extent:t.extent,pixelBlock:t.originalPixelBlock}))),e=P(s,i);return p(e)?{extent:e.extent,pixelBlock:e.pixelBlock}:null}return null}_fetchImage(t,i,s,e){return(e=e||{}).timeExtent=this.timeExtent,e.requestAsImageElement=!0,this.layer.fetchImage(t,i,s,e).then((t=>t.imageElement?t.imageElement:this.layer.applyRenderer(t.pixelData,{signal:e.signal}).then((i=>{const s=new T(i.pixelBlock,i.extent.clone(),t.pixelData.pixelBlock);return s.filter=t=>this.layer.applyFilter(t),s}))))}};i([s()],F.prototype,"attached",void 0),i([s()],F.prototype,"container",void 0),i([s()],F.prototype,"layer",void 0),i([s()],F.prototype,"strategy",void 0),i([s()],F.prototype,"timeExtent",void 0),i([s()],F.prototype,"view",void 0),i([s()],F.prototype,"updateRequested",void 0),i([s()],F.prototype,"updating",null),i([e({imagery:"Imagery"})],F.prototype,"type",void 0),F=i([r("esri.views.2d.layers.imagery.ImageryView2D")],F);const G=F,L=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(t,i){const{layer:s}=this;if(!t)throw new f("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:e}=s,r=q(s,i);if(!e||!p(r))throw new f("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:e,popupTemplate:r});const a=await r.getRequiredFields(),h=new y;h.timeExtent=this.timeExtent,h.geometry=t,h.outFields=a,h.outSpatialReference=t.spatialReference;const o=this.view.resolution,n="2d"===this.view.type?new w(o,o,this.view.spatialReference):new w(.5*o,.5*o,this.view.spatialReference),{returnTopmostRaster:l,showNoDataRecords:d}=r.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},m={returnDomainValues:!0,returnTopmostRaster:l,pixelSize:n,showNoDataRecords:d,signal:p(i)?i.signal:null};return s.queryVisibleRasters(h,m).then((t=>t))}canResume(){var t;return!(!super.canResume()||null!=(t=this.timeExtent)&&t.isEmpty)}};return i([s()],e.prototype,"layer",void 0),i([s()],e.prototype,"suspended",void 0),i([s(c)],e.prototype,"timeExtent",void 0),i([s()],e.prototype,"view",void 0),e=i([r("esri.views.layers.ImageryLayerView")],e),e};let _=class extends(L(N(j(x)))){constructor(){super(...arguments),this._exportImageVersion=-1}initialize(){this.handles.add([g(this,["layer.blendMode","layer.effects"],(t=>{this.subview&&(this.subview.container.blendMode=t)}),!0),g(this,"layer.effect",(t=>{this.subview&&(this.subview.container.effect=t)}),!0)])}get pixelData(){return this.updating?null:this.subview.getPixelData()}get updating(){return!(this.subview&&!this.subview.updating)}hitTest(t,i){return this.suspended||!this.subview?Promise.resolve(null):this.subview.hitTest(t,i)}update(t){var i;null==(i=this.subview)||i.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([g(this,"layer.exportImageServiceParameters.version",(t=>{this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())})),this.watch("timeExtent",(()=>{this.subview.timeExtent=this.timeExtent,this.requestUpdate()})),this.layer.on("redraw",(()=>this.subview.redraw())),v(this.layer,"renderer",(()=>this._setSubView()))],"imagerylayerview-update")}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||!this.suspended&&this.subview.isUpdating()}_setSubView(){var t;let i="Imagery";var s,e;"vector-field"===(null==(t=this.layer.renderer)?void 0:t.type)&&"lerc"===this.layer.format&&(i="Graphics"),this.subview&&this.subview.type===i||(null==(s=this.subview)||s.uninstall(this.container),null==(e=this.subview)||e.destroy(),this.subview="Imagery"===i?new G({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new M({layer:this.layer,view:this.view,timeExtent:this.timeExtent}),this.subview.attach(),this.subview.install(this.container),this.subview.container.blendMode=this.layer.blendMode,this.subview.container.effect=this.layer.effect),this.requestUpdate()}};i([s()],_.prototype,"pixelData",null),i([s({readOnly:!0})],_.prototype,"updating",null),i([s()],_.prototype,"subview",void 0),_=i([r("esri.views.2d.layers.ImageryLayerView2D")],_);const z=_;export default z;