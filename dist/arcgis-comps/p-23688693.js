import{bi as e,cD as t,aC as r,bn as i,aH as s,aK as n}from"./p-566b0715.js";import{ae as a,O as o,aW as l}from"./p-9ae46e68.js";import{C as c,G as m}from"./p-6c45ae96.js";import{m as h,s as u}from"./p-128c292d.js";import{m as f}from"./p-c3b38c46.js";import{n as y,e as p,r as M}from"./p-9e860e7b.js";import{m as d,n as g,i as C}from"./p-c8f716a9.js";import"./p-fe01b82b.js";import"./p-84bf99cb.js";import"./p-685003b3.js";import"./p-2d0c34e5.js";import"./p-81e5b36e.js";import"./p-47e1bd73.js";import"./p-d6725707.js";import"./p-d925341f.js";import"./p-56ed1c7a.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-57ae469d.js";import"./p-27ef204b.js";import"./p-3a2e88bf.js";var b;!function(e){e.Legend="legend",e.Preview="preview"}(b||(b={}));const I=(t,r,i)=>{if(t&&t.targetSize){let s;if(i){const r=Math.max(i.frame.xmax-i.frame.xmin,i.frame.ymax-i.frame.ymin);s=t.targetSize/e(r)}else s=t.targetSize/r.referenceSize;return s}return t&&t.scaleFactor?t.scaleFactor:1},w={fill:{legend:{frame:{xmax:15,xmin:0,ymax:15,ymin:0},geometry:{rings:[[[0,15],[15,7.5],[15,0],[0,0],[0,15]]]},canvasPaths:{rings:[[[0,15],[0,0],[15,7.5],[15,15],[0,15]]]}},preview:{frame:{xmax:100,xmin:0,ymax:100,ymin:0},geometry:{rings:[[[0,100],[100,100],[100,0],[0,0],[0,100]]]},canvasPaths:{rings:[[[0,100],[0,0],[100,0],[100,100],[0,100]]]}}},stroke:{legend:{frame:{xmax:24,xmin:0,ymax:2,ymin:-2},geometry:{paths:[[[0,0],[12,0],[24,0]]]},canvasPaths:{paths:[[[0,2],[12,2],[24,2]]]}},preview:{frame:{xmax:100,xmin:0,ymax:2,ymin:-2},geometry:{paths:[[[0,0],[50,0],[100,0]]]},canvasPaths:{paths:[[[0,2],[50,2],[100,2]]]}}}};function P(e,t,r,i){let s,n;return"function"==typeof e.materialHash?(s=(0,e.materialHash)(t,r,i),n=m(e.cim,e.materialOverrides)):(s=e.materialHash,n=e.cim),{analyzedCIM:n,hash:s}}const x=new class{constructor(e,t){this._spatialReference=e,this._avoidSDF=t,this._resourceCache=new Map,this._pictureMarkerCache=new Map,this._textRasterizer=new h,this._cimResourceManager=new u,this._rasterizer=new f(this._cimResourceManager)}async rasterizeCIMSymbolAsync(e,t,r,i,n,a,o,l){i=i||(t?null!=t.centroid?"esriGeometryPolygon":s(t.geometry):null)||function(e){if(!(e&&e.data&&e.data.symbol))return null;switch(e.data.symbol.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}(e);const c=await this.analyzeCIMSymbol(e,t?function(e){return(e?Object.keys(e):[]).map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}(t.attributes):null,r,i,l);return this.rasterizeCIMSymbol(c,t,i,n,a,o)}async analyzeCIMSymbol(e,t,r,i,s){const n=[],o=t?{geometryType:i,spatialReference:this._spatialReference,fields:t}:null;let l;await c(e.data,o,this._cimResourceManager,n,this._avoidSDF),a(s);for(const e of n)"CIMPictureMarker"!==e.cim.type&&"CIMPictureFill"!==e.cim.type&&"CIMPictureStroke"!==e.cim.type||(l||(l=[]),l.push(this.fetchPictureMarkerResource(e,s))),r&&"text"===e.type&&"string"==typeof e.text&&e.text.indexOf("[")>-1&&(e.text=y(r,e.text,e.cim.textCase));return l&&await Promise.all(l),n}async fetchPictureMarkerResource(e,t){const r=e.materialHash;if(!this._pictureMarkerCache.get(r)){const i=(await o(e.cim.url,{responseType:"image",signal:t&&t.signal})).data;this._pictureMarkerCache.set(r,i)}}rasterizeCIMSymbol(e,t,r,i,s,n){const a=[];for(const o of e){i&&"function"==typeof i.scaleFactor&&(i.scaleFactor=i.scaleFactor(t,s,n));const e=this._getRasterizedResource(o,t,r,i,s,n);if(!e)continue;let l=0,c=e.anchorX||0,m=e.anchorY||0,h=!1,u=0,f=0;if("esriGeometryPoint"===r){const e=I(i,o,null);if(u=p(o.offsetX,t,s,n)*e||0,f=p(o.offsetY,t,s,n)*e||0,"marker"===o.type)l=p(o.rotation,t,s,n)||0,h=!!o.rotateClockwise&&o.rotateClockwise;else if("text"===o.type){if(l=p(o.angle,t,s,n)||0,void 0!==o.horizontalAlignment)switch(o.horizontalAlignment){case"left":c=-.5;break;case"right":c=.5;break;default:c=0}if(void 0!==o.verticalAlignment)switch(o.verticalAlignment){case"top":m=.5;break;case"bottom":m=-.5;break;case"baseline":m=-.25;break;default:m=0}}}null!=e&&a.push({angle:l,rotateClockWise:h,anchorX:c,anchorY:m,offsetX:u,offsetY:f,rasterizedResource:e})}return this.getSymbolImage(a)}getSymbolImage(r){const i=document.createElement("canvas"),s=i.getContext("2d");let n=0,a=0,o=0,l=0;const c=[];for(let t=0;t<r.length;t++){const i=r[t],m=i.rasterizedResource;if(!m)continue;const h=m.size,u=i.offsetX,f=i.offsetY,y=i.anchorX,p=i.anchorY,M=i.rotateClockWise||!1;let d=i.angle,g=e(u)-h[0]*(.5+y),C=e(f)-h[1]*(.5+p),b=g+h[0],I=C+h[1];if(d){M&&(d=-d);const e=Math.sin(d*Math.PI/180),t=Math.cos(d*Math.PI/180),r=g*t-C*e,i=g*e+C*t,s=g*t-I*e,n=g*e+I*t,a=b*t-I*e,o=b*e+I*t,l=b*t-C*e,c=b*e+C*t;g=Math.min(r,s,a,l),C=Math.min(i,n,o,c),b=Math.max(r,s,a,l),I=Math.max(i,n,o,c)}n=g<n?g:n,a=C<a?C:a,o=b>o?b:o,l=I>l?I:l;const w=s.createImageData(m.size[0],m.size[1]);w.data.set(new Uint8ClampedArray(m.image.buffer)),c.push({offsetX:u,offsetY:f,rotateClockwise:M,angle:d,rasterizedImage:w,anchorX:y,anchorY:p})}i.width=o-n,i.height=l-a;const m=-n,h=l;for(let t=0;t<c.length;t++){const r=c[t],i=this._imageDataToCanvas(r.rasterizedImage),n=m-r.rasterizedImage.width*(.5+r.anchorX),a=h-r.rasterizedImage.height*(.5-r.anchorY);if(r.angle){const t=(360-r.angle)*Math.PI/180;s.save(),s.translate(e(r.offsetX),-e(r.offsetY)),s.translate(m,h),s.rotate(t),s.translate(-m,-h),s.drawImage(i,n,a),s.restore()}else s.drawImage(i,n+e(r.offsetX),a-e(r.offsetY))}const u=new t({x:m/i.width-.5,y:h/i.height-.5});return{imageData:0!==i.width&&0!==i.height?s.getImageData(0,0,i.width,i.height):s.createImageData(1,1),anchorPosition:u}}_imageDataToCanvas(e){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const t=this._imageDataCanvas,r=t.getContext("2d");return t.width=e.width,t.height=e.height,r.putImageData(e,0,0),t}_imageTo32Array(e,t,r){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const i=this._imageDataCanvas,s=i.getContext("2d");return i.width=t,i.height=r,s.drawImage(e,0,0,t,r),new Uint32Array(s.getImageData(0,0,t,r).data.buffer)}_getRasterizedResource(e,t,r,i,s,n){let a,o,c,m,h=null,u=null;if("esriGeometryPolyline"===r||"esriGeometryPolygon"===r){const m=i&&i.style?i.style:b.Legend,f="esriGeometryPolyline"===r?w.stroke[m]:w.fill[m];if("line"===e.type){if("CIMSolidStroke"!==e.cim.type){if("CIMPictureStroke"===e.cim.type){const r=p(e.width,t,s,n),{image:i,width:a,height:o}=this._getPictureResource(e,r);return this._rasterizePictureResource(e,i,a,o,f,r)}return null}({analyzedCIM:a,hash:c}=P(e,t,s,n)),o=this._embedCIMLayerInVectorMarker(a,f)}else if("marker"===e.type){if("CIMPictureMarker"===e.cim.type)return null;if("CIMVectorMarker"!==e.cim.type)return null;e.cim.offsetX=p(e.offsetX,t,s,n),e.cim.offsetY=p(e.offsetY,t,s,n),e.cim.rotation=p(e.rotation,t,s,n),e.cim.markerPlacement=e.markerPlacement,({analyzedCIM:a}=P(e,t,s,n)),c=l(JSON.stringify(a)).toString(),o=this._embedCIMLayerInVectorMarker(a,f),h=p(e.size,t,s,n),u=e.path}else{if("text"===e.type)return null;if("fill"===e.type){if("CIMHatchFill"===e.cim.type||"CIMVectorMarker"===e.cim.type||"CIMPictureMarker"===e.cim.type||"CIMPictureFill"===e.cim.type){const r=e.cim.size||e.cim.height;let i,o,l;if("CIMPictureMarker"===e.cim.type||"CIMPictureFill"===e.cim.type)({image:i,width:o,height:l}=this._getPictureResource(e,r));else{({analyzedCIM:a,hash:c}=P(e,t,s,n));const m=this._rasterizer.rasterizeJSONResource({cim:a,type:e.type,url:e.url,mosaicHash:c,size:r,path:u},1,this._avoidSDF);i=m.image,o=m.size[0],l=m.size[1]}return this._rasterizePictureResource(e,i,o,l,f,null)}if("CIMSolidFill"!==e.cim.type)return null;({analyzedCIM:a,hash:c}=P(e,t,s,n)),o=this._embedCIMLayerInVectorMarker(a,f)}}}else{if("text"===e.type)return m=this._rasterizeTextResource(e,t,i,s,n),m;({analyzedCIM:a,hash:c}=P(e,t,s,n));const r=I(i,e,null);if("CIMPictureMarker"===e.cim.type){const i=p(e.size,t,s,n)*r,{image:a,width:o,height:l}=this._getPictureResource(e,i);return m={image:a,size:[o,l],sdf:!1,simplePattern:!1,anchorX:e.anchorPoint?e.anchorPoint.x:0,anchorY:e.anchorPoint?e.anchorPoint.y:0},m}d(a,r,{preserveOutlineWidth:!1}),o=a}c+=r,i&&(c+=JSON.stringify(i));const f=this._resourceCache;return f.has(c)?f.get(c):(m=this._rasterizer.rasterizeJSONResource({cim:o,type:e.type,url:e.url,mosaicHash:c,size:h,path:u},window.devicePixelRatio||1,this._avoidSDF),f.set(c,m),m)}_rasterizeTextResource(e,t,r,i,s){const n=I(r,e,null),a=p(e.text,t,i,s);if(!a||0===a.length)return null;const o=p(e.fontName,t,i,s),l=p(e.style,t,i,s),c=p(e.weight,t,i,s),m=p(e.decoration,t,i,s),h=p(e.size,t,i,s)*n,u=p(e.horizontalAlignment,t,i,s),f=p(e.verticalAlignment,t,i,s),y=M(p(e.color,t,i,s)),d=M(p(e.outlineColor,t,i,s)),g={color:y,size:h,horizontalAlignment:u,verticalAlignment:f,font:{family:o,style:l,weight:c,decoration:m},halo:{size:p(e.outlineSize,t,i,s)||0,color:d,style:l},pixelRatio:1,premultiplyColors:!this._avoidSDF};return this._textRasterizer.rasterizeText(a,g)}_rasterizePictureResource(t,s,n,a,o,l){const c=document.createElement("canvas"),m=c.getContext("2d");c.height=e(Math.max(o.frame.ymax-o.frame.ymin,l)),c.width=e(o.frame.xmax-o.frame.xmin);const h=m.createImageData(n,a);h.data.set(new Uint8ClampedArray(s.buffer));const u=this._imageDataToCanvas(h),f=m.createPattern(u,"repeat"),y=Math.cos((-t.cim.rotation||0)*Math.PI/180),p=Math.sin((-t.cim.rotation||0)*Math.PI/180);f.setTransform({m11:y,m12:p,m21:-p,m22:y,m41:e(t.cim.offsetX)||0,m42:e(t.cim.offsetY)||0});const M=o.canvasPaths;let d,g,C;r(M)?(d=M.rings,m.fillStyle=f,g=m.fill,C=["evenodd"]):i(M)&&(d=M.paths,m.strokeStyle=f,m.lineWidth=l,g=m.stroke,d[0][0][1]=c.height/2,d[0][1][1]=c.height/2),m.beginPath();for(const t of d){const r=t?t.length:0;if(r>1){let i=t[0];m.moveTo(e(i[0]),e(i[1]));for(let s=1;s<r;++s)i=t[s],m.lineTo(e(i[0]),e(i[1]));m.closePath()}}g.apply(m,C);const b=m.getImageData(0,0,c.width,c.height),I=new Uint8Array(b.data);return{size:[c.width,c.height],image:new Uint32Array(I.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}_getPictureResource(t,r){const i=this._pictureMarkerCache.get(t.materialHash);if(!i)return null;const s=i.height/i.width,n=r?s>1?e(r):e(r)/s:i.width,a=r?s>1?e(r)*s:e(r):i.height;return{image:this._imageTo32Array(i,n,a),width:n,height:a}}_embedCIMLayerInVectorMarker(e,t){const i=r(t.geometry)?"CIMPolygonSymbol":"CIMLineSymbol",s=t.frame;return{type:"CIMVectorMarker",frame:s,size:s.ymax-s.ymin,markerGraphics:[{type:"CIMMarkerGraphic",geometry:t.geometry,symbol:{type:i,symbolLayers:[e]}}]}}}(null,!0);async function k(e,t={}){const{size:r,maxSize:i,node:s,opacity:a}=t,o=t.cimOptions||t,{feature:l,fieldMap:c,geometryType:m,style:h}=o,u=g(e),f=Math.min(null!=r?r:u,null!=i?i:n(120));f!==u&&(e=e.clone(),C(e,f,{preserveOutlineWidth:!0}));let y=3;e&&e.data&&e.data.symbol&&"CIMPointSymbol"!==e.data.symbol.type&&(y=1);const p=await x.rasterizeCIMSymbolAsync(e,l,c,m,{scaleFactor:y,style:h}),M=document.createElement("canvas");M.width=p.imageData.width,M.height=p.imageData.height,M.getContext("2d").putImageData(p.imageData,0,0);let d=M.width/y,b=M.height/y;if(null!=r&&(null==(null==t?void 0:t.scale)||(null==t?void 0:t.scale))){const e=d/b;d=e<=1?Math.ceil(f*e):f,b=e<=1?f:Math.ceil(f/e)}const I=new Image(d,b);return I.src=M.toDataURL(),null!=a&&(I.style.opacity=`${a}`),null!=t.effect&&(I.style.filter=t.effect),s&&s.appendChild(I),I}export{k as previewCIMSymbol}