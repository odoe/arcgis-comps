import{aT as e,bj as t,e as r,d as i,i as n,b2 as s}from"./p-9ae46e68.js";import{a as o}from"./p-fe01b82b.js";import{d as a,o as l,ar as h,as as d}from"./p-566b0715.js";var c;const u=e()({orthometric:"gravity-related-height",gravity_related_height:"gravity-related-height",ellipsoidal:"ellipsoidal"}),g=u.jsonValues.slice();t(g,"orthometric");const p=e()({meter:"meters",foot:"feet","us-foot":"us-feet","clarke-foot":"clarke-feet","clarke-yard":"clarke-yards","clarke-link":"clarke-links","sears-yard":"sears-yards","sears-foot":"sears-feet","sears-chain":"sears-chains","benoit-1895-b-chain":"benoit-1895-b-chains","indian-yard":"indian-yards","indian-1937-yard":"indian-1937-yards","gold-coast-foot":"gold-coast-feet","sears-1922-truncated-chain":"sears-1922-truncated-chains","50-kilometers":"50-kilometers","150-kilometers":"150-kilometers"});let f=c=class extends o{constructor(e){super(e),this.heightModel="gravity-related-height",this.heightUnit="meters",this.vertCRS=null}writeHeightModel(e,t,r){return u.write(e,t,r)}readHeightModel(e,t,r){return u.read(e)||(r&&r.messages&&r.messages.push(y(e,{context:r})),null)}readHeightUnit(e,t,r){return p.read(e)||(r&&r.messages&&r.messages.push(v(e,{context:r})),null)}readHeightUnitService(e,t,r){return h(e)||p.read(e)||(r&&r.messages&&r.messages.push(v(e,{context:r})),null)}readVertCRS(e,t){return t.vertCRS||t.ellipsoid||t.geoid}clone(){return new c({heightModel:this.heightModel,heightUnit:this.heightUnit,vertCRS:this.vertCRS})}equals(e){return!!e&&(this===e||this.heightModel===e.heightModel&&this.heightUnit===e.heightUnit&&this.vertCRS===e.vertCRS)}static deriveUnitFromSR(e,t){const r=d(t);return new c({heightModel:e.heightModel,heightUnit:r,vertCRS:e.vertCRS})}write(e,t){return t={origin:"web-scene",...t},super.write(e,t)}static fromJSON(e){if(!e)return null;const t=new c;return t.read(e,{origin:"web-scene"}),t}};function v(e,t){return new s("height-unit:unsupported",`Height unit of value '${e}' is not supported`,t)}function y(e,t){return new s("height-model:unsupported",`Height model of value '${e}' is not supported`,t)}r([i({type:u.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:g,default:"ellipsoidal"}}}})],f.prototype,"heightModel",void 0),r([a("web-scene","heightModel")],f.prototype,"writeHeightModel",null),r([l(["web-scene","service"],"heightModel")],f.prototype,"readHeightModel",null),r([i({type:p.apiValues,constructOnly:!0,json:{origins:{"web-scene":{type:p.jsonValues,write:p.write}}}})],f.prototype,"heightUnit",void 0),r([l("web-scene","heightUnit")],f.prototype,"readHeightUnit",null),r([l("service","heightUnit")],f.prototype,"readHeightUnitService",null),r([i({type:String,constructOnly:!0,json:{origins:{"web-scene":{write:!0}}}})],f.prototype,"vertCRS",void 0),r([l("service","vertCRS",["vertCRS","ellipsoid","geoid"])],f.prototype,"readVertCRS",null),f=c=r([n("esri.geometry.HeightModelInfo")],f);const m=f;export{m as v}