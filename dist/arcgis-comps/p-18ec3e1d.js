import{e as r,d as t,aE as e,a2 as i,i as s,a1 as a,a0 as o,A as n,Q as p}from"./p-e58503d5.js";import{a as l,b as u,u as c,d as m,c as d,p as f,o as j}from"./p-b2597a08.js";import{v as y}from"./p-c1cd5521.js";import{e as b}from"./p-7ca40eac.js";import{m as B,v}from"./p-b79fcce3.js";import{h}from"./p-54330161.js";import A from"./p-dc852195.js";import{l as g}from"./p-a87cccba.js";import"./p-53bb6ab4.js";import"./p-a9a30646.js";import"./p-e258f3af.js";import"./p-c048b814.js";import"./p-93765525.js";import"./p-765e6c28.js";import"./p-8747982c.js";import"./p-8bc9b36a.js";import"./p-7a658388.js";import"./p-e273719b.js";import"./p-74de0937.js";import"./p-2f398ed1.js";import"./p-d3105731.js";import"./p-fb38a9d0.js";import"./p-f94762ac.js";import"./p-ea916a39.js";import"./p-8a919d07.js";import"./p-efbca0ca.js";import"./p-a131049b.js";import"./p-a2324023.js";function P(r){return r.features.map((t=>{const e=o.fromJSON(r.spatialReference),i=h.fromJSON(t);return n(i.geometry)&&(i.geometry.spatialReference=e),i}))}function R(r){return A.fromJSON(r).features.map((r=>r.geometry))}let F=class extends a{constructor(r){super(r),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(r){return R(r)}readIncidents(r){return R(r)}readPointBarriers(r,t){return R(t.barriers)}readPolylineBarriers(r){return R(r)}readPolygonBarriers(r){return R(r)}readRoutes(r){return P(r)}};r([t({type:[l]})],F.prototype,"directions",void 0),r([t({type:[e]})],F.prototype,"facilities",void 0),r([i("facilities")],F.prototype,"readFacilities",null),r([t({type:[e]})],F.prototype,"incidents",void 0),r([i("incidents")],F.prototype,"readIncidents",null),r([t({type:[u]})],F.prototype,"messages",void 0),r([t({type:[e]})],F.prototype,"pointBarriers",void 0),r([i("pointBarriers",["barriers"])],F.prototype,"readPointBarriers",null),r([t({type:[B]})],F.prototype,"polylineBarriers",void 0),r([i("polylineBarriers")],F.prototype,"readPolylineBarriers",null),r([t({type:[v]})],F.prototype,"polygonBarriers",void 0),r([i("polygonBarriers")],F.prototype,"readPolygonBarriers",null),r([t({type:[h]})],F.prototype,"routes",void 0),r([i("routes")],F.prototype,"readRoutes",null),F=r([s("esri.rest.support.ClosestFacilitySolveResult")],F);const C=F,N=j({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:r=>r.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let w=class extends g{constructor(r){super(r),this.url=null}solve(r,t){return async function(r,t,e){const i=[],s=[],a={},o={},n=b(r),{path:l}=n;t.incidents&&t.incidents.features&&c(t.incidents.features,s,"incidents.features",a),t.facilities&&t.facilities.features&&c(t.facilities.features,s,"facilities.features",a),t.pointBarriers&&t.pointBarriers.features&&c(t.pointBarriers.features,s,"pointBarriers.features",a),t.polylineBarriers&&t.polylineBarriers.features&&c(t.polylineBarriers.features,s,"polylineBarriers.features",a),t.polygonBarriers&&t.polygonBarriers.features&&c(t.polygonBarriers.features,s,"polygonBarriers.features",a);const u=await y(s);for(const r in a){const t=a[r];i.push(r),o[r]=u.slice(t[0],t[1])}if(m(o,i)){let r=null;try{r=await d(l,t.apiKey,e)}catch{}r&&!r.hasZ&&f(o,i)}for(const r in o)o[r].forEach(((e,i)=>{t.get(r)[i].geometry=e}));const j={...e,query:{...n.query,...N.toQueryParams(t),f:"json"}},{data:B}=await p(`${l}/solveClosestFacility`,j);return C.fromJSON(B)}(this.url,r,t)}};r([t()],w.prototype,"url",void 0),w=r([s("esri.tasks.ClosestFacilityTask")],w);const x=w;export default x;