import{ab as e,a7 as t,B as a,W as r,b6 as i,d_ as n,aj as s}from"./p-7b6f6c18.js";import"./p-227a5838.js";async function o(t,a,r,i={}){let n,s;const o={edits:r,result:new Promise(((e,t)=>{n=e,s=t}))};t.emit("apply-edits",o);try{var l;const{results:s,edits:o}=await d(t,a,r,i),u=t=>t.filter((e=>!e.error)).map(e),p={edits:o,addedFeatures:u(s.addFeatureResults),updatedFeatures:u(s.updateFeatureResults),deletedFeatures:u(s.deleteFeatureResults),addedAttachments:u(s.addAttachmentResults),updatedAttachments:u(s.updateAttachmentResults),deletedAttachments:u(s.deleteAttachmentResults)};return null!=(l=s.editedFeatureResults)&&l.length&&(p.editedFeatures=s.editedFeatureResults),(p.addedFeatures.length||p.updatedFeatures.length||p.deletedFeatures.length||p.addedAttachments.length||p.updatedAttachments.length||p.deletedAttachments.length)&&t.emit("edits",p),n(p),s}catch(e){throw s(e),e}}async function d(e,r,i,n){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(r))return Promise.reject(new t(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e}));if(!e.editingEnabled)throw new t(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:s,options:o}=await async function(e,r,i){const n=r&&(r.addAttachments||r.updateAttachments||r.deleteAttachments);if(!r||!(r&&(r.addFeatures||r.updateFeatures||r.deleteFeatures))&&!n)throw new t(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&i&&i.gdbVersion)throw new t(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&i&&i.rollbackOnFailureEnabled)throw new t(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&i&&i.globalIdUsed)throw new t(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&n)throw new t(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!i||!i.globalIdUsed)&&n)throw new t(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const s={...i};if(null!=s.rollbackOnFailureEnabled||e.capabilities.editing.supportsRollbackOnFailure||(s.rollbackOnFailureEnabled=!0),!1===s.rollbackOnFailureEnabled&&"original-and-current-features"===s.returnServiceEditsOption)throw new t(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true.");if(!e.capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference&&s.returnServiceEditsInSourceSR)throw new t(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(s.returnServiceEditsInSourceSR&&"original-and-current-features"!==s.returnServiceEditsOption)throw new t(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsOption' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const o={...r};if(o.addFeatures=r&&a.isCollection(r.addFeatures)?r.addFeatures.toArray():o.addFeatures||[],o.updateFeatures=r&&a.isCollection(r.updateFeatures)?r.updateFeatures.toArray():o.updateFeatures||[],o.deleteFeatures=r&&a.isCollection(r.deleteFeatures)?r.deleteFeatures.toArray():o.deleteFeatures||[],o.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new t(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(o.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new t(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(o.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new t(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");o.addAttachments=o.addAttachments||[],o.updateAttachments=o.updateAttachments||[],o.deleteAttachments=o.deleteAttachments||[],o.addFeatures=o.addFeatures.map(h),o.updateFeatures=o.updateFeatures.map(h);const d=i&&i.globalIdUsed;return o.addFeatures.forEach((t=>function(e,t,a){l(e,t,a)}(t,e,d))),o.updateFeatures.forEach((t=>u(t,e,d))),o.deleteFeatures.forEach((t=>function(e,t,a){l(e,t,a)}(t,e,d))),o.addAttachments.forEach((t=>p(t,e))),o.updateAttachments.forEach((t=>p(t,e))),{edits:await c(o),options:s}}(e,i,n);return s.addFeatures.length||s.updateFeatures.length||s.deleteFeatures.length||s.addAttachments.length||s.updateAttachments.length||s.deleteAttachments.length?{edits:s,results:await r.applyEdits(s,o)}:{edits:s,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}function l(e,a,i){if(i){if("attributes"in e&&!e.attributes[a.globalIdField])throw new t(`${a.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new t(`${a.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&r(e.geometry)){if(e.geometry.hasZ&&!1===a.capabilities.data.supportsZ)throw new t(`${a.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===a.capabilities.data.supportsM)throw new t(`${a.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function u(e,a,i){if(l(e,a,i),"geometry"in e&&r(e.geometry)&&!a.capabilities.editing.supportsGeometryUpdate)throw new t(`${a.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}function p(e,a){const{feature:r,attachment:n}=e;if(!r||"attributes"in r&&!r.attributes[a.globalIdField])throw new t(`${a.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in r)&&!r.globalId)throw new t(`${a.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!n.globalId)throw new t(`${a.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!n.data&&!n.uploadId)throw new t(`${a.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(n.data instanceof File&&n.data.name||n.name))throw new t(`${a.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!a.capabilities.editing.supportsUploadWithItemId&&n.uploadId)throw new t(`${a.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof n.data){const e=i(n.data);if(e&&!e.isBase64)throw new t(`${a.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}async function c(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),i=await n(r),s=t.length,o=a.length;return i.slice(0,s).forEach(((t,a)=>e.addFeatures[a].geometry=t)),i.slice(s,s+o).forEach(((t,a)=>e.updateFeatures[a].geometry=t)),e}function h(e){const t=new s;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}export{o as applyEdits}