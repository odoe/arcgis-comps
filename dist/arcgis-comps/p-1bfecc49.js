import{bm as e,aK as i,E as t,dZ as s,a8 as r,a7 as a,N as n,h3 as o,T as l,e2 as u,al as d,e as p,d as h,i as y,W as c,iv as m,iw as f,ix as g,i0 as w,iy as v,i2 as F,i1 as j,e6 as O,e7 as b,aG as I,ec as S,ad as q,iz as R,iA as x,eh as T,aQ as P,aI as E,i5 as U,gh as C,ii as D,iB as W,aO as X,iC as Y,iD as N,iE as L,iu as Q,aT as V,jM as k,i8 as z,ay as B,iG as G,i7 as J,eb as M,i9 as _}from"./p-7b6f6c18.js";import{a as A,u as K}from"./p-a666c421.js";import{U as Z,W as H,q as $,V as ee,x as ie}from"./p-7c5bdc61.js";import"./p-227a5838.js";import"./p-06d309e6.js";import"./p-761b5073.js";import"./p-9a8fa752.js";let te=class extends(e(i)){constructor(){super(...arguments),this.capabilities=A(!1,!1),this.type="wfs",this.refresh=t((async e=>{await this.load();const{extent:i}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=i,{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){var i;const t=null!=(i=c(e)&&e.signal)?i:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,i={}){await this.load(i);const t=await this._connection.invoke("queryFeatures",e?e.toJSON():null,i);return s.fromJSON(t)}async queryFeaturesJSON(e,i={}){return await this.load(i),this._connection.invoke("queryFeatures",e?e.toJSON():null,i)}async queryFeatureCount(e,i={}){return await this.load(i),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,i)}async queryObjectIds(e,i={}){return await this.load(i),this._connection.invoke("queryObjectIds",e?e.toJSON():null,i)}async queryExtent(e,i={}){await this.load(i);const t=await this._connection.invoke("queryExtent",e?e.toJSON():null,i);return{count:t.count,extent:r.fromJSON(t.extent)}}async querySnapping(e,i={}){return await this.load(i),this._connection.invoke("querySnapping",e,i)}async _createLoadOptions(e){const{url:i,customParameters:t,name:s,namespaceUri:r,spatialReference:l,fields:u,geometryType:d,swapXY:p}=this.layer;if(!i)throw new a("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await Z(i,{customParameters:t,...e}));const h=["fields","geometryType","name","namespaceUri","spatialReference","swapXY"].some((e=>null==this.layer[e]))?await H(this.wfsCapabilities,s,r,{spatialReference:l,customParameters:t,signal:null==e?void 0:e.signal}):{...$(u),geometryType:d,name:s,namespaceUri:r,spatialReference:l,swapXY:p},y=n(ee(this.wfsCapabilities.readFeatureTypes(),h.name,h.namespaceUri)),c=o.toJSON(h.geometryType);return{customParameters:t,featureType:y,fields:h.fields.map((e=>e.toJSON())),geometryField:h.geometryField,geometryType:c,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:h.objectIdField,spatialReference:h.spatialReference.toJSON(),swapXY:h.swapXY}}async _startWorker(e){const[i,t]=await l([this._createLoadOptions(e),u("WFSSourceWorker",{...e,strategy:d("feature-layers-workers")?"dedicated":"local"})]),s=i.error||t.error||null,r=t.value||null;if(s)throw r&&r.close(),s;const a=i.value;this._connection=t.value;const{extent:n}=await this._connection.invoke("load",a,e);this.sourceJSON={extent:n,fields:a.fields,geometryType:a.geometryType,objectIdField:a.objectIdField,geometryField:a.geometryField,drawingInfo:K(a.geometryType),name:a.featureType.title,wfsInfo:{name:a.featureType.name,featureUrl:a.getFeatureUrl,maxFeatures:3e3,swapXY:a.swapXY,supportedSpatialReferences:a.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:a.featureType.namespaceUri}}}};p([h()],te.prototype,"capabilities",void 0),p([h({constructOnly:!0})],te.prototype,"layer",void 0),p([h()],te.prototype,"sourceJSON",void 0),p([h()],te.prototype,"type",void 0),p([h()],te.prototype,"wfsCapabilities",void 0),te=p([y("esri.layers.graphics.sources.WFSSource")],te);const se=te;var re;const ae=_();let ne=re=class extends(m(f(g(w(v(F(j(O(b(I(S))))))))))){constructor(e){super(e),this.capabilities=null,this.copyright=null,this.customParameters=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxFeatures=3e3,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new se({layer:this}),this.spatialReference=q.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}static fromWFSLayerInfo(e){const{customParameters:i,fields:t,geometryField:s,geometryType:r,name:a,namespaceUri:n,objectIdField:o,spatialReference:l,swapXY:u,url:d,wfsCapabilities:p}=e;return new re({customParameters:i,fields:t,geometryField:s,geometryType:r,name:a,namespaceUri:n,objectIdField:o,spatialReference:l,swapXY:u,url:d,wfsCapabilities:p})}destroy(){var e;null==(e=this.source)||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),R(this.renderer,this.fieldsIndex),x(this.timeInfo,this.fieldsIndex)}))),Promise.resolve(this)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,i,t){const s=e.filter((e=>e.name!==ie));this.geometryField&&s.unshift(new T({name:this.geometryField,alias:this.geometryField,type:"geometry"})),P(t,s.map((e=>e.toJSON())),i)}get parsedUrl(){return this.url?E(this.url):null}set renderer(e){R(e,this.fieldsIndex),this._set("renderer",e)}createPopupTemplate(e){return U(this,e)}createQuery(){const e=new C;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:i,timeExtent:t}=this;return e.timeExtent=null!=i&&null!=t?t.offset(-i.value,i.unit):t||null,e}getFieldDomain(e,i){var t;return null==(t=this.getField(e))?void 0:t.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,i){return this.load().then((()=>this.source.queryFeatures(C.from(e)||this.createQuery(),i))).then((e=>{if(null!=e&&e.features)for(const i of e.features)i.layer=i.sourceLayer=this;return e}))}queryObjectIds(e,i){return this.load().then((()=>this.source.queryObjectIds(C.from(e)||this.createQuery(),i)))}queryFeatureCount(e,i){return this.load().then((()=>this.source.queryFeatureCount(C.from(e)||this.createQuery(),i)))}queryExtent(e,i){return this.load().then((()=>this.source.queryExtent(C.from(e)||this.createQuery(),i)))}async hasDataChanged(){try{const{dataChanged:e,updates:i}=await this.source.refresh(this.customParameters);return c(i)&&this.read(i,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};p([h({readOnly:!0,aliasOf:"source.capabilities"})],ne.prototype,"capabilities",void 0),p([h({type:String})],ne.prototype,"copyright",void 0),p([h({readOnly:!0})],ne.prototype,"createQueryVersion",null),p([h({json:{name:"wfsInfo.customParameters",write:{ignoreOrigin:!0}}})],ne.prototype,"customParameters",void 0),p([h({readOnly:!0})],ne.prototype,"defaultPopupTemplate",null),p([h({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],ne.prototype,"definitionExpression",void 0),p([h({type:String})],ne.prototype,"displayField",void 0),p([h(D)],ne.prototype,"elevationInfo",void 0),p([h(W)],ne.prototype,"featureReduction",void 0),p([h({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"featureUrl",void 0),p([h({type:[T],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],ne.prototype,"fields",void 0),p([X("fields")],ne.prototype,"writeFields",null),p([h(ae.fieldsIndex)],ne.prototype,"fieldsIndex",void 0),p([h({type:r,json:{name:"extent"}})],ne.prototype,"fullExtent",void 0),p([h()],ne.prototype,"geometryField",void 0),p([h({type:String,json:{read:{source:"layerDefinition.geometryType",reader:o.read},write:{target:"layerDefinition.geometryType",writer:o.write,ignoreOrigin:!0},origins:{service:{read:o.read}}}})],ne.prototype,"geometryType",void 0),p([h({type:String})],ne.prototype,"id",void 0),p([h(Y)],ne.prototype,"labelsVisible",void 0),p([h({type:[N],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:L},write:!0}})],ne.prototype,"labelingInfo",void 0),p([h(Q)],ne.prototype,"legendEnabled",void 0),p([h({type:["show","hide"]})],ne.prototype,"listMode",void 0),p([h({type:String})],ne.prototype,"objectIdField",void 0),p([h({type:["WFS"]})],ne.prototype,"operationalLayerType",void 0),p([h({type:V,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"maxFeatures",void 0),p([h({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],ne.prototype,"mode",void 0),p([h({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"name",void 0),p([h({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"namespaceUri",void 0),p([h(k)],ne.prototype,"opacity",void 0),p([h(ae.outFields)],ne.prototype,"outFields",void 0),p([h({readOnly:!0})],ne.prototype,"parsedUrl",null),p([h(z)],ne.prototype,"popupEnabled",void 0),p([h({type:B,json:{name:"popupInfo",write:!0}})],ne.prototype,"popupTemplate",void 0),p([h({types:G,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:J,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],ne.prototype,"renderer",null),p([h({type:Boolean,json:{write:!0,name:"screenSizePerspective"}})],ne.prototype,"screenSizePerspectiveEnabled",void 0),p([h({readOnly:!0})],ne.prototype,"source",void 0),p([h({type:q,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],ne.prototype,"spatialReference",void 0),p([h({readOnly:!0,type:[V],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"spatialReferences",void 0),p([h({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"swapXY",void 0),p([h({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],ne.prototype,"title",void 0),p([h({json:{read:!1},readOnly:!0})],ne.prototype,"type",void 0),p([h(M)],ne.prototype,"url",void 0),p([h({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"version",void 0),p([h({aliasOf:"source.wfsCapabilities"})],ne.prototype,"wfsCapabilities",void 0),ne=re=p([y("esri.layers.WFSLayer")],ne);const oe=ne;export default oe;