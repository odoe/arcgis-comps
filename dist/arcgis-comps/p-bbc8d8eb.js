import{e,d as i,a2 as r,_ as t,a0 as s,i as l,Q as a,Z as n,h as o,c as u,s as p,bj as d,ah as y,S as c,d4 as h,b6 as f,D as b,aT as m,a3 as v,bk as g,f as w,b7 as S,A as I,b5 as j}from"./p-e58503d5.js";import{r as x}from"./p-a4587ab0.js";import{j as D,p as L}from"./p-1ab449fc.js";import{p as M}from"./p-e94b450b.js";import"./p-b79fcce3.js";import{M as F}from"./p-93765525.js";import"./p-0e784e4d.js";import"./p-5ce39624.js";import{m as P,n as O}from"./p-51a17e75.js";import"./p-dbdf15fc.js";import{x as T}from"./p-8bc9b36a.js";import{a as E}from"./p-7731c620.js";import{r as V}from"./p-8747982c.js";import{m as N}from"./p-efbca0ca.js";import{l as C}from"./p-d208934e.js";import{m as k}from"./p-120b7410.js";import{y as $}from"./p-a131049b.js";import{d as q}from"./p-612de336.js";import{E as _}from"./p-0edb3309.js";import{p as A}from"./p-91fe06d4.js";import{c as B,b as Q,K as G}from"./p-5e833dfc.js";import{a as J}from"./p-15a9486c.js";import{l as U}from"./p-03d6250d.js";import{i as K}from"./p-2f9d204e.js";const R=u=>{let p=class extends u{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(e,i){const r=i.capabilities&&i.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!r)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const t=this.type,s=-1!==r.indexOf("query"),l=-1!==r.indexOf("map"),a=!!i.exportTilesAllowed,n=-1!==r.indexOf("tilemap"),o="tile"!==t&&!!i.supportsDynamicLayers,u="tile"!==t&&(!i.tileInfo||o),p="tile"!==t&&(!i.tileInfo||o),d="tile"!==t,y=!!i.cimVersion&&x.parse(i.cimVersion).since(1,4);return{operations:{supportsQuery:s,supportsExportMap:l,supportsExportTiles:a,supportsTileMap:n},exportMap:l?{supportsArcadeExpressionForLabeling:y,supportsSublayersChanges:d,supportsDynamicLayers:o,supportsSublayerVisibility:u,supportsSublayerDefinitionExpression:p}:null,exportTiles:a?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(e,i){let r=i.currentVersion;return r||(r=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),r}async fetchSublayerInfo(e,i){return await this.fetchAllLayersAndTables(i),this._allLayersAndTablesMap.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=a(n(this.url).path+"/layers",{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{this._allLayersAndTablesMap=new Map;for(const i of e.data.layers)this._allLayersAndTablesMap.set(i.id,i);return{result:e.data}}),(e=>({error:e}))));const i=await this._allLayersAndTablesPromise;if(o(e),"result"in i)return i.result;throw i.error}};return e([i({readOnly:!0})],p.prototype,"capabilities",void 0),e([r("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],p.prototype,"readCapabilities",null),e([i({json:{read:{source:"copyrightText"}}})],p.prototype,"copyright",void 0),e([i({type:t})],p.prototype,"fullExtent",void 0),e([i(D)],p.prototype,"id",void 0),e([i({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],p.prototype,"legendEnabled",void 0),e([i(L)],p.prototype,"popupEnabled",void 0),e([i({type:s})],p.prototype,"spatialReference",void 0),e([i()],p.prototype,"version",void 0),e([r("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],p.prototype,"readVersion",null),p=e([l("esri.layers.mixins.ArcGISMapService")],p),p};var W;function X(e){return e&&"esriSMS"===e.type}function Z(e,i,r){var t;const s=this.originIdOf(i)>=S(r.origin);return{ignoreOrigin:!0,allowNull:s,enabled:!!r&&"map-image"===(null==(t=r.layer)?void 0:t.type)&&(r.writeSublayerStructure||s)}}function z(e,i,r){var t;return{enabled:!!r&&"tile"===(null==(t=r.layer)?void 0:t.type)&&this._isOverridden(i)}}function H(e,i,r){return{ignoreOrigin:!0,enabled:r&&r.writeSublayerStructure||!1}}function Y(e,i,r){return{ignoreOrigin:!0,enabled:!!r&&(r.writeSublayerStructure||this.originIdOf(i)>=S(r.origin))}}const ee=u.getLogger("esri.layers.support.Sublayer");let ie=0;const re=new Set;re.add("layer"),re.add("parent"),re.add("loaded"),re.add("loadStatus"),re.add("loadError"),re.add("loadWarnings");let te=W=class extends(E(C(V(N)))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null}async load(e){return this.addResolvingPromise((async()=>{var i;if(!this.layer&&!this.url)throw new p("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let r=null;if(!this.layer||this.originIdOf("url")>2||"data-layer"===(null==(i=this.source)?void 0:i.type))r=(await a(this.url,{responseType:"json",query:{f:"json"},...e})).data;else{var t;let i=this.id;"map-layer"===(null==(t=this.source)?void 0:t.type)&&(i=this.source.mapLayerId),r=await this.layer.fetchSublayerInfo(i,e)}r&&(this.sourceJSON=r,this.read({layerDefinition:r},{origin:"service"}))})()),this}readCapabilities(e,i){const r=(e=(i=i.layerDefinition||i).capabilities||e)?e.toLowerCase().split(",").map((e=>e.trim())):[];return{exportMap:{supportsModification:!!i.canModifyLayer},operations:{supportsQuery:-1!==r.indexOf("query")}}}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new q(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,i){if((i=i.layerDefinition||i).globalIdField)return i.globalIdField;if(i.fields)for(const e of i.fields)if("esriFieldTypeGlobalID"===e.type)return e.name}get id(){const e=this._get("id");return null==e?ie++:e}set id(e){this._get("id")!==e&&(!1!==this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,i,r,t){e&&e.length&&(i.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},t)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((i=>i.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,i){return i.minScale||i.layerDefinition&&i.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,i){return i.maxScale||i.layerDefinition&&i.layerDefinition.maxScale||0}readObjectIdFieldFromService(e,i){if((i=i.layerDefinition||i).objectIdField)return i.objectIdField;if(i.fields)for(const e of i.fields)if("esriFieldTypeOID"===e.type)return e.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,i){const r=i.layerDefinition;return 1-.01*(null!=r.transparency?r.transparency:r.drawingInfo.transparency)}writeOpacity(e,i,r,t){i.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,i){i.parentLayerId=this.parent&&this.parent!==this.layer?d(this.parent.id):-1}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){if(e)for(const i of e.getSymbols())if(T(i)){ee.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new B({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return y(c.ofType(W),e)}writeSublayers(e,i,r){this.get("sublayers.length")&&(i[r]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTypeIdField(e,i){let r=(i=i.layerDefinition||i).typeIdField;if(r&&i.fields){r=r.toLowerCase();const e=i.fields.find((e=>e.name.toLowerCase()===r));e&&(r=e.name)}return null}get url(){var e,i;const r=null!=(e=null==(i=this.layer)?void 0:i.parsedUrl)?e:this._lastParsedUrl,t=this.source;if(!r)return null;if(this._lastParsedUrl=r,"map-layer"===(null==t?void 0:t.type))return`${r.path}/${t.mapLayerId}`;const s={layer:JSON.stringify({source:this.source})};return`${r.path}/dynamicLayer?${h(s)}`}set url(e){e?this._override("url",e):this._clearOverride("url")}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,i,r,t){i[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=f(this),i=new W;return f(i).store=e.clone(re),this.commitProperty("url"),i._lastParsedUrl=this._lastParsedUrl,i}createPopupTemplate(e){return J(this,e)}createQuery(){return new Q({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var e,i;if(this.hasOwnProperty("sublayers"))return null;const r=null==(e=this.layer)?void 0:e.parsedUrl,t=new((await import("./p-dae095dd.js").then((function(e){return e.F}))).default)({url:r.path});return r&&this.source&&("map-layer"===this.source.type?t.layerId=this.source.mapLayerId:t.dynamicDataSource=this.source),null!=this.layer.refreshInterval&&(t.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(t.definitionExpression=this.definitionExpression),this.floorInfo&&(t.floorInfo=b(this.floorInfo)),this.originIdOf("labelingInfo")>2&&(t.labelingInfo=b(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(t.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(t.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(t.visible=this.visible),this.originIdOf("minScale")>0&&(t.minScale=this.minScale),this.originIdOf("maxScale")>0&&(t.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(t.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(t.popupTemplate=b(this.popupTemplate)),this.originIdOf("renderer")>2&&(t.renderer=b(this.renderer)),"data-layer"===(null==(i=this.source)?void 0:i.type)&&(t.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(t.title=this.title),"map-image"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(t.customParameters=this.layer.customParameters),"tile"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(t.customParameters=this.layer.customParameters),t}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:i,types:r}=this;if(!i||!e)return null;const t=e.attributes?e.attributes[i]:void 0;if(null==t)return null;let s=null;return r.some((e=>{const{id:i}=e;return null!=i&&(i.toString()===t.toString()&&(s=e),!!s)})),s}getFieldDomain(e,i){const r=this.getFeatureType(i&&i.feature);if(r){const i=r.domains&&r.domains[e];if(i&&"inherited"!==i.type)return i}return this._getLayerDomain(e)}async queryFeatures(e=this.createQuery(),i){var r,t,s,l;if(await this.load(),!this.get("capabilities.operations.supportsQuery"))throw new p("Sublayer.queryFeatures","this layer doesn't support queries.");const[{executeQuery:a},{default:n}]=await Promise.all([import("./p-9087b4d3.js").then((function(e){return e.q})),import("./p-dc852195.js")]),o=await a(this.url,Q.from(e),null!=(r=null==(t=this.layer)?void 0:t.spatialReference)?r:null,{...i,query:{...null==(s=this.layer)?void 0:s.customParameters,token:null==(l=this.layer)?void 0:l.apiKey}}),u=n.fromJSON(o.data);if(null!=u&&u.features)for(const e of u.features)e.sourceLayer=this;return u}toExportImageJSON(e){var i;const r={id:this.id,source:(null==(i=this.source)?void 0:i.toJSON())||{mapLayerId:this.id,type:"mapLayer"}};if(this.definitionExpression){const i=I(e)?U(e,this):this.definitionExpression;r.definitionExpression=i}else I(e)&&(r.definitionExpression=e);const t=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,i)=>(e[i]=this.originIdOf(i),e)),{});if(Object.keys(t).some((e=>t[e]>2))){const e=r.drawingInfo={};t.renderer>2&&(e.renderer=this.renderer?this.renderer.toJSON():null),t.labelsVisible>2&&(e.showLabels=this.labelsVisible),this.labelsVisible&&t.labelingInfo>2&&(e.labelingInfo=this.labelingInfo?this.labelingInfo.map((e=>e.write({},{origin:"service",layer:this.layer}))):null,e.showLabels=!0),t.opacity>2&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.color=e.outline&&e.outline.color?e.outline.color:[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,i){if(e){const r="uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:[];for(const e of r)X(e.symbol)&&i(e.symbol);"symbol"in e&&X(e.symbol)&&i(e.symbol),"defaultSymbol"in e&&X(e.defaultSymbol)&&i(e.defaultSymbol)}}_setAndNotifyLayer(e,i){const r=this.layer,t=this._get(e);let s,l;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",l="supportsModification"}const a=f(this).getDefaultOrigin();if("service"!==a){if(s&&!1===this.get(`layer.capabilities.exportMap.${s}`))return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(l&&!1===this.get(`capabilities.exportMap.${l}`))return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${l}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,i),"service"!==a&&t!==i&&r&&r.emit&&r.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,i){i&&(i.forEach((e=>{e.parent=null,e.layer=null})),this.handles.removeAll()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null})),e.on("before-changes",(e=>{const i=this.get("layer.capabilities.exportMap.supportsSublayersChanges");null==i||i||(ee.error(new p("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,i){ee.error(new p("sublayer:locked",`Property '${e}' can't be changed on Sublayer from the layer '${this.layer.id}'`,{reason:i,sublayer:this,layer:this.layer}))}_getLayerDomain(e){const i=this.fieldsIndex.get(e);return i?i.domain:null}};te.test={isMapImageLayerOverridePolicy:e=>e===H||e===Z,isTileImageLayerOverridePolicy:e=>e===z},e([i({readOnly:!0})],te.prototype,"capabilities",void 0),e([r("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],te.prototype,"readCapabilities",null),e([i({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:Z}}})],te.prototype,"definitionExpression",null),e([i({type:[$],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],te.prototype,"fields",void 0),e([i({readOnly:!0})],te.prototype,"fieldsIndex",null),e([i({type:A,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:Z},origins:{"web-scene":{read:!1,write:!1}}}})],te.prototype,"floorInfo",null),e([i({type:t,json:{read:{source:"layerDefinition.extent"}}})],te.prototype,"fullExtent",void 0),e([i({type:String})],te.prototype,"globalIdField",void 0),e([r("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],te.prototype,"readGlobalIdFieldFromService",null),e([i({type:m,json:{write:{ignoreOrigin:!0}}})],te.prototype,"id",null),e([i({value:null,type:[_],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:H}}})],te.prototype,"labelingInfo",null),e([v("labelingInfo")],te.prototype,"writeLabelingInfo",null),e([i({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:H}}})],te.prototype,"labelsVisible",null),e([i({value:null})],te.prototype,"layer",null),e([i({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:Y}}})],te.prototype,"legendEnabled",void 0),e([i({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],te.prototype,"listMode",null),e([i({type:Number,value:0,json:{write:{overridePolicy:H}}})],te.prototype,"minScale",null),e([r("minScale",["minScale","layerDefinition.minScale"])],te.prototype,"readMinScale",null),e([i({type:Number,value:0,json:{write:{overridePolicy:H}}})],te.prototype,"maxScale",null),e([r("maxScale",["maxScale","layerDefinition.maxScale"])],te.prototype,"readMaxScale",null),e([i({type:String})],te.prototype,"objectIdField",void 0),e([r("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],te.prototype,"readObjectIdFieldFromService",null),e([i({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:H}}})],te.prototype,"opacity",null),e([r("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],te.prototype,"readOpacity",null),e([v("opacity")],te.prototype,"writeOpacity",null),e([i({json:{type:m,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:H}}})],te.prototype,"parent",void 0),e([v("parent")],te.prototype,"writeParent",null),e([i({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,i)=>!i.disablePopup},write:{target:"disablePopup",overridePolicy:Y,writer(e,i,r){i[r]=!e}}}})],te.prototype,"popupEnabled",void 0),e([i({type:F,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:Y}}})],te.prototype,"popupTemplate",void 0),e([i({readOnly:!0})],te.prototype,"defaultPopupTemplate",null),e([i({types:P,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:H},origins:{"web-scene":{types:O,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:H}}}}})],te.prototype,"renderer",null),e([i({types:{key:"type",base:null,typeMap:{"data-layer":G,"map-layer":B}},cast(e){if(e){if("mapLayerId"in e)return g(B,e);if("dataSource"in e)return g(G,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:H}}})],te.prototype,"source",null),e([i()],te.prototype,"sourceJSON",void 0),e([i({value:null,json:{type:[m],write:{target:"subLayerIds",allowNull:!0,overridePolicy:H}}})],te.prototype,"sublayers",null),e([w("sublayers")],te.prototype,"castSublayers",null),e([v("sublayers")],te.prototype,"writeSublayers",null),e([i({type:String,json:{name:"name",write:{overridePolicy:Y}}})],te.prototype,"title",void 0),e([i({type:String})],te.prototype,"typeIdField",void 0),e([r("typeIdField",["layerDefinition.typeIdField"])],te.prototype,"readTypeIdField",null),e([i({type:[k],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],te.prototype,"types",void 0),e([i({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:z}}})],te.prototype,"url",null),e([i({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:H}}})],te.prototype,"visible",null),e([v("visible")],te.prototype,"writeVisible",null),te=W=e([l("esri.layers.support.Sublayer")],te);const se=te,le=u.getLogger("esri.layers.TileLayer"),ae=c.ofType(se);function ne(e,i){e&&e.forEach((e=>{i(e),e.sublayers&&e.sublayers.length&&ne(e.sublayers,i)}))}const oe=r=>{let t=class extends r{constructor(...e){super(...e),this.allSublayers=new M({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{}},this.handles.add(this.watch("sublayers",((e,i)=>this._handleSublayersChange(e,i)),!0))}readSublayers(e,i){if(!i||!e)return;const{sublayersSourceJSON:r}=this,t=S(i.origin);if(t<2)return;if(r[t]={context:i,visibleLayers:e.visibleLayers||r[t].visibleLayers,layers:e.layers||r[t].layers},t>2)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:s,origin:l}=this.createSublayersForOrigin("web-document"),a=f(this);a.setDefaultOrigin(l),this._set("sublayers",new ae(s)),a.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((i=>i.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const i=S("web-document"===e?"web-map":e);let r=2,t=this.sublayersSourceJSON[2].layers,s=this.sublayersSourceJSON[2].context,l=null;const a=[3,4,5].filter((e=>e<=i));for(const e of a){const i=this.sublayersSourceJSON[e];K(i.layers)&&(r=e,t=i.layers,s=i.context,i.visibleLayers&&(l={visibleLayers:i.visibleLayers,context:i.context}))}const n=[3,4,5].filter((e=>e>r&&e<=i));let o=null;for(const e of n){const{layers:i,visibleLayers:r,context:t}=this.sublayersSourceJSON[e];i&&(o={layers:i,context:t}),r&&(l={visibleLayers:r,context:t})}const u=function(e,i){const r=[],t={};return e?(e.forEach((e=>{const s=new se;if(s.read(e,i),t[s.id]=s,null!=e.parentLayerId&&-1!==e.parentLayerId){const i=t[e.parentLayerId];i.sublayers||(i.sublayers=[]),i.sublayers.unshift(s)}else r.unshift(s)})),r):r}(t,s),p=new Map,d=new Set;if(o)for(const e of o.layers)p.set(e.id,e);if(l)for(const e of l.visibleLayers)d.add(e);return ne(u,(e=>{o&&e.read(p.get(e.id),o.context),l&&e.read({defaultVisibility:d.has(e.id)},l.context)})),{origin:j(r),sublayers:new ae({items:u})}}read(e,i){super.read(e,i),this.readSublayers(e,i)}_handleSublayersChange(e,i){i&&(i.forEach((e=>{e.parent=null,e.layer=null})),this.handles.remove("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.handles.add(e.on("before-changes",(e=>{le.error(new p("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return e([i({readOnly:!0})],t.prototype,"allSublayers",void 0),e([i({readOnly:!0,type:c.ofType(se)})],t.prototype,"serviceSublayers",void 0),e([i({value:null,type:ae,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),e([i({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),t=e([l("esri.layers.mixins.SublayersOwner")],t),t};export{se as K,oe as f,R as y}