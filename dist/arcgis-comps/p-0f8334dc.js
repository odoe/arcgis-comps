import{e,d as t,f as n,i,p as s,y as o,g as r,l,aC as a,o as u,z as d,A as h,M as c,c as m,at as p,ah as b,af as v,s as w,D as _,_ as f,a2 as y,a3 as x,a1 as k}from"./p-e58503d5.js";import{a as C}from"./p-7731c620.js";import{f as g}from"./p-78a21eae.js";import{u as M}from"./p-eee9ef50.js";import{r as I}from"./p-8747982c.js";import{c as $}from"./p-31225789.js";var j;let G=j=class extends s{constructor(e){super(e),this.autoCloseMenu=!1,this.iconClass=null,this.items=null,this.label=null,this.open=!1,this.selected=!1,this.selectionEnabled=!1,this.clickFunction=null}castItems(e){return e?e.map((e=>e instanceof j?e:new j(e))):null}};e([t()],G.prototype,"autoCloseMenu",void 0),e([t()],G.prototype,"iconClass",void 0),e([t()],G.prototype,"items",void 0),e([n("items")],G.prototype,"castItems",null),e([t()],G.prototype,"label",void 0),e([t()],G.prototype,"open",void 0),e([t()],G.prototype,"selected",void 0),e([t()],G.prototype,"selectionEnabled",void 0),e([t()],G.prototype,"clickFunction",void 0),G=j=e([i("esri.widgets.FeatureTable.Grid.support.ButtonMenuItem")],G);const N=G;let B=class extends s{constructor(e){super(e),this.items=null,this.open=!1}castItems(e){return e?e.map((e=>e instanceof N?e:new N(e))):null}};e([t()],B.prototype,"items",void 0),e([n("items")],B.prototype,"castItems",null),e([t()],B.prototype,"open",void 0),B=e([i("esri.widgets.FeatureTable.Grid.support.ButtonMenuViewModel")],B);const F=B;let T=class extends(C(d)){constructor(e,t){super(e,t),this._menuContentNode=null,this._popover=null,this._rootNode=null,this.iconClass=null,this.items=null,this.label=null,this.open=!1,this.viewModel=new F,this._handleOutsideClick=this._handleOutsideClick.bind(this)}postInitialize(){this._popover=new g({owner:this,open:!!this.open,placement:o(this.container)?"bottom-start":"bottom-end",renderContentFunction:this.renderMenuContent,anchorElement:this._rootNode}),this.handles.add([r(this,"open",(e=>this._popover.set("open",e)))]),document.addEventListener("click",this._handleOutsideClick)}destroy(){var e;null==(e=this._popover)||e.destroy(),this._popover=null,document.removeEventListener("click",this._handleOutsideClick)}_handleOutsideClick(e){var t,n;if(!this.open||!this._rootNode||!this._menuContentNode)return;const i=e.target;null!=(t=this._menuContentNode)&&t.contains(i)||null!=(n=this._rootNode)&&n.contains(i)||(this.open=!1)}render(){return l("div",{afterCreate:this._afterRootNodeCreate,bind:this,"data-node-ref":"_rootNode",class:this.classes("esri-button-menu","esri-widget"),key:"menu"},this.renderMenuButton())}renderMenuButton(){const{iconClass:e,id:t,label:n,open:i}=this,s=this.classes(["esri-button-menu__button",e||"esri-icon-menu",i?"esri-button-menu__button--selected":null]);return l("button",{"aria-pressed":i.toString(),"aria-controls":`${t}-menu`,"aria-expanded":i.toString(),"aria-haspopup":"true","aria-label":n,bind:this,class:s,id:`${t}-button`,title:n,selected:i,onclick:this._toggleOpen,tabindex:"0",type:"button"})}renderMenuContent(){var e;const{id:t,open:n}=this;return l("div",{afterCreate:this._afterMenuContentNodeCreate,bind:this,class:"esri-button-menu__content","data-node-ref":"_menuContentNode",key:"esri-button-menu-content",hidden:!n},l("ul",{"aria-labelledby":`${t}-button`,bind:this,class:"esri-button-menu__item-wrapper",id:`${t}-menu`,role:"menu"},(null==(e=this.items)?void 0:e.length)&&this.renderItems()))}renderItems(){var e;return null==(e=this.items)?void 0:e.map(((e,t)=>this.renderItem(e,t)))}renderItem(e,t,n){var i;const s=h(n)?`${this.id}-menu-item-${t}-${n}`:`${this.id}-menu-item-${t}`,o=`${s}-label`,r=this.classes("esri-button-menu__item",e.selectionEnabled?"esri-button-menu__item--selectable":null,e.selectionEnabled&&e.selected?"esri-button-menu__item--selected":null);return l("li",{afterCreate:this._afterMenuItemCreate,bind:this,class:r,"data-item-index":t,"data-item-subIndex":n,for:s,key:s,onkeydown:t=>this._handleMenuItemKeydown(t,e),onclick:t=>this._handleMenuItemInteraction(t,e),role:"menuitem",tabindex:"0"},l("input",{disabled:!0,checked:e.selected,class:"esri-button-menu__checkbox",id:s,name:s,tabindex:"-1",type:"checkbox"}),l("label",{bind:this,class:this.classes("esri-button-menu__button","esri-button-menu__item-label"),for:s,id:o},l("span",{class:this.classes("esri-button-menu__icon",e.iconClass),"aria-hidden":"true"}),l("span",{class:"esri-button-menu__item-label-content"},e.label)),l("ul",{"aria-labelledby":o,class:"esri-button-menu__embedded-content-wrapper",id:`${this.id}-submenu`,role:"menu"},null==e||null==(i=e.items)?void 0:i.map(((e,n)=>this.renderItem(e,t,n)))))}_afterRootNodeCreate(e){var t;this._rootNode=e,null==(t=this._popover)||t.set("anchorElement",(()=>e))}_handleMenuItemInteraction(e,t){t.selected=!t.selected,t.open=!(!t.selected||!t.items),t.autoCloseMenu&&this.set("open",!1),t.clickFunction&&t.clickFunction({event:e,item:t}),e.stopPropagation()}_handleMenuItemKeydown(e,t){const n=c(e);a(n)&&this._handleMenuItemInteraction(e,t),"Escape"===n&&(this.open=!1,e.preventDefault(),e.stopPropagation())}_afterMenuContentNodeCreate(e){this._menuContentNode=e,e.focus()}_toggleOpen(){this.open=!this.open}_afterMenuItemCreate(e){0===e["data-item-index"]&&e.focus()}};e([t()],T.prototype,"iconClass",void 0),e([u("viewModel.items")],T.prototype,"items",void 0),e([t()],T.prototype,"label",void 0),e([u("viewModel.open")],T.prototype,"open",void 0),e([t()],T.prototype,"viewModel",void 0),T=e([i("esri.widgets.FeatureTable.Grid.support.ButtonMenu")],T);const V=T;var E;const O="esri.webmap.Bookmark",R=m.getLogger(O);let q=E=class extends(I(k)){constructor(e){super(e),this.name=null,this.thumbnail=new $}set extent(e){p(R,"extent",{replacement:"viewpoint",version:"4.17"}),this._set("viewpoint",new M({targetGeometry:e.clone()})),this._set("extent",e)}castThumbnail(e){return"string"==typeof e?new $({url:e}):b($,e)}set viewpoint(e){const{targetGeometry:t,scale:n}=e;h(t)&&("extent"===t.type?this._set("extent",t.clone()):"point"===t.type&&v(n)&&R.warn("Bookmark.viewpoint should include 'scale' when its targetGeometry is a point.",e)),this._set("viewpoint",e)}readViewpoint(e,t){const{extent:n,viewpoint:i}=t;return M.fromJSON(i||{targetGeometry:n})}writeViewpoint(e,t,n,i){if(!e)return;const{targetGeometry:s}=e;if(h(s)&&"extent"!==s.type){const e="Bookmark.viewpoint cannot be written to JSON when the viewpoint's targetGeometry is not an extent.";null!=i&&i.messages?i.messages.push(new w("property:unsupported",e)):R.error(e)}else t[n]=e.toJSON()}clone(){return new E(_({name:this.name,thumbnail:this.thumbnail,viewpoint:this.viewpoint}))}};e([t({type:f,nonNullable:!0,json:{read:!1,write:{isRequired:!0}}})],q.prototype,"extent",null),e([t({type:String,nonNullable:!0,json:{write:{isRequired:!0}}})],q.prototype,"name",void 0),e([t({type:$,json:{write:{overridePolicy:e=>({enabled:!(!e||!e.url)})}}})],q.prototype,"thumbnail",void 0),e([n("thumbnail")],q.prototype,"castThumbnail",null),e([t({type:M,nonNullable:!0,json:{write:!0}})],q.prototype,"viewpoint",null),e([y("viewpoint",["extent","viewpoint"])],q.prototype,"readViewpoint",null),e([x("viewpoint")],q.prototype,"writeViewpoint",null),q=E=e([i(O)],q);const S=q;export{V as _,N as c,S as x}