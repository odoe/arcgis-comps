import{e,d as t,i as s,bj as o,a$ as i,bN as n,cK as r,l,aT as u,bP as d,hA as a,hB as p}from"./p-5420851c.js";var c;let h=c=class extends o{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new c({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};e([t({type:String,json:{write:!0}})],h.prototype,"field",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],h.prototype,"minValue",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],h.prototype,"maxValue",void 0),h=c=e([s("esri.renderers.support.pointCloud.ColorModulation")],h);const y=h,v=new i({pointCloudFixedSizeAlgorithm:"fixed-size",pointCloudSplatAlgorithm:"splat"});let w=class extends o{};e([t({type:v.apiValues,readOnly:!0,nonNullable:!0,json:{type:v.jsonValues,read:!1,write:v.write}})],w.prototype,"type",void 0),w=e([s("esri.renderers.support.pointCloud.PointSizeAlgorithm")],w);const m=w;var f;let j=f=class extends m{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new f({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};e([n({pointCloudFixedSizeAlgorithm:"fixed-size"})],j.prototype,"type",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],j.prototype,"size",void 0),e([t({type:Boolean,json:{write:!0}})],j.prototype,"useRealWorldSymbolSizes",void 0),j=f=e([s("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],j);const b=j;var C;let g=C=class extends m{constructor(){super(...arguments),this.type="splat",this.scaleFactor=1}clone(){return new C({scaleFactor:this.scaleFactor})}};e([n({pointCloudSplatAlgorithm:"splat"})],g.prototype,"type",void 0),e([t({type:Number,value:1,nonNullable:!0,json:{write:!0}})],g.prototype,"scaleFactor",void 0),g=C=e([s("esri.renderers.support.pointCloud.PointSizeSplatAlgorithm")],g);const S={key:"type",base:m,typeMap:{"fixed-size":b,splat:g}},x=r()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let V=class extends o{constructor(e){super(e),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:l(this.pointSizeAlgorithm),colorModulation:l(this.colorModulation),pointsPerInch:l(this.pointsPerInch)}}};e([t({type:x.apiValues,readOnly:!0,nonNullable:!0,json:{type:x.jsonValues,read:!1,write:x.write}})],V.prototype,"type",void 0),e([t({types:S,json:{write:!0}})],V.prototype,"pointSizeAlgorithm",void 0),e([t({type:y,json:{write:!0}})],V.prototype,"colorModulation",void 0),e([t({json:{write:!0},nonNullable:!0,type:Number})],V.prototype,"pointsPerInch",void 0),V=e([s("esri.renderers.PointCloudRenderer")],V),(V||(V={})).fieldTransformTypeKebabDict=new i({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"});const z=V;var N;let R=N=class extends o{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new N({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:l(this.color)})}};e([t({type:String,json:{write:!0}})],R.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],R.prototype,"label",void 0),e([t({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue"}}})],R.prototype,"minValue",void 0),e([t({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue"}}})],R.prototype,"maxValue",void 0),e([t({type:u,json:{type:[d],write:!0}})],R.prototype,"color",void 0),R=N=e([s("esri.renderers.support.pointCloud.ColorClassBreakInfo")],R);const T=R;var B;let P=B=class extends z{constructor(e){super(e),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new B({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:l(this.colorClassBreakInfos),legendOptions:l(this.legendOptions)})}};e([n({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],P.prototype,"type",void 0),e([t({json:{write:!0},type:String})],P.prototype,"field",void 0),e([t({type:a,json:{write:!0}})],P.prototype,"legendOptions",void 0),e([t({type:z.fieldTransformTypeKebabDict.apiValues,json:{type:z.fieldTransformTypeKebabDict.jsonValues,read:z.fieldTransformTypeKebabDict.read,write:z.fieldTransformTypeKebabDict.write}})],P.prototype,"fieldTransformType",void 0),e([t({type:[T],json:{write:!0}})],P.prototype,"colorClassBreakInfos",void 0),P=B=e([s("esri.renderers.PointCloudClassBreaksRenderer")],P);const k=P;var A;let q=A=class extends z{constructor(e){super(e),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new A({...this.cloneProperties(),field:l(this.field),fieldTransformType:l(this.fieldTransformType),stops:l(this.stops),legendOptions:l(this.legendOptions)})}};e([n({pointCloudStretchRenderer:"point-cloud-stretch"})],q.prototype,"type",void 0),e([t({json:{write:!0},type:String})],q.prototype,"field",void 0),e([t({type:a,json:{write:!0}})],q.prototype,"legendOptions",void 0),e([t({type:z.fieldTransformTypeKebabDict.apiValues,json:{type:z.fieldTransformTypeKebabDict.jsonValues,read:z.fieldTransformTypeKebabDict.read,write:z.fieldTransformTypeKebabDict.write}})],q.prototype,"fieldTransformType",void 0),e([t({type:[p],json:{write:!0}})],q.prototype,"stops",void 0),q=A=e([s("esri.renderers.PointCloudStretchRenderer")],q);const I=q;var M;let O=M=class extends o{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new M({description:this.description,label:this.label,values:l(this.values),color:l(this.color)})}};e([t({type:String,json:{write:!0}})],O.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],O.prototype,"label",void 0),e([t({type:[String],json:{write:!0}})],O.prototype,"values",void 0),e([t({type:u,json:{type:[d],write:!0}})],O.prototype,"color",void 0),O=M=e([s("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],O);const F=O;var U;let W=U=class extends z{constructor(e){super(e),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new U({...this.cloneProperties(),field:l(this.field),fieldTransformType:l(this.fieldTransformType),colorUniqueValueInfos:l(this.colorUniqueValueInfos),legendOptions:l(this.legendOptions)})}};e([n({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],W.prototype,"type",void 0),e([t({json:{write:!0},type:String})],W.prototype,"field",void 0),e([t({type:z.fieldTransformTypeKebabDict.apiValues,json:{type:z.fieldTransformTypeKebabDict.jsonValues,read:z.fieldTransformTypeKebabDict.read,write:z.fieldTransformTypeKebabDict.write}})],W.prototype,"fieldTransformType",void 0),e([t({type:[F],json:{write:!0}})],W.prototype,"colorUniqueValueInfos",void 0),e([t({type:a,json:{write:!0}})],W.prototype,"legendOptions",void 0),W=U=e([s("esri.renderers.PointCloudUniqueValueRenderer")],W);const G=W;export{G as a,I as b,z as c,k as d}