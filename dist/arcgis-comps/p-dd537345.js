import{m as t}from"./p-2f398ed1.js";import{u as n}from"./p-ea916a39.js";import{c as o,p as i}from"./p-b79fcce3.js";function r(t,n,i,r){if(null==r||t.hasZ||(r=void 0),"point"===t.type)return t.x+=n,t.y+=i,t.hasZ&&null!=r&&(t.z+=r),t;if("multipoint"===t.type){const o=t.points;for(let t=0;t<o.length;t++)o[t]=c(o[t],n,i,r);return t}if("extent"===t.type)return t.xmin+=n,t.xmax+=n,t.ymin+=i,t.ymax+=i,null!=r&&(t.zmin+=r,t.zmax+=r),t;const e=o(t),f="polyline"===t.type?t.paths:t.rings;for(let t=0;t<e.length;t++){const o=e[t];for(let t=0;t<o.length;t++)o[t]=c(o[t],n,i,r)}return"paths"in t?t.paths=f:t.rings=f,t}function e(t,n,i,e,f){const s=t.clone(),l=e.resolution;if("point"===s.type){if(f)r(s,n*l,-i*l);else{const t=e.state.transform,o=e.state.inverseTransform,r=t[0]*s.x+t[2]*s.y+t[4],f=t[1]*s.x+t[3]*s.y+t[5];s.x=o[0]*(r+n)+o[2]*(f+i)+o[4],s.y=o[1]*(r+n)+o[3]*(f+i)+o[5]}return s}if("multipoint"===s.type){if(f)r(s,n*l,-i*l);else{const t=s.points,o=e.state.transform,r=e.state.inverseTransform;for(let e=0;e<t.length;e++){const f=t[e],s=o[0]*f[0]+o[2]*f[1]+o[4],l=o[1]*f[0]+o[3]*f[1]+o[5];t[e]=u(f,r[0]*(s+n)+r[2]*(l+i)+r[4],r[1]*(s+n)+r[3]*(l+i)+r[5],void 0)}}return s}if("extent"===s.type){if(f)r(s,n*l,-i*l);else{const t=e.state.transform,o=e.state.inverseTransform,r=t[0]*s.xmin+t[2]*s.ymin+t[4],f=t[1]*s.xmin+t[3]*s.ymin+t[5],l=t[0]*s.xmax+t[2]*s.ymax+t[4],c=t[1]*s.xmax+t[3]*s.ymax+t[5];s.xmin=o[0]*(r+n)+o[2]*(f+i)+o[4],s.ymin=o[1]*(r+n)+o[3]*(f+i)+o[5],s.xmax=o[0]*(l+n)+o[2]*(c+i)+o[4],s.ymax=o[1]*(l+n)+o[3]*(c+i)+o[5]}return s}if(f)r(s,n*l,-i*l);else{const t=o(s),r="polyline"===s.type?s.paths:s.rings,f=e.state.transform,l=e.state.inverseTransform;for(let o=0;o<t.length;o++){const r=t[o];for(let t=0;t<r.length;t++){const o=r[t],e=f[0]*o[0]+f[2]*o[1]+f[4],s=f[1]*o[0]+f[3]*o[1]+f[5];r[t]=u(o,l[0]*(e+n)+l[2]*(s+i)+l[4],l[1]*(e+n)+l[3]*(s+i)+l[5],void 0)}}"paths"in s?s.paths=r:s.rings=r}return s}function f(t,r,e,f){if("point"===t.type){const{x:n,y:o}=t,i=f?f[0]:n,s=f?f[1]:o,l=t.clone(),c=(o-s)*e+s;return l.x=(n-i)*r+i,l.y=c,l}if("multipoint"===t.type){const s=o(t),l=n(),[c,p,a,m]=i(l,[s]),h=f?f[0]:(c+a)/2,x=f?f[1]:(m+p)/2,d=t.clone(),M=d.points;for(let t=0;t<M.length;t++){const n=M[t],[o,i]=n;M[t]=u(n,(o-h)*r+h,(i-x)*e+x,void 0)}return d}if("extent"===t.type){const{xmin:n,xmax:o,ymin:i,ymax:s}=t,l=f?f[0]:(n+o)/2,c=f?f[1]:(s+i)/2,u=t.clone();if(u.xmin=(n-l)*r+l,u.ymax=(s-c)*e+c,u.xmax=(o-l)*r+l,u.ymin=(i-c)*e+c,u.xmin>u.xmax){const t=u.xmin;u.xmin=u.xmax,u.xmax=t}if(u.ymin>u.ymax){const t=u.ymin;u.ymin=u.ymax,u.ymax=t}return u}const s=o(t),l=n(),[c,p,a,m]=i(l,s),h=f?f[0]:(c+a)/2,x=f?f[1]:(m+p)/2,d=t.clone(),M="polyline"===d.type?d.paths:d.rings;for(let t=0;t<s.length;t++){const n=s[t];for(let o=0;o<n.length;o++){const i=n[o],[f,s]=i;M[t][o]=u(i,(f-h)*r+h,(s-x)*e+x,void 0)}}return"paths"in d?d.paths=M:d.rings=M,d}function s(t,n,o,i,r,e){const f=Math.sqrt((o-t)*(o-t)+(i-n)*(i-n));return Math.sqrt((r-t)*(r-t)+(e-n)*(e-n))/f}function l(n,o,i){const r=Math.atan2(o.y-i.y,o.x-i.x)-Math.atan2(n.y-i.y,n.x-i.x),e=Math.atan2(Math.sin(r),Math.cos(r));return t(e)}function c(t,n,o,i){return u(t,t[0]+n,t[1]+o,null!=t[2]&&null!=i?t[2]+i:void 0)}function u(t,n,o,i){const r=[n,o];return t.length>2&&r.push(null!=i?i:t[2]),t.length>3&&r.push(t[3]),r}export{s as a,f as i,l as m,r,e as s}