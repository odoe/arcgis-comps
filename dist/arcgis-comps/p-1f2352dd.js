import{e as t,i as s,U as e,W as i,hd as p}from"./p-c8bc3433.js";import r from"./p-3bb7f837.js";import"./p-84bf99cb.js";import"./p-feee221d.js";import"./p-bdb8e9d6.js";import"./p-47e1bd73.js";import"./p-c4678b0b.js";import"./p-8fd94488.js";import"./p-7c926f90.js";import"./p-a6945989.js";import"./p-30eee135.js";import"./p-be58da65.js";import"./p-c167c2b1.js";import"./p-b0a11892.js";import"./p-ea65d9c9.js";import"./p-b392deaf.js";import"./p-9790d1b4.js";import"./p-167f65f1.js";import"./p-a989744e.js";import"./p-429d3db0.js";import"./p-b7c042b3.js";import"./p-e991a11e.js";import"./p-edc70151.js";import"./p-03d6250d.js";import"./p-d6d28c7b.js";import"./p-472ecb7f.js";let o=class extends r{initialize(){this.handles.add([e(this.view,"viewpoint",(()=>this._update()))])}_injectOverrides(t){let s=super._injectOverrides(t);const e=this.view.scale,r=this.layer.sublayers.filter((t=>function(t,s){return!t.visible||0!==t.minScale&&s>t.minScale||0!==t.maxScale&&s<t.maxScale}(t,e))).map((t=>t.subtypeCode));if(!r.length)return s;s=i(s)?s:(new p).toJSON();const o=`NOT ${this.layer.subtypeField} IN (${r.join(",")})`;return s.where=s.where?`(${s.where}) AND (${o})`:o,s}_setLayersForFeature(t){const s=this.layer.fieldsIndex.get(this.layer.subtypeField),e=t.attributes[s.name],i=this.layer.sublayers.find((t=>t.subtypeCode===e));t.layer=i,t.sourceLayer=this.layer}_createSchemaConfig(){const t={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map((t=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:t.labelingInfo,labelsVisible:t.labelsVisible,renderer:t.renderer,subtypeCode:t.subtypeCode,orderBy:null})))},s=this.layer.sublayers.map((t=>t.subtypeCode)).join(",");let e=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return e+=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${s})`:"1=2",{...super._createSchemaConfig(),...t,definitionExpression:e}}};o=t([s("esri.views.2d.layers.SubtypeGroupLayerView2D")],o);const m=o;export default m;