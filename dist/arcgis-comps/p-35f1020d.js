import{am as t,an as n,hb as e,ar as i,hc as r,eA as s}from"./p-5420851c.js";class o{constructor(){this.code=null,this.description=null}}class l{constructor(t){this.error=new o,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function a(t){return new l(t)}class u{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function c(t){return new u(t)}const f=new Set;function h(t,n,e,s=!1,o){f.clear();for(const l in e){const u=t.get(l);if(!u)continue;const c=e[l],h=p(u,c);if(h!==c&&o&&o.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:u,originalValue:c,sanitizedValue:h}}),f.add(u.name),u&&(s||u.editable)){const t=i(u,h);if(t)return a(r(t,u,h));n[u.name]=h}}for(const n of t.requiredFields)if(!f.has(n.name))return a(`missing required field "${n.name}"`);return null}function p(i,r){let s=r;return"string"==typeof r&&t(i)?s=parseFloat(r):null!=r&&n(i)&&"string"!=typeof r&&(s=String(r)),e(s)}let y;function m(t,n){if(!t||!s(n))return t;if("rings"in t||"paths"in t){if(!y)throw new TypeError("geometry engine not loaded");return y.simplify(n,t)}return t}async function d(t,n){!s(t)||"esriGeometryPolygon"!==n&&"esriGeometryPolyline"!==n||await async function(){return y||(y=await import("./p-ce933f99.js"),y)}()}export{c,h as d,m as h,a as u,d as y}