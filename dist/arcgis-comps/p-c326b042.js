import{c as t,s,A as i}from"./p-e58503d5.js";import{u as e}from"./p-ea916a39.js";import{g as r}from"./p-b79fcce3.js";import{Z as p,v as o,n as a}from"./p-85a6d41b.js";import{b as n}from"./p-5e833dfc.js";import{u as h}from"./p-7a225e61.js";import"./p-53bb6ab4.js";import"./p-2f398ed1.js";import"./p-d3105731.js";import"./p-c048b814.js";import"./p-5032dfbd.js";import"./p-182bb5be.js";import"./p-db87794e.js";import"./p-e49308c6.js";import"./p-c93d2280.js";import"./p-01e5a461.js";import"./p-ccdb8e80.js";import"./p-fea9512d.js";import"./p-50ff864e.js";import"./p-c1cd5521.js";import"./p-7a5bfd29.js";import"./p-a9a30646.js";import"./p-a131049b.js";import"./p-a2324023.js";import"./p-7ec84656.js";import"./p-75cd09f2.js";import"./p-f3659a34.js";import"./p-77b9a0fc.js";import"./p-285c6a34.js";import"./p-f94762ac.js";import"./p-889f7a78.js";import"./p-765e6c28.js";import"./p-c0f84cd3.js";import"./p-8925cd73.js";const c=t.getLogger("esri.views.2d.layers.features.support.whereUtils"),l={getAttribute:(t,s)=>t.field(s)};async function m(t,i){const e=await import("./p-61f47d2b.js");try{const r=e.WhereClause.create(t,i);if(!r.isStandardized){const t=new s("mapview - bad input","Unable to apply filter's definition expression, as expression is not standardized.",r);c.error(t)}return t=>{const s=t.readArcadeFeature();return r.testFeature(s,l)}}catch(s){return c.warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",t),()=>!0}}const d=t.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter");export default class{constructor(t){this._geometryBounds=e(),this._idToVisibility=new Map,this._serviceInfo=t}get hash(){return this._hash}check(t){return this._applyFilter(t)}clear(){const t=this._resetAllHiddenIds();return this.update(),{show:t,hide:[]}}invalidate(){this._idToVisibility.forEach(((t,s)=>{this._idToVisibility.set(s,0)}))}setKnownIds(t){for(const s of t)this._idToVisibility.set(s,1)}setTrue(t){const s=[],i=[],e=new Set(t);return this._idToVisibility.forEach(((t,r)=>{const p=!!(1&this._idToVisibility.get(r)),o=e.has(r);!p&&o?s.push(r):p&&!o&&i.push(r),this._idToVisibility.set(r,o?3:0)})),{show:s,hide:i}}createQuery(){const{geometry:t,spatialRel:s,where:i,timeExtent:e,objectIds:r}=this;return n.fromJSON({geometry:t,spatialRel:s,where:i,timeExtent:e,objectIds:r})}async update(t,s){this._hash=JSON.stringify(t);const i=await p(t,null,s);await Promise.all([this._setGeometryFilter(i),this._setIdFilter(i),this._setAttributeFilter(i),this._setTimeFilter(i)])}async _setAttributeFilter(t){if(!t||!t.where)return this._clause=null,void(this.where=null);this._clause=await m(t.where,this._serviceInfo.fieldsIndex),this.where=t.where}_setIdFilter(t){this._idsToShow=t&&t.objectIds&&new Set(t.objectIds),this._idsToHide=t&&t.hiddenIds&&new Set(t.hiddenIds),this.objectIds=t&&t.objectIds}async _setGeometryFilter(t){if(!t||!t.geometry)return this._spatialQueryOperator=null,this.geometry=null,void(this.spatialRel=null);const s=t.geometry,i=t.spatialRel||"esriSpatialRelIntersects",e=await o(i,s,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);r(this._geometryBounds,s),this._spatialQueryOperator=e,this.geometry=s,this.spatialRel=i}_setTimeFilter(t){if(this.timeExtent=this._timeOperator=null,t&&t.timeExtent)if(this._serviceInfo.timeInfo)this.timeExtent=t.timeExtent,this._timeOperator=a(this._serviceInfo.timeInfo,t.timeExtent,h);else{const i=new s("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",t.timeExtent);d.error(i)}}_applyFilter(t){return this._filterByGeometry(t)&&this._filterById(t)&&this._filterByTime(t)&&this._filterByExpression(t)}_filterByExpression(t){return!this.where||this._clause(t)}_filterById(t){return(!this._idsToHide||!this._idsToHide.size||!this._idsToHide.has(t.getObjectId()))&&(!this._idsToShow||!this._idsToShow.size||this._idsToShow.has(t.getObjectId()))}_filterByGeometry(t){if(!this.geometry)return!0;const s=t.readHydratedGeometry();return!!s&&this._spatialQueryOperator(s)}_filterByTime(t){return!i(this._timeOperator)||this._timeOperator(t)}_resetAllHiddenIds(){const t=[];return this._idToVisibility.forEach(((s,i)=>{1&s||(this._idToVisibility.set(i,1),t.push(i))})),t}}