import{K as e,s as t,ao as r,ax as s,A as o,aU as n,b as i,B as a,bL as c,a5 as l,bM as h,c as u,bN as f,h as d,bO as p,ad as m,bh as g,ay as b,m as w,bP as y}from"./p-e58503d5.js";var k;!function(e){e[e.HANDSHAKE=0]="HANDSHAKE",e[e.OPEN=1]="OPEN",e[e.OPENED=2]="OPENED",e[e.RESPONSE=3]="RESPONSE",e[e.INVOKE=4]="INVOKE",e[e.ABORT=5]="ABORT",e[e.CLOSE=6]="CLOSE",e[e.OPEN_PORT=7]="OPEN_PORT",e[e.ON=8]="ON"}(k||(k={}));let v=0;function P(){return v++}function j(e){return e?"string"==typeof e?JSON.stringify({name:"message",message:e}):e.toJSON?JSON.stringify(e):JSON.stringify({name:e.name,message:e.message,details:e.details||{stack:e.stack}}):null}function E(e,t,r,s){if(t.type===k.OPEN_PORT)return void e.postMessage(t,[t.port]);if(t.type!==k.INVOKE&&t.type!==k.RESPONSE)return void e.postMessage(t);let o;!function(e){return e&&"object"==typeof e&&("result"in e||"transferList"in e)}(r)?(o=O(s),t.data=r):(o=O(r.transferList),t.data=r.result),o?e.postMessage(t,o):e.postMessage(t)}function S(e){if(!e)return null;const t=e.data;return t?"string"==typeof t?JSON.parse(t):t:null}function O(t){if(!t||!t.length)return null;if(e("esri-workers-arraybuffer-transfer"))return t;const r=t.filter((e=>!function(e){return e instanceof ArrayBuffer||e&&e.constructor&&"ArrayBuffer"===e.constructor.name}(e)));return r.length?r:null}const N={statsWorker:()=>import("./p-9b5e19b8.js"),geometryEngineWorker:()=>import("./p-ad7e0ffd.js"),CSVSourceWorker:()=>import("./p-1c1f11e3.js"),EdgeProcessingWorker:()=>import("./p-9fe35ea1.js").then((function(e){return e.E})),ElevationSamplerWorker:()=>import("./p-944ca4e4.js"),FeatureServiceSnappingSourceWorker:()=>import("./p-b09b18c7.js"),GeoJSONSourceWorker:()=>import("./p-97b49c90.js"),LercWorker:()=>import("./p-d0af4496.js"),MemorySourceWorker:()=>import("./p-a43c05cf.js"),PBFDecoderWorker:()=>import("./p-c981cd94.js"),Pipeline:()=>import("./p-bced8d35.js"),PointCloudWorker:()=>import("./p-1ee26884.js"),RasterWorker:()=>import("./p-7cc94611.js"),SceneLayerWorker:()=>import("./p-92108618.js"),WFSSourceWorker:()=>import("./p-67cd2f86.js"),WorkerTileHandler:()=>import("./p-45ca5469.js")},{CLOSE:I,ABORT:A,INVOKE:C,RESPONSE:M,OPEN_PORT:R,ON:W}=k;class _{constructor(e){this._timer=null,this._cancelledJobIds=new Set,this._invokeMessages=[],this._invoke=e,this._timer=null,this._process=this._process.bind(this)}push(e){e.type===k.ABORT?this._cancelledJobIds.add(e.jobId):(this._invokeMessages.push(e),null===this._timer&&(this._timer=setTimeout(this._process,0)))}clear(){this._invokeMessages.length=0,this._cancelledJobIds.clear(),this._timer=null}_process(){this._timer=null;for(const e of this._invokeMessages)this._cancelledJobIds.has(e.jobId)||this._invoke(e);this._cancelledJobIds.clear(),this._invokeMessages.length=0}}class J{constructor(e,t){this._port=e,this._outJobs=new Map,this._inJobs=new Map,this._invokeQueue=new _((e=>this._onInvokeMessage(e))),this._client=t.client,this._onMessage=this._onMessage.bind(this),this._channel=t.channel,this._schedule=t.schedule,this._port.addEventListener("message",this._onMessage),this._port.start()}static connect(e){const t=new MessageChannel;let r;r="function"==typeof e?new e:"default"in e&&"function"==typeof e.default?new e.default:e;const s=new J(t.port1,{channel:t,client:r});return"object"==typeof r&&"remoteClient"in r&&(r.remoteClient=s),J.clients.set(s,r),t.port2}static loadWorker(e){const t=N[e];return t?t():Promise.resolve(null)}close(){this._post({type:I}),this._close()}isBusy(){return this._outJobs.size>0}invoke(e,o,n){const i=n&&n.signal,a=n&&n.transferList;if(!this._port)return Promise.reject(new t("worker:port-closed",`Cannot call invoke('${e}'), port is closed`,{methodName:e,data:o}));const c=P();return new Promise(((t,n)=>{const l=r(i,(()=>{var e;const t=this._outJobs.get(c);t&&(this._outJobs.delete(c),null==(e=t.abortHandle)||e.remove(),this._post({type:A,jobId:c}),n(s()))}));this._outJobs.set(c,{resolve:t,reject:n,abortHandle:l,debugInfo:e}),this._post({type:C,jobId:c,methodName:e,abortable:null!=i},o,a)}))}on(e,t){const r=new MessageChannel;function s(e){t(e.data)}return this._port.postMessage({type:k.ON,eventType:e,port:r.port2},[r.port2]),r.port1.addEventListener("message",s),r.port1.start(),{remove(){r.port1.postMessage({type:k.CLOSE}),r.port1.close(),r.port1.removeEventListener("message",s)}}}openPort(){const e=new MessageChannel;return this._post({type:R,port:e.port2}),e.port1}_close(){this._channel&&(this._channel=null),this._port.removeEventListener("message",this._onMessage),this._port.close(),this._outJobs.forEach((e=>{var t;null==(t=e.abortHandle)||t.remove(),e.reject(s(`Worker closing, aborting job calling '${e.debugInfo}'`))})),this._inJobs.clear(),this._outJobs.clear(),this._invokeQueue.clear(),this._port=this._client=this._schedule=null}_onMessage(e){o(this._schedule)?this._schedule((()=>this._processMessage(e))):this._processMessage(e)}_processMessage(e){const t=S(e);if(t)switch(t.type){case M:this._onResponseMessage(t);break;case C:this._invokeQueue.push(t);break;case A:this._onAbortMessage(t);break;case I:this._onCloseMessage();break;case R:this._onOpenPortMessage(t);break;case W:this._onOnMessage(t)}}_onAbortMessage(e){const t=this._inJobs,r=e.jobId,s=t.get(r);this._invokeQueue.push(e),s&&(s.controller&&s.controller.abort(),t.delete(r))}_onCloseMessage(){const e=this._client;this._close(),e&&"destroy"in e&&J.clients.get(this)===e&&e.destroy(),J.clients.delete(this),e&&e.remoteClient&&(e.remoteClient=null)}_onInvokeMessage(e){const{methodName:t,jobId:r,data:s,abortable:o}=e,a=o?new AbortController:null,c=this._inJobs;let l,h=this._client,u=h[t];try{if(!u&&t&&-1!==t.indexOf(".")){const e=t.split(".");for(let t=0;t<e.length-1;t++)h=h[e[t]],u=h[e[t+1]]}if("function"!=typeof u)throw new TypeError(`${t} is not a function`);l=u.call(h,s,{client:this,signal:a?a.signal:null})}catch(e){return void this._post({type:M,jobId:r,error:j(e)})}n(l)?(c.set(r,{controller:a,promise:l}),l.then((e=>{c.has(r)&&(c.delete(r),this._post({type:M,jobId:r},e))}),(e=>{c.has(r)&&(c.delete(r),i(e)||this._post({type:M,jobId:r,error:j(e||{message:`Error encountered at method ${t}`})}))}))):this._post({type:M,jobId:r},l)}_onOpenPortMessage(e){new J(e.port,{client:this._client})}_onOnMessage(e){const{port:t}=e,r=this._client.on(e.eventType,(e=>{t.postMessage(e)})),s=a(e.port,"message",(e=>{S(e).type===k.CLOSE&&(s.remove(),r.remove(),t.close())}))}_onResponseMessage(e){var r;const{jobId:s,error:o,data:n}=e,i=this._outJobs;if(!i.has(s))return;const a=i.get(s);i.delete(s),null==(r=a.abortHandle)||r.remove(),o?a.reject(t.fromJSON(JSON.parse(o))):a.resolve(n)}_post(e,t,r){return E(this._port,e,t,r)}}J.kernelInfo={revision:c,version:l,buildDate:h},J.clients=new Map;const D=u.getLogger("esri.core.workers.Connection");class L{constructor(){this._clients=new Array,this._clientPromises=new Array,this._clientIdx=0}destroy(){this.close()}get closed(){return!this._clients||!this._clients.length}open(e,t){return new Promise(((r,s)=>{let o=!0;const i=e=>{d(t.signal),o&&(o=!1,e())};this._clients.length=e.length,this._clientPromises.length=e.length;for(let o=0;o<e.length;++o){const a=e[o];n(a)?this._clientPromises[o]=a.then((e=>(this._clients[o]=new J(e,t),i(r),this._clients[o])),(()=>(i(s),null))):(this._clients[o]=new J(a,t),this._clientPromises[o]=Promise.resolve(this._clients[o]),i(r))}}))}broadcast(e,t,r){const s=new Array(this._clientPromises.length);for(let o=0;o<this._clientPromises.length;++o)s[o]=this._clientPromises[o].then((s=>s.invoke(e,t,r)));return s}close(){for(const e of this._clientPromises)e.then((e=>e.close()));this._clients.length=0,this._clientPromises.length=0}getAvailableClient(){let e;for(let t=0;t<this._clients.length;++t){const r=this._clients[t];if(r){if(!r.isBusy())return Promise.resolve(r)}else e=e||[],e.push(this._clientPromises[t])}return e?Promise.race(e):(this._clientIdx=(this._clientIdx+1)%this._clients.length,Promise.resolve(this._clients[this._clientIdx]))}invoke(e,t,r){let s=null;return Array.isArray(r)?(D.warn("invoke()","The transferList parameter is deprecated, use the options object instead"),s={transferList:r}):s=r,this.closed?Promise.reject(new Error("Connection closed")):this.getAvailableClient().then((r=>r.invoke(e,t,s)))}on(e,t){return Promise.all(this._clientPromises).then((()=>f(this._clients.map((r=>r.on(e,t))))))}openPorts(){return new Promise((e=>{const t=new Array(this._clientPromises.length);let r=t.length;for(let s=0;s<this._clientPromises.length;++s)this._clientPromises[s].then((o=>{t[s]=o.openPort(),0==--r&&e(t)}))}))}get test(){return{numClients:this._clients.length}}}const T={};class ${constructor(){const e=document.createDocumentFragment();["addEventListener","dispatchEvent","removeEventListener"].forEach((t=>{this[t]=(...r)=>e[t](...r)}))}}const H=p.MutationObserver||p.WebKitMutationObserver,B=function(){let e;if(p.process&&p.process.nextTick)e=e=>{p.process.nextTick(e)};else if(p.Promise)e=e=>{p.Promise.resolve().then(e)};else if(H){const t=[],r=document.createElement("div");new H((()=>{for(;t.length>0;)t.shift()()})).observe(r,{attributes:!0}),e=e=>{t.push(e),r.setAttribute("queueStatus","1")}}return e}(),F=(()=>{const e=p.MessageEvent;try{new e("message",{data:null})}catch{return(e,t={})=>{const{data:r,bubbles:s=!1,cancelable:o=!1}=t,n=document.createEvent("Event");return n.initEvent(e,s,o),n.data=r,n}}return(t,r)=>new e(t,r)})();class q{constructor(){this._dispatcher=new $,this._workerPostMessage({type:k.HANDSHAKE})}terminate(){}get onmessage(){return this._onmessageHandler}set onmessage(e){this._onmessageHandler&&this.removeEventListener("message",this._onmessageHandler),this._onmessageHandler=e,e&&this.addEventListener("message",e)}get onmessageerror(){return this._onmessageerrorHandler}set onmessageerror(e){this._onmessageerrorHandler&&this.removeEventListener("messageerror",this._onmessageerrorHandler),this._onmessageerrorHandler=e,e&&this.addEventListener("messageerror",e)}get onerror(){return this._onerrorHandler}set onerror(e){this._onerrorHandler&&this.removeEventListener("error",this._onerrorHandler),this._onerrorHandler=e,e&&this.addEventListener("error",e)}postMessage(e){B((()=>{this._workerMessageHandler(F("message",{data:e}))}))}dispatchEvent(e){return this._dispatcher.dispatchEvent(e)}addEventListener(e,t,r){this._dispatcher.addEventListener(e,t,r)}removeEventListener(e,t,r){this._dispatcher.removeEventListener(e,t,r)}_workerPostMessage(e){B((()=>{this.dispatchEvent(F("message",{data:e}))}))}async _workerMessageHandler(e){const t=S(e);if(t&&t.type===k.OPEN){const{modulePath:e,jobId:r}=t;let s=await J.loadWorker(e);s||(s=await import(e));const o=J.connect(s);this._workerPostMessage({type:k.OPENED,jobId:r,data:o})}}}const K=u.getLogger("esri.core.workers"),{HANDSHAKE:U}=k;let V,x;const G="Failed to create Worker. Fallback to execute module in main thread";async function z(){if(!e("esri-workers"))return Q(new q);if(!V&&!x)try{const t='let globalId=0;const outgoing=new Map,configuration=JSON.parse("{CONFIGURATION}");self.esriConfig=configuration.esriConfig;const workerPath=self.esriConfig.workers.workerPath,HANDSHAKE=0,OPEN=1,OPENED=2,RESPONSE=3,INVOKE=4,ABORT=5;function createAbortError(){const e=new Error("Aborted");return e.name="AbortError",e}function receiveMessage(e){return e&&e.data?"string"==typeof e.data?JSON.parse(e.data):e.data:null}function invokeStaticMessage(e,o,r){const t=r&&r.signal,n=globalId++;return new Promise(((r,i)=>{if(t){if(t.aborted)return i(createAbortError());t.addEventListener("abort",(()=>{outgoing.get(n)&&(outgoing.delete(n),self.postMessage({type:5,jobId:n}),i(createAbortError()))}))}outgoing.set(n,{resolve:r,reject:i}),self.postMessage({type:4,jobId:n,methodName:e,abortable:null!=t,data:o})}))}let workerRevisionChecked=!1;function checkWorkerRevision(e){if(!workerRevisionChecked&&e.kernelInfo){workerRevisionChecked=!0;const{revision:o,buildDate:r,version:t}=configuration.kernelInfo,{revision:n,buildDate:i,version:s}=e.kernelInfo;o!==n&&console.warn(`[esri.core.workers] Version mismatch detected between ArcGIS API for JavaScript and assets:\nAPI version: ${t} [Date: ${r}, Revision: ${o.slice(0,8)}]\nAssets version: ${s} [Date: ${i}, Revision: ${n.slice(0,8)}]`)}}function messageHandler(e){const o=receiveMessage(e);if(!o)return;const r=o.jobId;switch(o.type){case 1:let e;function t(o){const t=e.connect(o);self.postMessage({type:2,jobId:r,data:t},[t])}"function"==typeof define&&define.amd?require([workerPath],(r=>{e=r.default||r,checkWorkerRevision(e),e.loadWorker(o.modulePath).then((e=>e||new Promise((e=>{require([o.modulePath],e)})))).then(t)})):"System"in self&&"function"==typeof System.import?System.import(workerPath).then((r=>(e=r.default,checkWorkerRevision(e),e.loadWorker(o.modulePath)))).then((e=>e||System.import(o.modulePath))).then(t):(self.RemoteClient||importScripts(workerPath),e=self.RemoteClient.default||self.RemoteClient,checkWorkerRevision(e),e.loadWorker(o.modulePath).then(t));break;case 3:if(outgoing.has(r)){const e=outgoing.get(r);outgoing.delete(r),o.error?e.reject(JSON.parse(o.error)):e.resolve(o.data)}}}self.dojoConfig=configuration.loaderConfig,esriConfig.workers.loaderUrl&&(self.importScripts(esriConfig.workers.loaderUrl),"function"==typeof require&&"function"==typeof require.config&&require.config(configuration.loaderConfig)),self.addEventListener("message",messageHandler),self.postMessage({type:0});'.replace('"{CONFIGURATION}"',`'${function(){let t;if(null!=m.default){const e={...m};delete e.default,t=JSON.parse(JSON.stringify(e))}else t=JSON.parse(JSON.stringify(m));t.assetsPath=g(t.assetsPath),t.request.interceptors=[],t.log.interceptors=[],t.locale=b(),t.has={"esri-csp-restrictions":e("esri-csp-restrictions"),"esri-2d-debug":!1,"esri-2d-update-debug":e("esri-2d-update-debug"),"esri-2d-query-centroid-enabled":e("esri-2d-query-centroid-enabled"),"featurelayer-pbf":e("featurelayer-pbf"),"featurelayer-simplify-thresholds":e("featurelayer-simplify-thresholds"),"featurelayer-simplify-payload-size-factors":e("featurelayer-simplify-payload-size-factors"),"esri-atomics":e("esri-atomics"),"esri-shared-array-buffer":e("esri-shared-array-buffer"),"esri-tiles-debug":e("esri-tiles-debug"),"esri-workers-arraybuffer-transfer":e("esri-workers-arraybuffer-transfer"),"host-webworker":1},t.workers.loaderUrl&&(t.workers.loaderUrl=g(t.workers.loaderUrl)),t.workers.workerPath=g(t.workers.workerPath?t.workers.workerPath:w("esri/core/workers/RemoteClient.js"));const r=m.workers.loaderConfig,s=function(e){var t;const r={async:e.async,isDebug:e.isDebug,locale:e.locale,baseUrl:e.baseUrl,has:{...e.has},map:{...e.map},packages:e.packages&&e.packages.concat()||[],paths:{...e.paths}};return e.hasOwnProperty("async")||(r.async=!0),e.hasOwnProperty("isDebug")||(r.isDebug=!1),e.baseUrl||(r.baseUrl=T.baseUrl),null==(t=T.packages)||t.forEach((e=>{!function(e,t){for(const r of e)if(r.name===t.name)return;e.push(t)}(r.packages,e)})),r}({baseUrl:null==r?void 0:r.baseUrl,locale:b(),has:{"csp-restrictions":1,"dojo-test-sniff":0,"host-webworker":1,...null==r?void 0:r.has},map:{...null==r?void 0:r.map},paths:{...null==r?void 0:r.paths},packages:(null==r?void 0:r.packages)||[]});return JSON.stringify({esriConfig:t,loaderConfig:s,kernelInfo:{version:l,buildDate:h,revision:c}})}()}'`);V=URL.createObjectURL(new Blob([t],{type:"text/javascript"}))}catch(e){x=e||{}}let t;if(V)try{t=new Worker(V,{name:"esri-worker-"+X++})}catch(e){K.warn(G,x),t=new q}else K.warn(G,x),t=new q;return Q(t)}async function Q(e){return new Promise((t=>{function r(o){const n=S(o);n&&n.type===U&&(e.removeEventListener("message",r),e.removeEventListener("error",s),t(e))}function s(t){t.preventDefault(),e.removeEventListener("message",r),e.removeEventListener("error",s),K.warn("Failed to create Worker. Fallback to execute module in main thread",t),(e=new q).addEventListener("message",r),e.addEventListener("error",s)}e.addEventListener("message",r),e.addEventListener("error",s)}))}let X=0;const Y=u.getLogger("esri.core.workers"),{ABORT:Z,INVOKE:ee,OPEN:te,OPENED:re,RESPONSE:se}=k;class oe{constructor(e,t){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=t,e.addEventListener("message",this._onMessage.bind(this)),e.addEventListener("error",(e=>{e.preventDefault(),Y.error(e)}))}static async create(e){const t=await z();return new oe(t,e)}terminate(){this.worker.terminate()}async open(e,t={}){const{signal:s}=t,o=P();return new Promise(((t,n)=>{const i={resolve:t,reject:n,abortHandle:r(s,(()=>{this._outJobs.delete(o),this._post({type:Z,jobId:o})}))};this._outJobs.set(o,i),this._post({type:te,jobId:o,modulePath:e})}))}_onMessage(e){const t=S(e);if(t)switch(t.type){case re:this._onOpenedMessage(t);break;case se:this._onResponseMessage(t);break;case Z:this._onAbortMessage(t);break;case ee:this._onInvokeMessage(t)}}_onAbortMessage(e){const t=this._inJobs,r=e.jobId,s=t.get(r);s&&(s.controller&&s.controller.abort(),t.delete(r))}_onInvokeMessage(e){const{methodName:t,jobId:r,data:s,abortable:o}=e,a=o?new AbortController:null,c=this._inJobs,l=y[t];let h;try{if("function"!=typeof l)throw new TypeError(`${t} is not a function`);h=l.call(null,s,{signal:a?a.signal:null})}catch(e){return void this._post({type:se,jobId:r,error:j(e)})}n(h)?(c.set(r,{controller:a,promise:h}),h.then((e=>{c.has(r)&&(c.delete(r),this._post({type:se,jobId:r},e))}),(e=>{c.has(r)&&(c.delete(r),e||(e={message:"Error encountered at method"+t}),i(e)||this._post({type:se,jobId:r,error:j(e||{message:`Error encountered at method ${t}`})}))}))):this._post({type:se,jobId:r},h)}_onOpenedMessage(e){var t;const{jobId:r,data:s}=e,o=this._outJobs.get(r);o&&(this._outJobs.delete(r),null==(t=o.abortHandle)||t.remove(),o.resolve(s))}_onResponseMessage(e){var r;const{jobId:s,error:o,data:n}=e,i=this._outJobs.get(s);i&&(this._outJobs.delete(s),null==(r=i.abortHandle)||r.remove(),o?i.reject(t.fromJSON(JSON.parse(o))):i.resolve(n))}_post(e,t,r){return E(this.worker,e,t,r)}}let ne=e("esri-workers-debug")?1:e("host-browser")?navigator.hardwareConcurrency-1:0;ne||(ne=e("safari")&&e("mac")||e("trident")?7:2);let ie=0;const ae=[];function ce(){fe()}async function le(e,t){const r=new L;return await r.open(e,t),r}async function he(r,s={}){if("string"!=typeof r)throw new t("workers:undefined-module","modulePath is missing");let o=s.strategy||"distributed";if(e("host-webworker")&&!e("esri-workers")&&(o="local"),"local"===o){let e=await J.loadWorker(r);e||(e=await import(r)),d(s.signal);const t=s.client||e;return le([J.connect(e)],{...s,client:t})}if(await fe(),d(s.signal),"dedicated"===o){const e=ie++%ne;return le([await ae[e].open(r,s)],s)}if(s.maxNumWorkers&&s.maxNumWorkers>0){const e=Math.min(s.maxNumWorkers,ne);if(e<ne){const t=new Array(e);for(let o=0;o<e;++o){const e=ie++%ne;t[o]=ae[e].open(r,s)}return le(t,s)}}return le(ae.map((e=>e.open(r,s))),s)}let ue=null;async function fe(){if(ue)return ue;new AbortController;const e=[];for(let t=0;t<ne;t++){const r=oe.create(t).then((e=>(ae[t]=e,e)));e.push(r)}return ue=Promise.all(e),ue}export{ce as c,L as l,he as u}