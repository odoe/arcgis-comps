import{e as i,d as t,hp as s,i as e,B as r,h9 as h}from"./p-c8bc3433.js";import{l as a}from"./p-fd064341.js";import"./p-30eee135.js";import{a as o}from"./p-2c46c687.js";import{u as n,l as p}from"./p-c4678b0b.js";import"./p-84bf99cb.js";import"./p-47e1bd73.js";import"./p-a6945989.js";import"./p-60f5af83.js";import"./p-b392deaf.js";import"./p-4414d64f.js";import"./p-a617738c.js";import"./p-be58da65.js";import"./p-17a8cfc0.js";import"./p-8fd94488.js";import"./p-feee221d.js";import"./p-97ec6ae5.js";class l extends o{constructor(){super(...arguments),this._lastWidth=0,this._lastHeight=0,this.requiresDedicatedFBO=!1}dispose(){this._renderTarget&&(this._renderTarget.dispose(),this._renderTarget=null)}doRender(i){const t=this.createRenderParams(i),{context:s,painter:e,profiler:r}=t;this._prevFBO=s.getBoundFramebufferObject(),r.recordContainerStart(this.name);const h=this._getFbo(t),a=e.getRenderTarget();s.bindFramebuffer(h),e.setRenderTarget(h),s.setDepthWriteEnabled(!0),s.setColorMask(!0,!0,!0,!0),s.setClearColor(0,0,0,0),s.setClearDepth(1),s.clear(s.gl.COLOR_BUFFER_BIT|s.gl.DEPTH_BUFFER_BIT),s.setDepthWriteEnabled(!1);for(const t of this.children)t.beforeRender(i);for(const i of this.children)i.processRender(t);for(const t of this.children)t.afterRender(i);e.setRenderTarget(a),s.bindFramebuffer(this._prevFBO),e.beforeRenderLayer(t,this._clippingInfos?255:0,this.computedOpacity),s.setStencilTestEnabled(!1),s.setStencilWriteMask(0),e.blitTexture(s,h.colorTexture,9728),e.compositeLayer(t,this.computedOpacity),r.recordContainerEnd()}createRenderParams(i){return{...super.createRenderParams(i),blendMode:this.blendMode,effects:this.computedEffects,globalOpacity:1}}_getFbo(i){const{context:t,painter:s}=i,{width:e,height:r}=t.getViewport();return e===this._lastWidth&&r===this._lastHeight||(this._lastWidth=e,this._lastHeight=r,this._renderTarget?this._renderTarget.resize(e,r):this._renderTarget=new a(t,{colorTarget:0,depthStencilTarget:3},{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728,wrapMode:33071,width:e,height:r},s.getSharedStencilBuffer())),this._renderTarget}}let d=class extends n{constructor(i){super(i),this.type="group",this.layerViews=new r}initialize(){this.handles.add([this.layerViews.on("change",(i=>this._layerViewsChangeHandler(i))),this.layerViews.on("after-changes",(()=>this._layerViewsAfterChangesHandler())),this.layer.watch("visibilityMode",(()=>this._visibilityModeHandler()),!0),this.watch("visible",(()=>this._visibleHandler()),!0)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]}),this._layerViewsAfterChangesHandler()}set layerViews(i){this._set("layerViews",h(i,this._get("layerViews")))}isUpdating(){return this.layerViews.some((i=>i.updating))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce(((i,t)=>i+t.updatingProgress),0)/this.layerViews.length}_hasLayerViewVisibleOverrides(){return this.layerViews.some((i=>i._isOverridden("visible")))}_findLayerViewForLayer(i){return i&&this.layerViews.find((t=>t.layer===i))}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find((i=>{const t=this._findLayerViewForLayer(i);return t&&t.visible}));return i&&this._findLayerViewForLayer(i)}_enforceExclusiveVisibility(i){this._hasLayerViewVisibleOverrides()&&(i||!(i=this._firstVisibleOnLayerOrder())&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.getItemAt(0))),this.layerViews.forEach((t=>{t.visible=t===i})))}_layerViewsChangeHandler(i){this.handles.remove("grouplayerview:visible"),this.handles.add(this.layerViews.map((i=>i.watch("visible",(t=>this._layerViewVisibleHandler(t,i)),!0))).toArray(),"grouplayerview:visible");const t=i.added[i.added.length-1];let s=null;t&&t.visible&&(s=t),this._enforceVisibility(s)}_layerViewsAfterChangesHandler(){this.handles.remove("grouplayerview:updating"),this.handles.add(this.layerViews.map((i=>i.watch("updating",(()=>this._updateUpdating()),!0))).toArray(),"grouplayerview:updating"),this._updateUpdating()}_enforceVisibility(i){if(this._hasLayerViewVisibleOverrides())switch(this.layer.visibilityMode){case"inherited":{const i=this.visible;this.layerViews.forEach((t=>{t.visible=i}));break}case"exclusive":this._enforceExclusiveVisibility(i)}}_visibilityModeHandler(){this._enforceVisibility()}_layerViewVisibleHandler(i,t){if(this._hasLayerViewVisibleOverrides())switch(this.layer.visibilityMode){case"inherited":i!==this.visible&&(t.visible=this.visible);break;case"exclusive":this._enforceExclusiveVisibility(i&&t)}}_visibleHandler(){var i;this._hasLayerViewVisibleOverrides()&&"inherited"===(null==(i=this.layer)?void 0:i.visibilityMode)&&this._enforceVisibility()}_updateUpdating(){this.notifyChange("updating")}};i([t({cast:s})],d.prototype,"layerViews",null),i([t()],d.prototype,"view",void 0),i([t({readOnly:!0})],d.prototype,"updatingProgress",null),d=i([e("esri.views.layers.GroupLayerView")],d);const c=d;let u=class extends(p(c)){constructor(){super(...arguments),this.container=new l}attach(){this._updateStageChildren(),this.handles.add(this.layerViews.on("after-changes",(()=>this._updateStageChildren())),"grouplayerview2d")}detach(){this.handles.remove("grouplayerview2d"),this.container.removeAllChildren()}hitTest(i,t){return null}update(i){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach(((i,t)=>this.container.addChildAt(i.container,t)))}};u=i([e("esri.views.2d.layers.GroupLayerView2D")],u);const g=u;export default g;