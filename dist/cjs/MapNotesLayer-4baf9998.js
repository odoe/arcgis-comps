'use strict';

const request = require('./messageBundle-8be88d04.js');
require('./geometry-ef17530a.js');
const Graphic = require('./Graphic-0aff6059.js');
const SimpleLineSymbol = require('./symbols-29b793e5.js');
const MultiOriginJSONSupport = require('./MultiOriginJSONSupport-77ac451b.js');
const projection = require('./projection-b19710fa.js');
const normalizeUtils = require('./normalizeUtils-a793b472.js');
const FeatureLayer = require('./FeatureLayer-68e51b64.js');
const GraphicsLayer = require('./GraphicsLayer-5076fd9b.js');
const Layer = require('./Layer-31cde361.js');
const objectIdUtils = require('./objectIdUtils-d5a9efb9.js');
const BlendLayer = require('./BlendLayer-6a2ab430.js');
const OperationalLayer = require('./OperationalLayer-853649aa.js');
const PortalLayer = require('./PortalLayer-7556e594.js');
const ScaleRangeLayer = require('./ScaleRangeLayer-5320a5ba.js');
const Field = require('./Field-b92c6f4a.js');
require('./index-fde8502c.js');
require('./PopupTemplate-a0b855f8.js');
require('./opacityUtils-f2e4b347.js');
require('./enumeration-f235fe07.js');
require('./Identifiable-a4f50f85.js');
require('./jsonUtils-b6068079.js');
require('./Symbol-f0556e23.js');
require('./Color-7d915caa.js');
require('./colorUtils-e70dbab5.js');
require('./mathUtils-af6066f0.js');
require('./common-41a349f2.js');
require('./screenUtils-d911ae62.js');
require('./aaBoundingBox-c372701a.js');
require('./aaBoundingRect-56648c00.js');
require('./persistableUrlUtils-c611d652.js');
require('./Portal-8d16604d.js');
require('./unitUtils-083cb8d0.js');
require('./mat4-f68486bc.js');
require('./geodesicConstants-047d586a.js');
require('./UniqueValueRenderer-1c485e9f.js');
require('./VisualVariablesMixin-a105fcfa.js');
require('./colorRamps-d0c2cb9d.js');
require('./ColorStop-ce63948c.js');
require('./sizeVariableUtils-9012516e.js');
require('./visualVariableUtils-1740874b.js');
require('./lengthUtils-179eaf12.js');
require('./diffUtils-df69757f.js');
require('./jsonUtils-62d28b73.js');
require('./styleUtils-2b475600.js');
require('./DictionaryRenderer-a0dce499.js');
require('./LRUCache-38fdf18d.js');
require('./MemCache-7f5503ec.js');
require('./jsonUtils-fc4080da.js');
require('./HeightModelInfo-06fd3d80.js');
require('./HandleOwner-9c4c158c.js');
require('./reactiveUtils-ef5dccea.js');
require('./workers-bde9fe32.js');
require('./queryZScale-d48be112.js');
require('./zscale-25ef55f0.js');
require('./FeatureSet-8efc5965.js');
require('./fieldType-32f95259.js');
require('./APIKeyMixin-77c99036.js');
require('./ArcGISService-56d7a630.js');
require('./arcgisLayerUrl-5174d661.js');
require('./CustomParametersMixin-996a5732.js');
require('./labelingInfo-594911d5.js');
require('./TimeExtent-8b558884.js');
require('./Query-354911d3.js');
require('./LabelClass-4b91d60e.js');
require('./labelUtils-73814dda.js');
require('./defaultsJSON-0cdf7a99.js');
require('./OrderedLayer-8690aaf5.js');
require('./RefreshableLayer-487bd7b3.js');
require('./TemporalLayer-06f08bdd.js');
require('./TimeInfo-050c5617.js');
require('./FeatureType-d8b81062.js');
require('./fieldProperties-c9dd6469.js');
require('./FieldsIndex-664af19b.js');
require('./LayerFloorInfo-c56fa764.js');
require('./styleUtils-536b017f.js');
require('./asyncUtils-cd78b718.js');
require('./TopFeaturesQuery-92caa731.js');
require('./popupUtils-7a76fb7d.js');
require('./GraphicsCollection-d70ae8cb.js');
require('./ElevationInfo-d3e3d64f.js');
require('./PortalItem-8bcd02f8.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
function F(e){return e.layers.some((e=>null!=e.layerDefinition.visibilityField))}const G=new Field.y({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),_=new Field.y({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let P=class extends GraphicsLayer.h{constructor(){super(...arguments),this.visibilityMode="inherited";}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer;})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null;}));}get sublayers(){return this.graphics}};request.e([request.d({readOnly:!0})],P.prototype,"sublayers",null),request.e([request.d()],P.prototype,"layer",void 0),request.e([request.d({readOnly:!0})],P.prototype,"visibilityMode",void 0),P=request.e([request.i("esri.layers.MapNotesLayer.MapNotesSublayer")],P);const k=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",layerId:"polygonLayer",title:"Polygons",identifyingSymbol:(new SimpleLineSymbol.S).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",layerId:"polylineLayer",title:"Polylines",identifyingSymbol:(new SimpleLineSymbol.m).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",layerId:"multipointLayer",title:"Multipoints",identifyingSymbol:(new SimpleLineSymbol.y).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"pointLayer",title:"Points",identifyingSymbol:(new SimpleLineSymbol.y).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"textLayer",title:"Text",identifyingSymbol:(new SimpleLineSymbol.c).toJSON()}];let z=class extends(BlendLayer.i(ScaleRangeLayer.s(OperationalLayer.y(PortalLayer.w(MultiOriginJSONSupport.l(Layer.b)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.minScale=0,this.maxScale=0,this.spatialReference=request.k.WGS84,this.sublayers=new request.S(k.map((e=>new P({id:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited";}readCapabilities(e,t,r){return {operations:{supportsMapNotesEditing:!F(t)&&"portal-item"!==(null==r?void 0:r.origin)}}}readFeatureCollections(e,t,o){if(!F(t))return null;const i=t.layers.map((e=>{const t=new FeatureLayer.Ge;return t.read(e,o),t}));return new request.S({items:i})}readLegacyfeatureCollectionJSON(e,t){return F(t)?request.l$1(t.featureCollection):null}readFullExtent(e,t){if(!t.layers.length||t.layers.every((e=>!e.layerDefinition.extent)))return new request.M({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:request.k.WGS84});const r=request.k.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce(((e,t)=>{const r=t.layerDefinition.extent;return r?request.M.fromJSON(r).union(e):e}),new request.M({spatialReference:r}))}readMinScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.minScale)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.maxScale)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?request.k.fromJSON(t.layers[0].layerDefinition.spatialReference):request.k.WGS84}readSublayers(e,o,i){if(F(o))return null;const l=[];for(let r=0;r<o.layers.length;r++){var a;const{layerDefinition:e,featureSet:i}=o.layers[r],n=null!=(a=e.geometryType)?a:i.geometryType,s=k.find((t=>{var r,o,i;return n===t.geometryTypeJSON&&(null==(r=e.drawingInfo)||null==(o=r.renderer)||null==(i=o.symbol)?void 0:i.type)===t.identifyingSymbol.type}));if(s){const r=new P({id:s.layerId,title:e.name,layer:this,graphics:i.features.map((({geometry:e,symbol:r,attributes:o,popupInfo:i})=>Graphic.h.fromJSON({attributes:o,geometry:e,symbol:r,popupTemplate:i})))});l.push(r);}}return new request.S(l)}writeSublayers(e,t,r,i){const{minScale:n,maxScale:p}=this;if(request.t$1(e))return;const y=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing){var m;if(y)null==i||null==(m=i.messages)||m.push(new request.s("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"));return}const u=[];let c=this.spatialReference.toJSON();e:for(const o of e)for(const e of o.graphics)if(request.r(e.geometry)){c=e.geometry.spatialReference.toJSON();break e}for(const o of k){const t=e.find((e=>o.layerId===e.id));this._writeMapNoteSublayer(u,t,o,n,p,c,i);}request.o$3("featureCollection.layers",u,t);}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=request.l$1(e),Object.assign(e,e.featureCollection)),super.read(e,t);}async beforeSave(){if(request.t$1(this.sublayers))return;let e=null;const t=[];for(const o of this.sublayers)for(const r of o.graphics)if(request.r(r.geometry)){const o=r.geometry;e?request.E$2(o.spatialReference,e)||(projection.tn(o.spatialReference,e)||projection.H()||await projection.J(),r.geometry=projection.O(o,e)):e=o.spatialReference,t.push(r);}const r=await normalizeUtils.v(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]));}_findSublayer(e){var t,r;return request.t$1(this.sublayers)?null:null!=(t=null==(r=this.sublayers)?void 0:r.find((t=>t.id===e)))?t:null}_writeMapNoteSublayer(e,t,r,o,a,n,s){const p=[];if(!request.t$1(t)){for(const e of t.graphics)this._writeMapNote(p,e,r.geometryType,s);this._normalizeObjectIds(p,G),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:request.l$1(r.identifyingSymbol)}},geometryType:r.geometryTypeJSON,minScale:o,maxScale:a,objectIdField:"OBJECTID",fields:[G.toJSON(),_.toJSON()],spatialReference:n},featureSet:{features:p,geometryType:r.geometryTypeJSON}});}}_writeMapNote(e,t,r,o){if(request.t$1(t))return;const{geometry:i,symbol:n,popupTemplate:s}=t;if(request.t$1(i))return;var y,m;if(i.type!==r)return void(null==o||null==(y=o.messages)||y.push(new request.t$2("map-notes-layer:invalid-geometry-type",`Geometry "${i.type}" cannot be saved in "${r}" layer`,{graphic:t})));if(request.t$1(n))return void(null==o||null==(m=o.messages)||m.push(new request.t$2("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t})));const u={attributes:{...t.attributes},geometry:i.toJSON(),symbol:n.toJSON()};request.r(s)&&(u.popupInfo=s.toJSON()),e.push(u);}_normalizeObjectIds(e,t){const r=t.name;let o=objectIdUtils.n(r,e)+1;const i=new Set;for(const l of e){l.attributes||(l.attributes={});const{attributes:e}=l;(null==e[r]||i.has(e[r]))&&(e[r]=o++),i.add(e[r]);}}};request.e([request.d({readOnly:!0})],z.prototype,"capabilities",void 0),request.e([request.o$2(["portal-item","web-map"],"capabilities",["layers"])],z.prototype,"readCapabilities",null),request.e([request.d({readOnly:!0})],z.prototype,"featureCollections",void 0),request.e([request.o$2(["web-map","portal-item"],"featureCollections",["layers"])],z.prototype,"readFeatureCollections",null),request.e([request.d({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],z.prototype,"featureCollectionJSON",void 0),request.e([request.o$2(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],z.prototype,"readLegacyfeatureCollectionJSON",null),request.e([request.d({readOnly:!0,json:{read:!1,write:{enabled:!0,ignoreOrigin:!0}}})],z.prototype,"featureCollectionType",void 0),request.e([request.d({json:{write:!1}})],z.prototype,"fullExtent",void 0),request.e([request.o$2(["web-map","portal-item"],"fullExtent",["layers"])],z.prototype,"readFullExtent",null),request.e([request.d({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return {enabled:null!=this.featureCollectionJSON}}}}}}})],z.prototype,"legendEnabled",void 0),request.e([request.d({type:["show","hide"]})],z.prototype,"listMode",void 0),request.e([request.d({type:Number,nonNullable:!0,json:{write:!1}})],z.prototype,"minScale",void 0),request.e([request.o$2(["web-map","portal-item"],"minScale",["layers"])],z.prototype,"readMinScale",null),request.e([request.d({type:Number,nonNullable:!0,json:{write:!1}})],z.prototype,"maxScale",void 0),request.e([request.o$2(["web-map","portal-item"],"maxScale",["layers"])],z.prototype,"readMaxScale",null),request.e([request.d({readOnly:!0})],z.prototype,"multipointLayer",null),request.e([request.d({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],z.prototype,"operationalLayerType",void 0),request.e([request.d({readOnly:!0})],z.prototype,"pointLayer",null),request.e([request.d({readOnly:!0})],z.prototype,"polygonLayer",null),request.e([request.d({readOnly:!0})],z.prototype,"polylineLayer",null),request.e([request.d({type:request.k})],z.prototype,"spatialReference",void 0),request.e([request.o$2(["web-map","portal-item"],"spatialReference",["layers"])],z.prototype,"readSpatialReference",null),request.e([request.d({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],z.prototype,"sublayers",void 0),request.e([request.o$2("web-map","sublayers",["layers"])],z.prototype,"readSublayers",null),request.e([request.r$2("web-map","sublayers")],z.prototype,"writeSublayers",null),request.e([request.d({readOnly:!0})],z.prototype,"textLayer",null),request.e([request.d()],z.prototype,"title",void 0),request.e([request.d({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),z=request.e([request.i("esri.layers.MapNotesLayer")],z);const B=z;

exports.default = B;
