'use strict';

const request = require('./messageBundle-8be88d04.js');
const Color = require('./Color-7d915caa.js');
const Graphic = require('./Graphic-0aff6059.js');
const mathUtils = require('./mathUtils-af6066f0.js');
const SimpleLineSymbol = require('./symbols-29b793e5.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const m=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];exports.b=class extends request.p{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0;}initialize(){this._symbols=m.map((e=>new SimpleLineSymbol.S({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update();}destroy(){this._enabled=!1,this.clear();}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update());}update(){if(!this._enabled)return void this.clear();const e=e=>{if(request.r(e.label))return e.label;let s=e.lij.toString();return request.r(e.loadPriority)&&(s+=` (${e.loadPriority})`),s},t=this.getTiles(),a=new Array,n=new Set((this._labels.keys()));t.forEach(((p,m)=>{const b=p.lij.toString();n.delete(b);const d=p.lij[0],g=p.geometry;if(this.enablePolygons&&!this._polygons.has(b)){const e=new Graphic.h({geometry:g,symbol:this._symbols[d%this._symbols.length]});this._polygons.set(b,e),a.push(e);}if(this.enableLabels){const n=e(p),d=m/(t.length-1),u=mathUtils.s$1(0,200,d),_=mathUtils.s$1(20,6,d)/.75,f=request.r(p.loadPriority)&&p.loadPriority>=t.length,w=new Color.h([u,f?0:u,f?0:u]),j="3d"===this.view.type?()=>new SimpleLineSymbol.L({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new SimpleLineSymbol.y$1({text:n,halo:{color:"white",size:1/.75},material:{color:w},size:_})]}):()=>new SimpleLineSymbol.c({text:n,haloColor:"white",haloSize:1/.75,color:w,size:_});if(this._labels.has(b)){const e=this._labels.get(b),s=j();(request.t$1(e.symbol)||JSON.stringify(s)!==JSON.stringify(e.symbol))&&(e.symbol=s);}else {const e=new Graphic.h({geometry:g.extent.center,symbol:j()});this._labels.set(b,e),a.push(e);}}}));const p=new Array;n.forEach((e=>{this._polygons.has(e)&&(p.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(p.push(this._labels.get(e)),this._labels.delete(e));})),this.view.graphics.removeMany(p),this.view.graphics.addMany(a);}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear();}};request.e([request.d({constructOnly:!0})],exports.b.prototype,"view",void 0),request.e([request.d({readOnly:!0})],exports.b.prototype,"updating",void 0),request.e([request.d()],exports.b.prototype,"enabled",null),exports.b=request.e([request.i("esri.views.support.TileTreeDebugger")],exports.b);
