'use strict';

const request = require('./messageBundle-8be88d04.js');
const HandleOwner = require('./HandleOwner-9c4c158c.js');
const geometry = require('./geometry-ef17530a.js');
const projection = require('./projection-b19710fa.js');
const normalizeUtilsSync = require('./normalizeUtilsSync-7d195a4d.js');
const featureConversionUtils = require('./featureConversionUtils-df21e951.js');
const OptimizedFeature = require('./OptimizedFeature-cd4fe3c6.js');
const FeatureStore = require('./FeatureStore-bb1fc704.js');
const QueryEngine = require('./QueryEngine-d6177b5a.js');
const arcgisEditor_entry = require('./arcgis-editor-90a28e34.js');
const queryEngineUtils = require('./queryEngineUtils-ab8dee31.js');
require('./index-fde8502c.js');
require('./reactiveUtils-ef5dccea.js');
require('./mathUtils-af6066f0.js');
require('./common-41a349f2.js');
require('./unitUtils-083cb8d0.js');
require('./mat4-f68486bc.js');
require('./aaBoundingRect-56648c00.js');
require('./geodesicConstants-047d586a.js');
require('./jsonUtils-b6068079.js');
require('./normalizeUtils-a793b472.js');
require('./OptimizedFeatureSet-b5737d2b.js');
require('./aaBoundingBox-c372701a.js');
require('./PooledRBush-793d5c9f.js');
require('./quickselect-d3f68f5a.js');
require('./optimizedFeatureQueryEngineAdapter-32c6c975.js');
require('./centroid-d874c2ee.js');
require('./MemCache-7f5503ec.js');
require('./ItemCache-149fdb6e.js');
require('./WhereClause-f1cc2353.js');
require('./projectionSupport-7159f0ef.js');
require('./json-2c41fbe0.js');
require('./QueryEngineCapabilities-15e8d907.js');
require('./quantizationUtils-d1d9c03e.js');
require('./utils-16feefb0.js');
require('./ClassBreaksDefinition-fc75df48.js');
require('./colorRamps-d0c2cb9d.js');
require('./Color-7d915caa.js');
require('./colorUtils-e70dbab5.js');
require('./enumeration-f235fe07.js');
require('./Symbol-f0556e23.js');
require('./spatialQuerySupport-16372b87.js');
require('./opacityUtils-f2e4b347.js');
require('./FieldsIndex-664af19b.js');
require('./Scheduler-72cbcf2a.js');
require('./debugFlags-5e6b0151.js');
require('./screenUtils-e9e44bb6.js');
require('./Graphic-0aff6059.js');
require('./PopupTemplate-a0b855f8.js');
require('./Identifiable-a4f50f85.js');
require('./symbols-29b793e5.js');
require('./screenUtils-d911ae62.js');
require('./persistableUrlUtils-c611d652.js');
require('./Portal-8d16604d.js');
require('./executeQueryJSON-3f84e897.js');
require('./utils-8a0a0870.js');
require('./query-0e394548.js');
require('./pbfQueryUtils-49e071a8.js');
require('./pbf-dc87045b.js');
require('./queryZScale-d48be112.js');
require('./zscale-25ef55f0.js');
require('./Query-354911d3.js');
require('./TimeExtent-8b558884.js');
require('./Field-b92c6f4a.js');
require('./fieldType-32f95259.js');
require('./FeatureSet-8efc5965.js');
require('./TopFeaturesQuery-92caa731.js');
require('./Heading-d7c5e432.js');
require('./widget-b8f4aeaf.js');
require('./QueryTask-3b24eec5.js');
require('./Task-95a3fa39.js');
require('./FeatureLayer-68e51b64.js');
require('./UniqueValueRenderer-1c485e9f.js');
require('./VisualVariablesMixin-a105fcfa.js');
require('./ColorStop-ce63948c.js');
require('./sizeVariableUtils-9012516e.js');
require('./visualVariableUtils-1740874b.js');
require('./lengthUtils-179eaf12.js');
require('./diffUtils-df69757f.js');
require('./jsonUtils-62d28b73.js');
require('./styleUtils-2b475600.js');
require('./DictionaryRenderer-a0dce499.js');
require('./LRUCache-38fdf18d.js');
require('./jsonUtils-fc4080da.js');
require('./MultiOriginJSONSupport-77ac451b.js');
require('./HeightModelInfo-06fd3d80.js');
require('./Layer-31cde361.js');
require('./workers-bde9fe32.js');
require('./APIKeyMixin-77c99036.js');
require('./ArcGISService-56d7a630.js');
require('./arcgisLayerUrl-5174d661.js');
require('./BlendLayer-6a2ab430.js');
require('./CustomParametersMixin-996a5732.js');
require('./labelingInfo-594911d5.js');
require('./OperationalLayer-853649aa.js');
require('./ElevationInfo-d3e3d64f.js');
require('./LabelClass-4b91d60e.js');
require('./labelUtils-73814dda.js');
require('./defaultsJSON-0cdf7a99.js');
require('./OrderedLayer-8690aaf5.js');
require('./PortalLayer-7556e594.js');
require('./asyncUtils-cd78b718.js');
require('./PortalItem-8bcd02f8.js');
require('./RefreshableLayer-487bd7b3.js');
require('./ScaleRangeLayer-5320a5ba.js');
require('./TemporalLayer-06f08bdd.js');
require('./TimeInfo-050c5617.js');
require('./FeatureType-d8b81062.js');
require('./fieldProperties-c9dd6469.js');
require('./LayerFloorInfo-c56fa764.js');
require('./styleUtils-536b017f.js');
require('./popupUtils-7a76fb7d.js');
require('./utils-71e85012.js');
require('./utils-fb318f28.js');
require('./Queue-1713f2e9.js');
require('./layerViewUtils-96bae70b.js');
require('./GoTo-be01affb.js');
require('./accessibleHandler-652e5d90.js');
require('./vmEvent-9b257013.js');
require('./InputField-f3d341ce.js');
require('./luxon-b6474344.js');
require('./_commonjsHelpers-1fbbf0eb.js');
require('./GraphicsLayer-5076fd9b.js');
require('./GraphicsCollection-d70ae8cb.js');
require('./drapedUtils-2fa2770f.js');
require('./hitTestSelectUtils-9a744d46.js');
require('./geodesicUtils-4d3dae6f.js');
require('./vec2-d000a8cb.js');
require('./vec2f64-60b3c97e.js');
require('./geometry2dUtils-65eda69d.js');
require('./PointSnappingHint-f5c433ac.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
exports.GraphicsSnappingSource=class extends(HandleOwner.a(request.p)){constructor(e){super(e),this.availability=1,this.sources={multipoint:null,point:null,polygon:null,polyline:null},this.loadedWkids=new Set,this.loadedWkts=new Set,this.pendingAdds=[];}get updating(){return this.updatingHandles.updating}get layer(){return this.layerSource.layer}destroy(){const e=this.pendingAdds;this.pendingAdds.length=0;for(const t of e)t.task.abort();this.mapSources((e=>this.destroySource(e)));}initialize(){this.handles.add([this.layer.on("graphic-update",(e=>this.onGraphicUpdate(e))),this.updatingHandles.addOnCollectionChange(this.layer.graphics,(e=>this.onGraphicsChanged(e)))]),this.addMany(this.layer.graphics.toArray());}async fetchCandidates(e,t){const r=await request.E$1(this.mapSources((r=>r.queryEngine.executeQueryForSnapping({point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),distance:e.distance,types:e.types,query:request.r(e.filter)?e.filter.createQuery().toJSON():{where:"1=1"}},t).then((({candidates:e})=>e))))),s=r.flat().map((t=>queryEngineUtils.o(t,e.coordinateHelper)));return arcgisEditor_entry.p$1(e.point,s),s}refresh(){}onGraphicUpdate(e){switch(e.property){case"geometry":case"visible":this.remove(e.graphic),this.addMany([e.graphic]);}}onGraphicsChanged(e){for(const t of e.removed)this.remove(t);this.addMany(e.added);}addMany(e){const t=[],r=new Map;for(const s of e)request.t$1(s.geometry)||(this.needsInitializeProjection(s.geometry.spatialReference)?(t.push(s.geometry.spatialReference),r.set(s.uid,s)):this.add(s));this.createPendingAdd(t,r);}createPendingAdd(e,t){if(!e.length)return;const s=request.F$1((async r=>{await projection.rn(e.map((e=>({source:e,dest:this.spatialReference}))),{signal:r}),this.markLoadedSpatialReferences(e);for(const[,e]of t)this.add(e);}));this.updatingHandles.addPromise(s.promise);const o={task:s,graphics:t},i=()=>request.v$3(this.pendingAdds,o);s.promise.then(i,i),this.pendingAdds.push(o);}markLoadedSpatialReferences(e){for(const t of e)null!=t.wkid&&this.loadedWkids.add(t.wkid),null!=t.wkt&&this.loadedWkts.add(t.wkt);}add(e){if(request.t$1(e.geometry)||!e.visible)return;let t=e.geometry;if("mesh"===t.type)return;"extent"===t.type&&(t=geometry.v.fromExtent(t));const r=this.ensureSource(t.type);if(request.t$1(r))return;const s=this.createOptimizedFeature(e.uid,t);request.r(s)&&r.featureStore.add(s);}needsInitializeProjection(e){return (null==e.wkid||!this.loadedWkids.has(e.wkid))&&((null==e.wkt||!this.loadedWkts.has(e.wkt))&&!projection.tn(e,this.spatialReference))}createOptimizedFeature(e,t){const r=projection.O(normalizeUtilsSync.u(t),this.spatialReference);return r?new OptimizedFeature.s(featureConversionUtils.et(r,!1,!1),{[O]:e},null,e):null}ensureSource(e){const t=this.sources[e];if(request.r(t))return t;const r=this.createSource(e);return this.sources[e]=r,r}createSource(e){const t=geometry.i$1.toJSON(e),r=new FeatureStore.m({geometryType:t,hasZ:!1,hasM:!1});return {featureStore:r,queryEngine:new QueryEngine.V({featureStore:r,fields:[{name:O,type:"esriFieldTypeOID",alias:O}],geometryType:t,hasM:!1,hasZ:!1,objectIdField:O,spatialReference:this.spatialReference,scheduler:request.r(this.view)&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:e}}remove(e){this.mapSources((t=>this.removeFromSource(t,e)));for(const t of this.pendingAdds)t.graphics.delete(e.uid),0===t.graphics.size&&t.task.abort();}removeFromSource(e,t){const r=t.uid;e.featureStore.has(r)&&e.featureStore.removeById(t.uid);}destroySource(e){e.queryEngine.destroy(),this.sources[e.type]=null;}mapSources(e){const{point:t,polygon:r,polyline:s,multipoint:i}=this.sources,a=[];return request.r(t)&&a.push(e(t)),request.r(r)&&a.push(e(r)),request.r(s)&&a.push(e(s)),request.r(i)&&a.push(e(i)),a}};request.e([request.d({constructOnly:!0})],exports.GraphicsSnappingSource.prototype,"spatialReference",void 0),request.e([request.d({constructOnly:!0})],exports.GraphicsSnappingSource.prototype,"layerSource",void 0),request.e([request.d({constructOnly:!0})],exports.GraphicsSnappingSource.prototype,"view",void 0),request.e([request.d({readOnly:!0})],exports.GraphicsSnappingSource.prototype,"updating",null),request.e([request.d({readOnly:!0})],exports.GraphicsSnappingSource.prototype,"availability",void 0),exports.GraphicsSnappingSource=request.e([request.i("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],exports.GraphicsSnappingSource);const O="OBJECTID";
