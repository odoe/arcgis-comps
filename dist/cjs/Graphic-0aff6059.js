'use strict';

const request = require('./messageBundle-8be88d04.js');
const geometry = require('./geometry-ef17530a.js');
const PopupTemplate = require('./PopupTemplate-a0b855f8.js');
const SimpleLineSymbol = require('./symbols-29b793e5.js');
const jsonUtils = require('./jsonUtils-b6068079.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
var m;let n=m=class extends request.a$2{constructor(...t){super(...t),this.isAggregate=!1,this.layer=null,this.popupTemplate=null,this.sourceLayer=null,Object.defineProperty(this,"uid",{value:request.e$5(),configurable:!0});}normalizeCtorArgs(t,e,r,s){return t&&!t.declaredClass?t:{geometry:t,symbol:e,attributes:r,popupTemplate:s}}set attributes(t){const e=this._get("attributes");e!==t&&(this._set("attributes",t),this._notifyLayer("attributes",e,t));}set geometry(t){const e=this._get("geometry");e!==t&&(this._set("geometry",t),this._notifyLayer("geometry",e,t));}set symbol(t){const e=this._get("symbol");e!==t&&(this._set("symbol",t),this._notifyLayer("symbol",e,t));}set visible(t){const e=this._get("visible");e!==t&&(this._set("visible",t),this._notifyLayer("visible",e,t));}getEffectivePopupTemplate(t=!1){if(this.popupTemplate)return this.popupTemplate;for(const e of [this.sourceLayer,this.layer])if(e){if("popupTemplate"in e&&e.popupTemplate)return e.popupTemplate;if(t&&"defaultPopupTemplate"in e&&request.r(e.defaultPopupTemplate))return e.defaultPopupTemplate}return null}getAttribute(t){return this.attributes&&this.attributes[t]}setAttribute(t,e){if(this.attributes){const r=this.getAttribute(t);this.attributes[t]=e,this._notifyLayer("attributes",r,e,t);}else this.attributes={[t]:e},this._notifyLayer("attributes",void 0,e,t);}getObjectId(){return this.sourceLayer&&"objectIdField"in this.sourceLayer&&this.sourceLayer.objectIdField?this.getAttribute(this.sourceLayer.objectIdField):null}toJSON(){return {geometry:request.r(this.geometry)?this.geometry.toJSON():null,symbol:request.r(this.symbol)?this.symbol.toJSON():null,attributes:{...this.attributes},popupTemplate:this.popupTemplate&&this.popupTemplate.toJSON()}}clone(){return new m(this.cloneProperties())}notifyGeometryChanged(){this._notifyLayer("geometry",this.geometry,this.geometry);}cloneProperties(){return {attributes:request.l$1(this.attributes),geometry:request.l$1(this.geometry),layer:this.layer,popupTemplate:this.popupTemplate&&this.popupTemplate.clone(),sourceLayer:this.sourceLayer,symbol:request.l$1(this.symbol),visible:this.visible}}_notifyLayer(t,e,r,s){if(!this.layer||!("graphicChanged"in this.layer))return;const o={graphic:this,property:t,oldValue:e,newValue:r};"attributes"===t&&(o.attributeName=s),this.layer.graphicChanged(o);}};request.e([request.d({value:null})],n.prototype,"attributes",null),request.e([request.d({value:null,types:geometry.i,json:{read:jsonUtils.d}})],n.prototype,"geometry",null),request.e([request.d({type:Boolean})],n.prototype,"isAggregate",void 0),request.e([request.d()],n.prototype,"layer",void 0),request.e([request.d({type:PopupTemplate.M})],n.prototype,"popupTemplate",void 0),request.e([request.d()],n.prototype,"sourceLayer",void 0),request.e([request.d({value:null,types:SimpleLineSymbol.j})],n.prototype,"symbol",null),request.e([request.d({type:Boolean,value:!0})],n.prototype,"visible",null),n=m=request.e([request.i("esri.Graphic")],n),function(t){t.generateUID=request.e$5;}(n||(n={}));const h=n;

exports.h = h;
