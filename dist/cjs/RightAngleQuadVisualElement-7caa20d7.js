'use strict';

const request = require('./messageBundle-8be88d04.js');
const mat4 = require('./mat4-f68486bc.js');
const mat4f64 = require('./mat4f64-fc3339e5.js');
const mathUtils = require('./mathUtils-af6066f0.js');
const common = require('./common-41a349f2.js');
const vec4f32 = require('./vec4f32-284fd490.js');
const vectorStacks = require('./vectorStacks-f48a010a.js');
const LineVisualElement = require('./LineVisualElement-62f61931.js');
const Texture = require('./Texture-16b1a373.js');
const ColorMaterial = require('./ColorMaterial-61b9182b.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class y extends LineVisualElement.c{constructor(t){super(t),this._handles=new request.u,this._quadMaterial=null,this._outlineMaterial=null,this._maxSize=0,this._position=common.n(),this._up=common.n(),this._right=common.n(),this._renderOccluded=4,this._color=vec4f32.r(1,0,0,1),this._outlineColor=vec4f32.r(0,0,0,1),this._outlineSize=0,this._size=32,this._outlineRenderOccluded=16,this.applyProps(t);}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateQuadMaterial());}get color(){return this._color}set color(e){mathUtils.a$1(this._color,e),this._updateQuadMaterial();}get outlineColor(){return this._outlineColor}set outlineColor(e){mathUtils.a$1(this._outlineColor,e),this._updateOutlineMaterial();}get outlineSize(){return this._outlineSize}set outlineSize(e){const t=0===this._outlineSize!=(0===e);this._outlineSize=e,t?this.recreateGeometry():this._updateOutlineMaterial();}get size(){return this._size}set size(e){e!==this._size&&(this._size=e,this._updateTransform());}get outlineRenderOccluded(){return this._outlineRenderOccluded}set outlineRenderOccluded(e){this._outlineRenderOccluded=e,this._updateOutlineMaterial();}set geometry({previous:e,center:t,next:i}){this._maxSize=Math.min(mathUtils.q(t,e),mathUtils.q(t,i))/3,mathUtils.j$1(this._up,mathUtils.c(this._up,e,t)),mathUtils.j$1(this._right,mathUtils.c(this._right,i,t)),mathUtils.r(this._position,t),this.recreateGeometry();}createExternalResources(){this._quadMaterial=new ColorMaterial.h$1(this.quadMaterialParameters),this._outlineMaterial=new ColorMaterial.W$1(this.outlineMaterialParameters),this._handles.add(this.view.state.watch("camera",(()=>this._updateTransform())));}destroyExternalResources(){this._quadMaterial=null,this._outlineMaterial=null,this._handles.removeAll();}forEachExternalMaterial(e){e(this._quadMaterial),e(this._outlineMaterial);}createGeometries(e){this._createQuadGeometry(e),this._createOutlineGeometry(e),this._updateTransform(e);}_createQuadGeometry(e){const t=this._quadGeometryData(this._up,this._right);e.addGeometry(t,this._quadMaterial);}_createOutlineGeometry(e){if(0===this._outlineSize)return;const t=mathUtils.u(vectorStacks.c.get(),this._up,this._right),i=ColorMaterial.P.createPolylineGeometry([this._up,t,this._right]);e.addGeometry(i,this._outlineMaterial);}_updateTransform(e=this.object){const a=this.view.state.camera,o=this._size*a.computeScreenPixelSizeAt(this._position),l=Math.min(this._maxSize,o);mat4.r(z),mat4.c(z,z,this._position),mat4.i(z,z,[l,l,l]),request.r(e)&&(e.transformation=z);}_quadGeometryData(e,t){const i=mathUtils.u(vectorStacks.c.get(),e,t);return new Texture.u$1([["position",{size:3,data:[0,0,0,...t,...e,...i],exclusive:!0}]],[["position",new Uint16Array([0,1,2,1,2,3])]])}get quadMaterialParameters(){return {color:this._color,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:this._renderOccluded}}_updateQuadMaterial(){this._quadMaterial&&this._quadMaterial.setParameters(this.quadMaterialParameters);}get outlineMaterialParameters(){return {color:this._outlineColor,width:this._outlineSize,renderOccluded:this._outlineRenderOccluded}}_updateOutlineMaterial(){this._outlineMaterial&&this._outlineMaterial.setParameters(this.outlineMaterialParameters);}}const z=mat4f64.e();

exports.y = y;
