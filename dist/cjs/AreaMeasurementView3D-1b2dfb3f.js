'use strict';

const request = require('./messageBundle-8be88d04.js');
const viewUtils = require('./viewUtils-0b5cd4c9.js');
const AnalysisView3D = require('./AnalysisView3D-8420fe96.js');
const aaBoundingRect = require('./aaBoundingRect-56648c00.js');
const EditGeometryOperations = require('./EditGeometryOperations-10283cb0.js');
const mathUtils = require('./mathUtils-af6066f0.js');
const reactiveUtils = require('./reactiveUtils-ef5dccea.js');
const unitUtils = require('./unitUtils-083cb8d0.js');
const mat4 = require('./mat4-f68486bc.js');
const mat4f64 = require('./mat4f64-fc3339e5.js');
const common = require('./common-41a349f2.js');
const LineVisualElement = require('./LineVisualElement-62f61931.js');
const vec4f64 = require('./vec4f64-d3fa6cd2.js');
const Texture = require('./Texture-16b1a373.js');
const ColorMaterial = require('./ColorMaterial-61b9182b.js');
const OrderIndependentTransparency = require('./OrderIndependentTransparency-866eb67c.js');
const projection = require('./projection-b19710fa.js');
const earcut = require('./earcut-d5562923.js');
const vec2 = require('./vec2-d000a8cb.js');
const vec2f64 = require('./vec2f64-60b3c97e.js');
const geometryEngine = require('./geometryEngine-f0bb4840.js');
const geometry = require('./geometry-ef17530a.js');
const geodesicUtils = require('./geodesicUtils-4d3dae6f.js');
const mathUtils$1 = require('./mathUtils-87b1f941.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let g=class extends request.n$2.EventedAccessor{constructor(e={}){super(e),this._handles=new request.u,this._version=0,this._internalGeometryChange=!1,this._extent=aaBoundingRect.B();}destroy(){this._handles=request.l$3(this._handles);}set areaMeasurement(e){this._set("areaMeasurement",e),request.r(e)&&request.r(this.view)&&this._initialize(e,this.view);}set view(e){this._set("view",e),request.r(e)&&request.r(this.areaMeasurement)&&this._initialize(this.areaMeasurement,e);}get initialized(){return request.r(this.areaMeasurement)&&request.r(this.view)}get version(){return this._version}get isValidPolygon(){return this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].isClosed()}get extent(){if(this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].vertices.length>0){const e=aaBoundingRect.B(this._extent);return this.forEachVertex((t=>{aaBoundingRect.f(e,t.pos);})),e}return null}get spatialReference(){return this.initialized?this.editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this._handles.removeAll(),this._handles.add(request.i$1(e,"geometry",(()=>this._updateEditGeometryFromModelGeometry(e,t)),!0)),this._makeDirty(!0);}_makeDirty(e=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices");}_updateEditGeometryFromModelGeometry(e,t){this._version++,this._internalGeometryChange||(this._handles.remove("EditGeometry"),request.r(e.geometry)?this._editGeometryOperations=EditGeometryOperations.l.fromGeometry(e.geometry,t.state.viewingMode):this._editGeometryOperations=new EditGeometryOperations.l(new EditGeometryOperations.g("polygon",EditGeometryOperations.x(!0,!1,t.spatialReference),t.state.viewingMode)),this._makeDirty(!0),this.emit("change"),this._handles.add(this.editGeometry.on("change",(t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this.editGeometry.geometry:null,this._internalGeometryChange=!1;})),"EditGeometry"));}get editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t);})),e}get numVertices(){return this.initialized&&this.editGeometry.components.length>0?this.editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.initialized&&this.editGeometry.components.length>0){const e=this.editGeometry.components[0].getLastVertex();if(request.r(e))return this.editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.initialized||0===this.editGeometry.components.length||0===this.editGeometry.components[0].vertices.length)return null;const t=this.editGeometry.components[0].vertices[0];let i=t;do{if(i.index===e)return i;i=i.rightEdge.rightVertex;}while(i!==t&&null!=i);return null}getVertexPositionAsPoint(e){return this.editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this.editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].iterateVertices(e);}forEachVertexPosition(e){const t=this.editGeometry.coordinateHelper;this.forEachVertex(((i,r)=>{t.vectorToPoint(i.pos,G$1),e(G$1,r);}));}clear(){request.r(this.areaMeasurement)&&(this.areaMeasurement.geometry=null);}add(e){if(!this.initialized)return null;if(0===this.editGeometry.components.length){const e=request.e$2(this.view);this.editGeometry.components.push(new EditGeometryOperations.p(e.spatialReference,e.state.viewingMode));}const t=this._editGeometryOperations.appendVertex(this.editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.initialized||0===this.editGeometry.components.length)return null;const e=this._editGeometryOperations.closeComponent(this.editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,t=""){let i=!1;if(this.editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(i=!0);}));})),!i)throw new Error(`vertex doesnt exist ${t}`);return i}setVertexPosition(e,t){if(!this.initialized)return null;const i=this._editGeometryOperations.setVertexPosition(e,this.editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),i}equals(e){if(this.numVertices!==e.numVertices)return !1;let t=!0;return this.forEachVertexPosition(((i,r)=>{const o=e.getVertexPositionAsPointFromIndex(r);i.equals(o)||(t=!1);})),!!t}};request.e([request.d({value:null})],g.prototype,"areaMeasurement",null),request.e([request.d({value:null})],g.prototype,"view",null),request.e([request.d()],g.prototype,"isValidPolygon",null),request.e([request.d()],g.prototype,"extent",null),request.e([request.d()],g.prototype,"spatialReference",null),request.e([request.d()],g.prototype,"numVertices",null),g=request.e([request.i("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper")],g);const G$1=new request.b$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let i=class extends request.p{constructor(){super(...arguments),this.measurementData=null,this.unitNormalizer=new viewUtils.t,this.path=new g,this.lastDraggedVertex=null,this.mode=0;}destroy(){this.measurementData=null,this.path=request.l$3(this.path);}get validMeasurement(){return this.path.isValidPolygon}};request.e([request.d()],i.prototype,"measurementData",void 0),request.e([request.d()],i.prototype,"validMeasurement",null),request.e([request.d()],i.prototype,"unitNormalizer",void 0),request.e([request.d()],i.prototype,"path",void 0),request.e([request.d()],i.prototype,"lastDraggedVertex",void 0),request.e([request.d()],i.prototype,"cursorPoint",void 0),request.e([request.d()],i.prototype,"mode",void 0),i=request.e([request.i("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementView3DData")],i);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
function o(o){const t=new Texture.n;return t.extensions.add("GL_OES_standard_derivatives"),t.attributes.add("position","vec3"),t.attributes.add("uv0","vec2"),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),t.varyings.add("vUV","vec2"),o.multipassTerrainEnabled&&t.varyings.add("depth","float"),t.vertex.code.add(Texture.t`
    void main(void) {
      vUV = uv0;
      ${o.multipassTerrainEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),o.multipassTerrainEnabled&&(t.fragment.include(Texture.a),t.include(Texture.r$6,o)),t.fragment.uniforms.add("size","vec2").add("color1","vec4").add("color2","vec4"),t.fragment.include(Texture.e$1),t.fragment.code.add(Texture.t`
    void main() {
      ${o.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${o.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),t}const t=Object.freeze({__proto__:null,build:o});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class y$1 extends Texture.t$2{initializeProgram(r){const e=y$1.shader.get(),t=this.configuration,o=e.build({OITEnabled:0===t.transparencyPassType,multipassTerrainEnabled:t.multipassTerrainEnabled,cullAboveGround:t.cullAboveGround});return new Texture.n$1(r.rctx,o,Texture.o)}bindPass(r,o){Texture.t$5(this.program,o.camera.projectionMatrix),this.program.setUniform2fv("size",r.size),this.program.setUniform4fv("color1",r.color1),this.program.setUniform4fv("color2",r.color2),o.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",o.camera.nearFar),this.program.setUniform2fv("inverseViewport",o.inverseViewport),Texture.t$7(this.program,o));}bindDraw(r){Texture.a$4(this.program,r);}setPipelineState(r){const e=this.configuration,t=3===r,o=2===r;return OrderIndependentTransparency.g({blending:e.transparent?t?v:OrderIndependentTransparency.c(r):null,depthTest:{func:OrderIndependentTransparency.a(r)},depthWrite:t?e.writeDepth&&OrderIndependentTransparency.l:OrderIndependentTransparency.l$1(r),colorWrite:OrderIndependentTransparency.r,polygonOffset:t||o?e.polygonOffset&&T:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}y$1.shader=new Texture.t$3(t,(()=>Promise.resolve().then(function () { return require('./CheckerBoard.glsl-71c81826.js'); })));const T={factor:0,units:-25},v=OrderIndependentTransparency.e(770,1,771,771);class j extends Texture.t$1{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1;}}request.e([Texture.e()],j.prototype,"transparent",void 0),request.e([Texture.e()],j.prototype,"writeDepth",void 0),request.e([Texture.e()],j.prototype,"polygonOffset",void 0),request.e([Texture.e({count:4})],j.prototype,"transparencyPassType",void 0),request.e([Texture.e()],j.prototype,"multipassTerrainEnabled",void 0),request.e([Texture.e()],j.prototype,"cullAboveGround",void 0);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class u$1 extends Texture.a$5{constructor(e){super(e,h$2),this.techniqueConfig=new j;}dispose(){}getPassParameters(){return this.parameters}getTechniqueConfig(e,t){return this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig}intersect(e,t,r,s,i,a,o){return Texture.h(e,t,s,i,a,void 0,o)}requiresSlot(e){let t=2;return this.parameters.transparent&&(t=this.parameters.writeDepth?4:7),e===t||20===e}createGLMaterial(e){return 0===e.output||7===e.output?new p(e):null}createBufferWriter(){return new ColorMaterial.f$2(ColorMaterial.o$5)}}class p extends Texture.e$5{updateParameters(e){return this.ensureTechnique(y$1,e)}beginSlot(e){return this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e);}}const h$2={size:[1,1],color1:[.75,.75,.75,1],color2:[.5,.5,.5,1],transparent:!1,writeDepth:!0,polygonOffset:!1,...Texture.n$2};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class d extends LineVisualElement.c{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=4,this._geometry=null,this._size=[1,1],this._color1=vec4f64.r(1,.5,0,.5),this._color2=vec4f64.r(1,1,1,.5),this.applyProps(e);}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial());}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged();}get size(){return this._size}set size(e){this._size=e,this.updateMaterial();}get color1(){return this._color1}set color1(e){mathUtils.D(e,this._color1)||(mathUtils.a$1(this._color1,e),this.updateMaterial());}get color2(){return this._color2}set color2(e){mathUtils.D(e,this._color2)||(mathUtils.a$1(this._color2,e),this.updateMaterial());}updateMaterial(){request.r(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded});}createExternalResources(){this._checkerBoardMaterial=new u$1({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:4});}destroyExternalResources(){this._checkerBoardMaterial=null;}forEachExternalMaterial(r){request.r(this._checkerBoardMaterial)&&r(this._checkerBoardMaterial);}createGeometries(e){if(request.t$1(this._geometry)||request.t$1(this._checkerBoardMaterial))return;const i=u;mat4.j(i,this.transform);const c=this._geometry,a=[],h=common.n();c.position.forEach((e=>{mathUtils.c(h,e,i),a.push(h[0],h[1],h[2]);}));const n=[];c.uv.forEach((e=>{n.push(e[0],e[1]);}));const d=new Texture.u$1([["position",{size:3,data:a,exclusive:!0}],["uv0",{size:2,data:n,exclusive:!0}]],[["position",c.triangleIndices],["uv0",c.triangleIndices]]);e.addGeometry(d,this._checkerBoardMaterial);}geometryChanged(){this.recreateGeometry();}}const u=common.n();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let I=class extends request.p{constructor(e){super(e),this._handles=new request.u,this._params={...U$1},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=common.n(),this._originTransform=mat4f64.e(),this._cursorPositionRenderSpace=common.n(),this.messages=null,this.viewData=z$1,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0;}get visible(){return this.analysisView.visible}get testData(){return {labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const e=this.view,t=this._params;this._path=new LineVisualElement.m({view:e,attached:!0,width:t.pathLineWidth,color:t.pathLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPath=new LineVisualElement.m({view:e,attached:!0,width:t.pathLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._perimeter=new LineVisualElement.m({view:e,attached:!0,width:t.perimeterLineWidth,color:t.perimeterLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPerimeter=new LineVisualElement.m({view:e,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._projectionLines=new LineVisualElement.m({view:e,attached:!0,width:t.projectionLineWidth,color:t.projectionLineColor,stipplePattern:ColorMaterial.a$4(t.projectionLineStippleSize),stippleIntegerRepeats:!1,polygonOffset:!0,renderOccluded:4}),this._measurementArea=new d({view:e,attached:!0,color1:t.areaColor1,color2:t.areaColor2}),this._areaLabel=new viewUtils.v({view:this.view,attached:!0,fontSize:16}),this._pathLengthLabel=new viewUtils.v({view:e,attached:!0,fontSize:12}),this._cursorSegmentLengthLabel=new viewUtils.v({view:e,attached:!0,fontSize:12}),this._perimeterLengthLabel=new viewUtils.v({view:e,attached:!0,fontSize:12});const i=this.analysisView.analysisViewData;this._handles.add([reactiveUtils.i((()=>[i.mode,this.visible,this.analysisView.unit,i.measurementData,i.cursorPoint]),(()=>this._update()),reactiveUtils.p),reactiveUtils.i((()=>{var t;return null==(t=e.state)?void 0:t.camera}),(()=>this._updateLabels()),reactiveUtils.p),request.g((async()=>this._updateMessageBundle()))]),this._updateMessageBundle();}destroy(){this._measurementArea=request.l$3(this._measurementArea),this._path=request.l$3(this._path),this._intersectedPath=request.l$3(this._intersectedPath),this._perimeter=request.l$3(this._perimeter),this._intersectedPerimeter=request.l$3(this._intersectedPerimeter),this._areaLabel=request.l$3(this._areaLabel),this._pathLengthLabel=request.l$3(this._pathLengthLabel),this._cursorSegmentLengthLabel=request.l$3(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=request.l$3(this._perimeterLengthLabel),this._handles=request.l$3(this._handles),this.set("view",null);}_update(){if(this.destroyed)return;const e=this.analysisView.analysisViewData.measurementData;request.t$1(e)||(this._updateViewData(e,this.analysisView.analysisViewData.path,this.analysisView.analysisViewData.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels());}_updateViewData(e,t,i){const r=t.isValidPolygon,n="geodesic"===e.actualMeasurementMode,a=n?e.geodesicArea:e.area;let o=1;if(a){const t=this._toPreferredAreaUnit(a,this.analysisView.unit);o=mathUtils.f$1(Math.sqrt(t.value)/Math.sqrt(300)),o*=Math.sqrt(unitUtils.D(1,t.unit,"square-meters")),o/=e.unitNormalizer.normalizeDistance(1);}const l={validMeasurement:r,path:t,pathVersion:t.version,cursorPoint:i,measurementData:e,mode:e.actualMeasurementMode,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:n?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:n?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:n?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:r?0:t.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",l);}_updateOrigin(){const e=this.viewData;viewUtils.g(e.positionsRenderCoords,this._origin),mat4.r(this._originTransform),mat4.c(this._originTransform,this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform;}_createSegments(e){const t=this.viewData,i=t.path,s=this.view.renderCoordsHelper.spatialReference,r=t.mode,n=[],a=[],o=[],l=t.validMeasurement?i.numVertices:i.numVertices-1;for(let h=0;h<l;++h){const l=t[e][h],m=t[e][(h+1)%i.numVertices];let c=null;switch(r){case"euclidean":c=new viewUtils._(l,m);break;case"geodesic":c=new viewUtils.f(l,m,s);}t.intersectingSegments.has(h)?o.push(c):a.push(c),n.push(c);}return {all:n,nonIntersecting:a,intersecting:o}}_updatePathSegments(){const e=this.visible,t=this.viewData,i=this._createSegments("positionsRenderCoords"),s=t.path,r=!s.isValidPolygon,n=t.cursorPoint,o=this.view.renderCoordsHelper,l=o.spatialReference,h=t.mode;if(this._cursorSegment=null,s.numVertices>0&&r&&request.r(n)){if(o.toRenderCoords(n,this._cursorPositionRenderSpace)){const e=t.positionsRenderCoords[s.numVertices-1],r=this._cursorPositionRenderSpace;let n=null;switch(h){case"euclidean":n=new viewUtils._(e,r);break;case"geodesic":n=new viewUtils.f(e,r,l);}i.nonIntersecting.push(n),this._cursorSegment=n;}}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=e,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=e,this._pathSegments=i.all;}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode,t=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all;}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic();}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1;}_updateAreaGeodesic(){this._measurementArea.visible=!1;}_updateProjectionLines(){const e=this.viewData,t=this.visible,i=e.path,s=e.mode;if(i.numVertices>0&&e.validMeasurement&&"euclidean"===s){const s=[];for(let t=0;t<i.numVertices;++t){const i=common.n();mathUtils.c(i,e.positionsRenderCoords[t],this._origin);const r=common.n();mathUtils.c(r,e.positionsFittedRenderCoords[t],this._origin),s.push([i,r]);}this._projectionLines.geometry=s,this._projectionLines.visible=t;}else this._projectionLines.geometry=null,this._projectionLines.visible=!1;}_updateLabels(){if(this.destroyed)return;const e=this.viewData,t=e.path;if(!t)return;const i=e.measurementData,s=e.mode,r=!t.isValidPolygon,n=this.visible,l=this._formatAreaLabel(this.messages,"geodesic"===s?i.geodesicArea:i.area,this.analysisView.unit);request.r(l)?(this._areaLabel.geometry={type:"point",point:e.areaCentroid},this._areaLabel.text=l,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&n):this._areaLabel.visible=!1,this._set("areaLabel",request.e$2(l));const h=this._formatLengthLabel(this.messages,"geodesic"===s?i.geodesicPathLength:i.pathLength,this.analysisView.unit);if(request.r(h)&&e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const i=this._pathSegments[e.pathLengthLabelSegmentIndex],s=request.r(this._cursorSegment)?this._cursorSegment:k$1;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:i,right:s},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&t.numVertices>0&&n;}else this._pathLengthLabel.visible=!1;const m="geodesic"===s?e.measurementData.geodesicCursorSegmentLength:e.measurementData.cursorSegmentLength;if(request.r(m)){const e=this._formatLengthLabel(this.messages,m,this.analysisView.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=request.r(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=request.e$2(e),this._cursorSegmentLengthLabel.visible=r&&0!==m.value&&n;}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const c="geodesic"===e.mode,d=c?i.geodesicPathLength:i.perimeterLength,p=request.e$2(null!=d?this._formatLengthLabel(this.messages,d,this.analysisView.unit):null);if(this._set("perimeterLengthLabel",request.e$2(p)),e.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=p,this._perimeterLengthLabel.visible=!0;let t=!0;for(let i=0;i<e.path.numVertices;++i){const s=(e.perimeterLengthLabelSegmentIndex+i)%e.path.numVertices,r=c?this._pathSegments[s]:this._perimeterSegments[s];if(t=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;t=!1;}this._perimeterLengthLabel.visible=t&&n;}else this._perimeterLengthLabel.visible=!1;}_toPreferredAreaUnit(e,t){return e.toUnit(this._preferredAreaUnit(e,t))}_preferredAreaUnit(e,t){switch(t){case"metric":return unitUtils.J(e.value,e.unit);case"imperial":return unitUtils.K(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const i=this._deriveLengthUnitFromAreaUnit(t);switch(i){case"metric":return unitUtils.E(e.value,e.unit);case"imperial":return unitUtils.O(e.value,e.unit);default:return i}}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":case"ares":case"hectares":return "metric";case"imperial":case"acres":return "imperial";case"square-inches":return "inches";case"square-feet":return "feet";case"square-yards":return "yards";case"square-miles":return "miles";case"square-us-feet":return "us-feet";case"square-millimeters":return "millimeters";case"square-centimeters":return "centimeters";case"square-decimeters":return "decimeters";case"square-meters":return "meters";case"square-kilometers":return "kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(e,t,i){return e&&t&&viewUtils.l(e,t,this._preferredAreaUnit(t,i))}_formatLengthLabel(e,t,i){return e&&t&&viewUtils.l(e,t,this._preferredLengthUnit(t,i))}_updateMessageBundle(){this.loadingMessages=!0,request.u$2("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._update();})).finally((()=>{this.loadingMessages=!1;}));}};request.e([request.d()],I.prototype,"view",void 0),request.e([request.d()],I.prototype,"messages",void 0),request.e([request.d()],I.prototype,"analysis",void 0),request.e([request.d()],I.prototype,"viewData",void 0),request.e([request.d()],I.prototype,"analysisView",void 0),request.e([request.d({readOnly:!0})],I.prototype,"areaLabel",void 0),request.e([request.d({readOnly:!0})],I.prototype,"perimeterLengthLabel",void 0),request.e([request.d()],I.prototype,"loadingMessages",void 0),request.e([request.d()],I.prototype,"visible",null),I=request.e([request.i("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],I);const U$1={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},z$1={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},k$1=new viewUtils._(common.n(),common.n());

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
function y(o,s){const i=s.center;mathUtils.o(i,0,0,0);for(let t=0;t<o.length;++t)mathUtils.u(i,i,o[t]);mathUtils.d(i,i,1/o.length);let f=0;for(let t=0;t<o.length;++t)f=Math.max(f,mathUtils.x$1(i,o[t]));s.radius=Math.sqrt(f);}function M(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");mathUtils$1._(t[0],t[1],t[2],e);}function b(t,e){return mathUtils.z(t,e)+t[3]}function P(t,e,n){return projection.wn(t,R,n)&&projection.wn(e,S,n)?mathUtils.q(R,S):0}function w(t,e){if(!projection.En(t,R)||!projection.En(e,S))return 0;const n={distance:null};return geodesicUtils.R(n,[R[0],R[1]],[S[0],S[1]]),n.distance}function z(t,e,n){const r={distance:null};return geodesicUtils.R(r,[t[0],t[1]],[e[0],e[1]],n),r.distance}function k(t,e,n){const r=e[0]-t[0],o=e[1]-t[1],s=n[0]-t[0],i=n[1]-t[1];return .5*Math.abs(r*i-o*s)}function q$1(t,e,n,r){const o=G;return projection.In(t,r,R)&&projection.In(e,r,S)&&projection.In(n,r,U)?(o.setPoint(0,0,R),o.setPoint(0,1,S),o.setPoint(0,2,U),Math.abs(geometryEngine.geodesicArea(o,"square-meters"))):0}function x(n,r=null,s=!0){const a=1e-6,c=(t,e)=>{if(0===e[0]&&0===e[1]&&0===e[2])return !1;for(let n=0;n<t.length;++n)if(mathUtils.z(e,t[n])<-a)return !1;return !0};if(0===n.length)return !1;if(1===n.length)return r&&mathUtils.r(r,n[0]),!0;mathUtils.o(W,0,0,0);for(let t=0;t<n.length;++t)mathUtils.u(W,W,n[t]);if(mathUtils.j$1(W,W),c(n,W))return r&&mathUtils.r(r,W),!0;if(!s)return !1;for(let t=0;t<n.length;++t)for(let e=0;e<n.length;++e)if(t!==e&&(mathUtils._(W,n[t],n[e]),mathUtils.j$1(W,W),c(n,W)))return r&&mathUtils.r(r,W),!0;return !1}const R=common.n(),S=common.n(),U=common.n(),G=new geometry.v({rings:[[R,S,U]],spatialReference:request.k.WGS84}),W=common.n();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class D{constructor(e,t){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=common.n(),this.areaCentroidRenderCoords=common.n(),this.geodesicAreaCentroidRenderCoords=common.n(),this._length=0,this._centroidRenderCoords=common.n(),this._planeWorldCoords=vec4f64.n(),this._worldUp=common.n(),this._worldTangent=common.n(),this._frame=[common.n(),common.n(),common.n()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=common.n(),this._tempV=common.n(),this._tempVec3=common.n(),this._tempSphere={center:common.n(),radius:0},this._sceneView=e,this.unitNormalizer=t;}update(e,s,o,r,n,h,d){const g=this.unitNormalizer,l=this._sceneView.renderSpatialReference,c=this.unitNormalizer.spatialReference,p=request.r(s);if(this._pathVersion===e.version&&this._validMeasurement===r&&!d&&this._hasCursorPoint===p&&this._mode===h)return !1;this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=p;const m=e.numVertices;this._resize(m);const u=unitUtils.O$1(o.spatialReference),_=projection.tn(o.spatialReference,u)&&projection.$n(o.spatialReference),C=this.positionsGeographic,f=this.positionsWorldCoords,w=this.positionsRenderCoords,M=this.positionsSpherical;e.forEachVertexPosition(((e,t)=>{B(o.elevationProvider,e),projection.wn(e,f[t],c),projection.wn(e,w[t],l),_&&(projection.En(e,C[t]),projection.wn(e,M[t],u),mathUtils.j$1(M[t],M[t]));}));const A=this._updatePathLengths(r);if(this.pathLength=this._length>1?new viewUtils.e(g.normalizeDistance(A),"meters"):null,_){const e=this._updateGeodesicPathLengths(r,c);this.geodesicPathLength=this._length>1?new viewUtils.e(e,"meters"):null;}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,h),r?(this._updateArea(o,g,l,c,n),_&&this._updateGeodesicArea(o),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return {positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(common.n()),this.positionsRenderCoords.push(common.n()),this.positionsProjectedWorldCoords.push(vec2f64.n()),this.positionsFittedRenderCoords.push(common.n()),this.positionsGeographic.push(common.n()),this.positionsSpherical.push(common.n()),this.positionsStereographic.push(vec2f64.n()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length;}_updatePathLengths(e){const t=this.positionsWorldCoords,s=this.pathSegmentLengths;let i=0;for(let o=0;o<this._length;++o){const r=s[o]=mathUtils.q(t[o],t[(o+1)%this._length]);(o<this._length-1||e)&&(i+=r);}return i}_updateGeodesicPathLengths(e,t){const s=this.positionsGeographic,i=this.geodesicPathSegmentLengths;let o=0;for(let r=0;r<this._length;++r){const n=i[r]=z(s[r],s[(r+1)%this._length],t);(r<this._length-1||e)&&(o+=n);}return o}_updateArea(e,t,s,o,n){const h=e.renderCoordsHelper,a=this.positionsWorldCoords,d=this.positionsRenderCoords,C=this.positionsProjectedWorldCoords,f=this.positionsFittedRenderCoords,S=this._planeWorldCoords,L=this._centroidRenderCoords;viewUtils.g$1(d,L),h.worldUpAtPosition(L,this._worldUp),h.worldBasisAtPosition(L,0,this._worldTangent),projection.Tn(L,this._worldUp,s,this._worldUp,o),projection.Tn(L,this._worldTangent,s,this._worldTangent,o),a.length>2&&M(a,S),this.fittingMode=this._selectFittingMode(S,a,this._worldUp,n);let P=0;if("horizontal"===this.fittingMode){let e=-1/0;d.forEach(((t,s)=>{const i=h.getAltitude(d[s]);i>e&&(e=i,P=s);}));}const R=a[P];let j=S,A=this._worldTangent;"horizontal"===this.fittingMode?j=this._worldUp:"vertical"===this.fittingMode&&(j=this._tempVec3,A=this._worldUp,mathUtils$1.b(S,this._worldUp,j)),mathUtils.r(this._frame[2],j),mathUtils$1.b(A,j,this._frame[0]),mathUtils._(this._frame[1],this._frame[0],this._frame[2]),mathUtils.v(this._frame[1],this._frame[1]);const W=this._tempVec3,v=this._tempU,z=this._tempV;for(let i=0;i<this._length;++i){const e=C[i],t=f[i];mathUtils.c(W,a[i],R),vec2.r(e,mathUtils.z(this._frame[0],W),mathUtils.z(this._frame[1],W)),mathUtils.d(v,this._frame[0],e[0]),mathUtils.d(z,this._frame[1],e[1]),mathUtils.u(W,v,z),mathUtils.u(W,W,R),projection.gn(W,o,t,s);}this.perimeterLength=this._length>0?new viewUtils.e(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,viewUtils.g$1(f,this.areaCentroidRenderCoords),projection.gn(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,o),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?new viewUtils.e(t.normalizeArea(this._computeArea()),"square-meters"):null;}_updateGeodesicArea(e){const t=e.renderCoordsHelper,s=this.positionsSpherical,o=this.positionsStereographic,n=this._tempVec3,h=x(s,n);if(!h)return void(this.geodesicArea=null);const a=this._tempU,d=this._tempV;mathUtils$1.g(n,a,d);for(let i=0;i<this._length;++i){const e=mathUtils.z(s[i],a),t=mathUtils.z(s[i],d),h=mathUtils.z(s[i],n);vec2.r(o[i],e/h,t/h);}mathUtils.d(n,n,unitUtils.p(e.spatialReference).radius),t.toRenderCoords(n,unitUtils.O$1(e.spatialReference),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&0===this.geodesicIntersectingSegments.size?new viewUtils.e(this._computeGeodesicArea(),"square-meters"):null;}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths;let s=0;for(let i=0;i<this._length;++i){s+=t[i]=vec2.d(e[i],e[(i+1)%this._length]);}return s}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const o=e[s],r=e[(s+1)%this._length],n=e[i],h=e[(i+1)%this._length];request.z$3(o,r,n,h)&&(t.add(s),t.add(i));}}_computeArea(){const e=this.positionsProjectedWorldCoords,t=q(e,2),s=this.triangleIndices=new Uint32Array(earcut.x(t,[],2));let i=0;for(let o=0;o<s.length;o+=3)i+=k(e[s[o]],e[s[o+1]],e[s[o+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const o=e[s],r=e[(s+1)%this._length],n=e[i],h=e[(i+1)%this._length];request.z$3(o,r,n,h)&&(t.add(s),t.add(i));}}_computeGeodesicArea(){const e=this.positionsGeographic,t=q(this.positionsStereographic,2),s=this.geodesicTriangleIndices=new Uint32Array(earcut.x(t,[],2));let i=0;for(let o=0;o<s.length;o+=3)i+=q$1(e[s[o]],e[s[o+1]],e[s[o+2]],request.k.WGS84);return i}_selectFittingMode(t,s,i,o){const r=s.map((e=>Math.abs(b(t,e)))).reduce(((e,t)=>Math.max(e,t)),0);y(s,this._tempSphere);const n=r/(2*this._tempSphere.radius),h=n<o.maxRelativeErrorCoplanar,a=n<o.maxRelativeErrorAlmostCoplanar;let d="horizontal";if(h)d="oblique";else if(a){d=Math.abs(mathUtils.z(i,t))>Math.cos(mathUtils.M(o.verticalAngleThreshold))?"horizontal":"vertical";}return d}_updateCursorSegmentLength(e,s){const o=e.lastPoint;!e.isValidPolygon&&request.r(o)&&request.r(s)?(this.geodesicCursorSegmentLength=new viewUtils.e(w(o,s),"meters"),this.cursorSegmentLength=new viewUtils.e(this.unitNormalizer.normalizeDistance(P(o,s,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null);}_updateMode(e,s){if(0===s){this.actualMeasurementMode="euclidean";let s=0;null!=this.geodesicPathLength&&(s+=this.geodesicPathLength.value),!e.isValidPolygon&&request.r(this.geodesicCursorSegmentLength)&&(s+=this.geodesicCursorSegmentLength.value),s>H&&(this.actualMeasurementMode="geodesic");}else this.actualMeasurementMode=1===s?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=s;}}function q(e,t){const s=new Float64Array(e.length*t);for(let i=0;i<e.length;++i){const o=e[i];for(let e=0;e<t;++e)s[i*t+e]=o[e];}return s}function B(e,t){t.hasZ||(t.z=request.c$2(ColorMaterial.i(e,t,"ground"),0));}const H=1e5;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let h$1=class extends request.p{constructor(e){super(e),this._handles=new request.u;}initialize(){const e=this.view.spatialReference,t=unitUtils.O$1(e),s=t===unitUtils.G$1?unitUtils.R:t,a=!e||projection.tn(e,s)?s:e,r=new viewUtils.t(a);this._measurementDataManager=new D(this.view,r),this._handles.add([this.analysisViewData.path.on("change",(()=>this._update())),this.analysisViewData.watch("cursorPoint",(()=>this._update()),!0),this.analysisViewData.watch("mode",(()=>this._update()),!0)]),this._update();}destroy(){this._handles=request.l$3(this._handles);}_update(e=!1){const t=this.analysisViewData,s={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};if(this._measurementDataManager.update(t.path,t.cursorPoint,this.view,t.validMeasurement,s,t.mode,e)){const e=this._measurementDataManager.getData();this._set("measurementData",e),t.measurementData=e;}}};request.e([request.d({constructOnly:!0})],h$1.prototype,"view",void 0),request.e([request.d({constructOnly:!0})],h$1.prototype,"analysis",void 0),request.e([request.d({readOnly:!0})],h$1.prototype,"measurementData",void 0),request.e([request.d({constructOnly:!0})],h$1.prototype,"analysisViewData",void 0),h$1=request.e([request.i("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],h$1);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let h=class extends(AnalysisView3D.e(request.p)){constructor(a){super(a),this.type="area-measurement-view-3d",this.analysisViewData=new i;}initialize(){this.analysisViewData.path.view=this.view,this.analysisViewData.path.areaMeasurement=this.analysis,this.analysisVisualization=new I({view:this.view,analysis:this.analysis,analysisView:this}),this.analysisController=new h$1({view:this.view,analysis:this.analysis,analysisViewData:this.analysisViewData});}destroy(){this.analysisController=request.l$3(this.analysisController),this.analysisVisualization=request.l$3(this.analysisVisualization),this.analysisViewData=request.l$3(this.analysisViewData);}get updating(){var a;return !(null==(a=this.analysisVisualization)||!a.loadingMessages)}get result(){const a=this.analysisViewData.measurementData;return request.r(a)?"euclidean"===a.actualMeasurementMode?{area:a.area,pathLength:a.perimeterLength,mode:"euclidian"}:{area:a.geodesicArea,pathLength:a.pathLength,mode:"geodesic"}:{area:null,mode:null,pathLength:null}}get unit(){return request.c$2(this.analysis.unit,this._defaultUnit)}get testData(){return {visualization:this.analysisVisualization,controller:this.analysisController}}};request.e([request.d()],h.prototype,"type",void 0),request.e([request.d()],h.prototype,"analysis",void 0),request.e([request.d()],h.prototype,"updating",null),request.e([request.d()],h.prototype,"analysisVisualization",void 0),request.e([request.d()],h.prototype,"analysisController",void 0),request.e([request.d()],h.prototype,"result",null),request.e([request.d()],h.prototype,"analysisViewData",void 0),request.e([request.d()],h.prototype,"unit",null),request.e([request.d(viewUtils.e$1)],h.prototype,"_defaultUnit",void 0),h=request.e([request.i("esri.views.3d.analysis.AreaMeasurement.AreaMeasurementView3D")],h);const m=h;

const AreaMeasurementView3D = /*#__PURE__*/Object.freeze({
  __proto__: null,
  get AreaMeasurementView3D () { return h; },
  'default': m
});

exports.AreaMeasurementView3D = AreaMeasurementView3D;
exports.o = o;
