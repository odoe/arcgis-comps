'use strict';

const request = require('./messageBundle-8be88d04.js');
const screenUtils = require('./screenUtils-d911ae62.js');
const jsonUtils = require('./jsonUtils-b6068079.js');
const cimAnalyzer = require('./cimAnalyzer-eb6fa5b4.js');
const CIMSymbolHelper = require('./CIMSymbolHelper-79a17067.js');
const Rasterizer = require('./Rasterizer-56940f67.js');
const utils = require('./utils-fb318f28.js');
const utils$1 = require('./utils-71e85012.js');
const SimpleLineSymbol = require('./symbols-29b793e5.js');
require('./index-fde8502c.js');
require('./geometry-ef17530a.js');
require('./Color-7d915caa.js');
require('./colorUtils-e70dbab5.js');
require('./mathUtils-af6066f0.js');
require('./common-41a349f2.js');
require('./opacityUtils-f2e4b347.js');
require('./floatRGBA-aa45f7cb.js');
require('./callExpressionWithFeature-7cea2968.js');
require('./quantizationUtils-d1d9c03e.js');
require('./BidiEngine-e033e7c0.js');
require('./aaBoundingRect-56648c00.js');
require('./definitions-b4888cc6.js');
require('./mat2d-2d5fae3e.js');
require('./mat2df32-85bf8b84.js');
require('./vec2-d000a8cb.js');
require('./vec2f32-29a5eecf.js');
require('./number-d65aefed.js');
require('./GeometryUtils-062a82b8.js');
require('./asyncUtils-cd78b718.js');
require('./ItemCache-149fdb6e.js');
require('./MemCache-7f5503ec.js');
require('./enumeration-f235fe07.js');
require('./Symbol-f0556e23.js');
require('./aaBoundingBox-c372701a.js');
require('./persistableUrlUtils-c611d652.js');
require('./Portal-8d16604d.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
exports.GeometryStyle = void 0;!function(e){e.Legend="legend",e.Preview="preview";}(exports.GeometryStyle||(exports.GeometryStyle={}));const M=(e,t,a)=>{if(e&&e.targetSize){let i;if(a){const t=Math.max(a.frame.xmax-a.frame.xmin,a.frame.ymax-a.frame.ymin);i=e.targetSize/screenUtils.u(t);}else i=e.targetSize/t.referenceSize;return i}return e&&e.scaleFactor?e.scaleFactor:1},C={fill:{legend:{frame:{xmax:15,xmin:0,ymax:15,ymin:0},geometry:{rings:[[[0,15],[15,7.5],[15,0],[0,0],[0,15]]]},canvasPaths:{rings:[[[0,15],[0,0],[15,7.5],[15,15],[0,15]]]}},preview:{frame:{xmax:100,xmin:0,ymax:100,ymin:0},geometry:{rings:[[[0,100],[100,100],[100,0],[0,0],[0,100]]]},canvasPaths:{rings:[[[0,100],[0,0],[100,0],[100,100],[0,100]]]}}},stroke:{legend:{frame:{xmax:24,xmin:0,ymax:2,ymin:-2},geometry:{paths:[[[0,0],[12,0],[24,0]]]},canvasPaths:{paths:[[[0,2],[12,2],[24,2]]]}},preview:{frame:{xmax:100,xmin:0,ymax:2,ymin:-2},geometry:{paths:[[[0,0],[50,0],[100,0]]]},canvasPaths:{paths:[[[0,2],[50,2],[100,2]]]}}}};class I{constructor(e,t){this._spatialReference=e,this._avoidSDF=t,this._resourceCache=new Map,this._pictureMarkerCache=new Map,this._textRasterizer=new CIMSymbolHelper.s$2,this._cimResourceManager=new CIMSymbolHelper.s,this._rasterizer=new Rasterizer.m(this._cimResourceManager);}async rasterizeCIMSymbolAsync(e,t,r,a,s,o,n,c){a=a||(t?null!=t.centroid?"esriGeometryPolygon":jsonUtils.v(t.geometry):null)||x(e);const m=await this.analyzeCIMSymbol(e,t?z(t.attributes):null,r,a,c);return this.rasterizeCIMSymbol(m,t,a,s,o,n)}async analyzeCIMSymbol(e,r,a,i,s){const o=[],c=r?{geometryType:i,spatialReference:this._spatialReference,fields:r}:null;let m;await cimAnalyzer.C(e.data,c,this._cimResourceManager,o,this._avoidSDF),request.h(s);for(const t of o)"CIMPictureMarker"!==t.cim.type&&"CIMPictureFill"!==t.cim.type&&"CIMPictureStroke"!==t.cim.type||(m||(m=[]),m.push(this.fetchPictureMarkerResource(t,s))),a&&"text"===t.type&&"string"==typeof t.text&&t.text.indexOf("[")>-1&&(t.text=utils.n(a,t.text,t.cim.textCase));return m&&await Promise.all(m),o}async fetchPictureMarkerResource(t,r){const a=t.materialHash;if(!this._pictureMarkerCache.get(a)){const i=(await request.E(t.cim.url,{responseType:"image",signal:r&&r.signal})).data;this._pictureMarkerCache.set(a,i);}}rasterizeCIMSymbol(e,t,r,a,i,s){const o=[];for(const n of e){a&&"function"==typeof a.scaleFactor&&(a.scaleFactor=a.scaleFactor(t,i,s));const e=this._getRasterizedResource(n,t,r,a,i,s);if(!e)continue;let c=0,m=e.anchorX||0,l=e.anchorY||0,h=!1,f=0,g=0;if("esriGeometryPoint"===r){const e=M(a,n,null);if(f=utils.e(n.offsetX,t,i,s)*e||0,g=utils.e(n.offsetY,t,i,s)*e||0,"marker"===n.type)c=utils.e(n.rotation,t,i,s)||0,h=!!n.rotateClockwise&&n.rotateClockwise;else if("text"===n.type){if(c=utils.e(n.angle,t,i,s)||0,void 0!==n.horizontalAlignment)switch(n.horizontalAlignment){case"left":m=-.5;break;case"right":m=.5;break;default:m=0;}if(void 0!==n.verticalAlignment)switch(n.verticalAlignment){case"top":l=.5;break;case"bottom":l=-.5;break;case"baseline":l=-.25;break;default:l=0;}}}null!=e&&o.push({angle:c,rotateClockWise:h,anchorX:m,anchorY:l,offsetX:f,offsetY:g,rasterizedResource:e});}return this.getSymbolImage(o)}getSymbolImage(e){const t=document.createElement("canvas"),a=t.getContext("2d");let i=0,s=0,o=0,n=0;const c=[];for(let f=0;f<e.length;f++){const t=e[f],m=t.rasterizedResource;if(!m)continue;const l=m.size,h=t.offsetX,y=t.offsetY,g=t.anchorX,u=t.anchorY,p=t.rotateClockWise||!1;let d=t.angle,M=screenUtils.u(h)-l[0]*(.5+g),C=screenUtils.u(y)-l[1]*(.5+u),I=M+l[0],z=C+l[1];if(d){p&&(d=-d);const e=Math.sin(d*Math.PI/180),t=Math.cos(d*Math.PI/180),r=M*t-C*e,a=M*e+C*t,i=M*t-z*e,s=M*e+z*t,o=I*t-z*e,n=I*e+z*t,c=I*t-C*e,m=I*e+C*t;M=Math.min(r,i,o,c),C=Math.min(a,s,n,m),I=Math.max(r,i,o,c),z=Math.max(a,s,n,m);}i=M<i?M:i,s=C<s?C:s,o=I>o?I:o,n=z>n?z:n;const x=a.createImageData(m.size[0],m.size[1]);x.data.set(new Uint8ClampedArray(m.image.buffer));const P={offsetX:h,offsetY:y,rotateClockwise:p,angle:d,rasterizedImage:x,anchorX:g,anchorY:u};c.push(P);}t.width=o-i,t.height=n-s;const m=-i,l=n;for(let f=0;f<c.length;f++){const e=c[f],t=this._imageDataToCanvas(e.rasterizedImage),i=e.rasterizedImage.width,s=e.rasterizedImage.height,o=m-i*(.5+e.anchorX),n=l-s*(.5-e.anchorY);if(e.angle){const i=(360-e.angle)*Math.PI/180;a.save(),a.translate(screenUtils.u(e.offsetX),-screenUtils.u(e.offsetY)),a.translate(m,l),a.rotate(i),a.translate(-m,-l),a.drawImage(t,o,n),a.restore();}else a.drawImage(t,o+screenUtils.u(e.offsetX),n-screenUtils.u(e.offsetY));}const h=new SimpleLineSymbol.c$4({x:m/t.width-.5,y:l/t.height-.5});return {imageData:0!==t.width&&0!==t.height?a.getImageData(0,0,t.width,t.height):a.createImageData(1,1),anchorPosition:h}}_imageDataToCanvas(e){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const t=this._imageDataCanvas,r=t.getContext("2d");return t.width=e.width,t.height=e.height,r.putImageData(e,0,0),t}_imageTo32Array(e,t,r){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const a=this._imageDataCanvas,i=a.getContext("2d");return a.width=t,a.height=r,i.drawImage(e,0,0,t,r),new Uint32Array(i.getImageData(0,0,t,r).data.buffer)}_getRasterizedResource(e,t,r,i,s,o){let n,c,m,l,h=null,f=null;if("esriGeometryPolyline"===r||"esriGeometryPolygon"===r){const l=i&&i.style?i.style:exports.GeometryStyle.Legend,g="esriGeometryPolyline"===r?C.stroke[l]:C.fill[l];if("line"===e.type){if("CIMSolidStroke"!==e.cim.type){if("CIMPictureStroke"===e.cim.type){const r=utils.e(e.width,t,s,o),{image:a,width:i,height:n}=this._getPictureResource(e,r);return this._rasterizePictureResource(e,a,i,n,g,r)}return null}({analyzedCIM:n,hash:m}=P(e,t,s,o)),c=this._embedCIMLayerInVectorMarker(n,g);}else if("marker"===e.type){if("CIMPictureMarker"===e.cim.type)return null;if("CIMVectorMarker"!==e.cim.type)return null;e.cim.offsetX=utils.e(e.offsetX,t,s,o),e.cim.offsetY=utils.e(e.offsetY,t,s,o),e.cim.rotation=utils.e(e.rotation,t,s,o),e.cim.markerPlacement=e.markerPlacement,({analyzedCIM:n}=P(e,t,s,o)),m=request.c$3(JSON.stringify(n)).toString(),c=this._embedCIMLayerInVectorMarker(n,g),h=utils.e(e.size,t,s,o),f=e.path;}else {if("text"===e.type)return null;if("fill"===e.type){if("CIMHatchFill"===e.cim.type||"CIMVectorMarker"===e.cim.type||"CIMPictureMarker"===e.cim.type||"CIMPictureFill"===e.cim.type){const r=e.cim.size||e.cim.height;let a,i,c;if("CIMPictureMarker"===e.cim.type||"CIMPictureFill"===e.cim.type)({image:a,width:i,height:c}=this._getPictureResource(e,r));else {({analyzedCIM:n,hash:m}=P(e,t,s,o));const l=this._rasterizer.rasterizeJSONResource({cim:n,type:e.type,url:e.url,mosaicHash:m,size:r,path:f},1,this._avoidSDF);a=l.image,i=l.size[0],c=l.size[1];}return this._rasterizePictureResource(e,a,i,c,g,null)}if("CIMSolidFill"!==e.cim.type)return null;({analyzedCIM:n,hash:m}=P(e,t,s,o)),c=this._embedCIMLayerInVectorMarker(n,g);}}}else {if("text"===e.type)return l=this._rasterizeTextResource(e,t,i,s,o),l;({analyzedCIM:n,hash:m}=P(e,t,s,o));const r=M(i,e,null);if("CIMPictureMarker"===e.cim.type){const a=utils.e(e.size,t,s,o)*r,{image:i,width:n,height:c}=this._getPictureResource(e,a);return l={image:i,size:[n,c],sdf:!1,simplePattern:!1,anchorX:e.anchorPoint?e.anchorPoint.x:0,anchorY:e.anchorPoint?e.anchorPoint.y:0},l}utils$1.m(n,r,{preserveOutlineWidth:!1}),c=n;}m+=r,i&&(m+=JSON.stringify(i));const g=this._resourceCache;return g.has(m)?g.get(m):(l=this._rasterizer.rasterizeJSONResource({cim:c,type:e.type,url:e.url,mosaicHash:m,size:h,path:f},window.devicePixelRatio||1,this._avoidSDF),g.set(m,l),l)}_rasterizeTextResource(e,t,r,a,i){const s=M(r,e,null),o=utils.e(e.text,t,a,i);if(!o||0===o.length)return null;const n=utils.e(e.fontName,t,a,i),c=utils.e(e.style,t,a,i),m=utils.e(e.weight,t,a,i),l=utils.e(e.decoration,t,a,i),h=utils.e(e.size,t,a,i)*s,f=utils.e(e.horizontalAlignment,t,a,i),u=utils.e(e.verticalAlignment,t,a,i),p=utils.r(utils.e(e.color,t,a,i)),d=utils.r(utils.e(e.outlineColor,t,a,i)),C={color:p,size:h,horizontalAlignment:f,verticalAlignment:u,font:{family:n,style:c,weight:m,decoration:l},halo:{size:utils.e(e.outlineSize,t,a,i)||0,color:d,style:c},pixelRatio:1,premultiplyColors:!this._avoidSDF};return this._textRasterizer.rasterizeText(o,C)}_rasterizePictureResource(e,t,a,i,n,c){const m=document.createElement("canvas"),l=m.getContext("2d");m.height=screenUtils.u(Math.max(n.frame.ymax-n.frame.ymin,c)),m.width=screenUtils.u(n.frame.xmax-n.frame.xmin);const h=l.createImageData(a,i);h.data.set(new Uint8ClampedArray(t.buffer));const f=this._imageDataToCanvas(h),y=l.createPattern(f,"repeat"),g=Math.cos((-e.cim.rotation||0)*Math.PI/180),u=Math.sin((-e.cim.rotation||0)*Math.PI/180);y.setTransform({m11:g,m12:u,m21:-u,m22:g,m41:screenUtils.u(e.cim.offsetX)||0,m42:screenUtils.u(e.cim.offsetY)||0});const p=n.canvasPaths;let d,M,C;jsonUtils.c(p)?(d=p.rings,l.fillStyle=y,M=l.fill,C=["evenodd"]):jsonUtils.y(p)&&(d=p.paths,l.strokeStyle=y,l.lineWidth=c,M=l.stroke,d[0][0][1]=m.height/2,d[0][1][1]=m.height/2),l.beginPath();for(const s of d){const e=s?s.length:0;if(e>1){let t=s[0];l.moveTo(screenUtils.u(t[0]),screenUtils.u(t[1]));for(let a=1;a<e;++a)t=s[a],l.lineTo(screenUtils.u(t[0]),screenUtils.u(t[1]));l.closePath();}}M.apply(l,C);const I=l.getImageData(0,0,m.width,m.height),z=new Uint8Array(I.data);return {size:[m.width,m.height],image:new Uint32Array(z.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}_getPictureResource(e,t){const a=this._pictureMarkerCache.get(e.materialHash);if(!a)return null;const i=a.height/a.width,s=t?i>1?screenUtils.u(t):screenUtils.u(t)/i:a.width,o=t?i>1?screenUtils.u(t)*i:screenUtils.u(t):a.height;return {image:this._imageTo32Array(a,s,o),width:s,height:o}}_embedCIMLayerInVectorMarker(e,t){const r=jsonUtils.c(t.geometry)?"CIMPolygonSymbol":"CIMLineSymbol",a=t.frame;return {type:"CIMVectorMarker",frame:a,size:a.ymax-a.ymin,markerGraphics:[{type:"CIMMarkerGraphic",geometry:t.geometry,symbol:{type:r,symbolLayers:[e]}}]}}}function z(e){return (e?Object.keys(e):[]).map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}function x(e){if(!(e&&e.data&&e.data.symbol))return null;switch(e.data.symbol.type){case"CIMPointSymbol":case"CIMTextSymbol":return "esriGeometryPoint";case"CIMLineSymbol":return "esriGeometryPolyline";case"CIMPolygonSymbol":return "esriGeometryPolygon";default:return null}}function P(e,t,r,a){let i,s;if("function"==typeof e.materialHash){i=(0, e.materialHash)(t,r,a),s=cimAnalyzer.G(e.cim,e.materialOverrides);}else i=e.materialHash,s=e.cim;return {analyzedCIM:s,hash:i}}

exports.CIMSymbolRasterizer = I;
