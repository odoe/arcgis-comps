'use strict';

const request = require('./MapView-1726f571.js');
require('./index-fde8502c.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let m=class extends(request.y$5(request.w$5(request.l$4(request.b$10)))){constructor(...e){super(...e),this.type="route";}get barrierLines(){return this._getNamedFeatureLayer("PolylineBarriers")}get barrierPoints(){return this._getNamedFeatureLayer("Barriers")}get barrierPolygons(){return this._getNamedFeatureLayer("PolygonBarriers")}get directionLines(){return this._getNamedFeatureLayer("DirectionLines")}get directionPoints(){return this._getNamedFeatureLayer("DirectionPoints")}readFeatureCollectionsFromItem(e,t,r){return this.revert("featureCollections","portal-item"),t.layers.map((e=>{const t=new request.Ge;return t.read(e,r),t}))}readFeatureCollectionsFromWebMap(e,t,r){return t.featureCollection.layers.map((e=>{const t=new request.Ge;return t.read(e,r),t}))}get fullExtent(){if(request.t(this.featureCollections))return null;const e=null;return this.featureCollections.reduce(((e,t)=>request.t(t.fullExtent)?e:request.t(e)?t.fullExtent.clone():e.union(t.fullExtent)),e)}get maxScale(){if(request.t(this.featureCollections))return 0;const e=null;return this.featureCollections.reduce(((e,t)=>null==e?t.maxScale:Math.min(e,t.maxScale)),e)}set maxScale(e){request.r(this.featureCollections)&&this.featureCollections.forEach((t=>{t.maxScale=e;})),this._set("maxScale",e);}get minScale(){if(request.t(this.featureCollections))return 0;const e=null;return this.featureCollections.reduce(((e,t)=>null==e?t.minScale:Math.min(e,t.minScale)),e)}set minScale(e){request.r(this.featureCollections)&&this.featureCollections.forEach((t=>{t.minScale=e;})),this._set("minScale",e);}get routeInfo(){return this._getNamedFeatureLayer("RouteInfo")}get stops(){return this._getNamedFeatureLayer("Stops")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}_getNamedFeatureLayer(e){if(!request.t(this.featureCollections))return this.featureCollections.find((t=>t.title===e))}};request.e([request.d()],m.prototype,"barrierLines",null),request.e([request.d()],m.prototype,"barrierPoints",null),request.e([request.d()],m.prototype,"barrierPolygons",null),request.e([request.d()],m.prototype,"directionLines",null),request.e([request.d()],m.prototype,"directionPoints",null),request.e([request.d({type:request.S.ofType(request.Ge)})],m.prototype,"featureCollections",void 0),request.e([request.o$3("portal-item","featureCollections",["layers"])],m.prototype,"readFeatureCollectionsFromItem",null),request.e([request.o$3("web-map","featureCollections",["featureCollection.layers"])],m.prototype,"readFeatureCollectionsFromWebMap",null),request.e([request.d({readOnly:!0})],m.prototype,"fullExtent",null),request.e([request.d({type:["show","hide"]})],m.prototype,"listMode",void 0),request.e([request.d()],m.prototype,"minScale",null),request.e([request.d()],m.prototype,"routeInfo",null),request.e([request.d()],m.prototype,"stops",null),request.e([request.d({readOnly:!0,json:{read:!1}})],m.prototype,"type",void 0),m=request.e([request.i("esri.layers.RouteLayer")],m);const y=m;

exports.default = y;
