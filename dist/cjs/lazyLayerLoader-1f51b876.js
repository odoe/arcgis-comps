'use strict';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const a={BingMapsLayer:async()=>(await Promise.resolve().then(function () { return require('./BingMapsLayer-57a8866b.js'); })).default,BuildingSceneLayer:async()=>(await Promise.resolve().then(function () { return require('./BuildingSceneLayer-2f84e420.js'); })).default,CSVLayer:async()=>(await Promise.resolve().then(function () { return require('./CSVLayer-8827a0e8.js'); })).default,ElevationLayer:async()=>(await Promise.resolve().then(function () { return require('./ElevationLayer-f5210a46.js'); })).default,FeatureLayer:async()=>(await Promise.resolve().then(function () { return require('./MapView-1195e7f1.js'); }).then(function (n) { return n.FeatureLayer; })).default,GroupLayer:async()=>(await Promise.resolve().then(function () { return require('./GroupLayer-753d02c0.js'); })).default,GeoRSSLayer:async()=>(await Promise.resolve().then(function () { return require('./GeoRSSLayer-8de67739.js'); })).default,GeoJSONLayer:async()=>(await Promise.resolve().then(function () { return require('./GeoJSONLayer-2938ed22.js'); })).default,ImageryLayer:async()=>(await Promise.resolve().then(function () { return require('./ImageryLayer-3d0771ef.js'); })).default,ImageryTileLayer:async()=>(await Promise.resolve().then(function () { return require('./ImageryTileLayer-44846271.js'); })).default,IntegratedMeshLayer:async()=>(await Promise.resolve().then(function () { return require('./IntegratedMeshLayer-35dde1f4.js'); })).default,KMLLayer:async()=>(await Promise.resolve().then(function () { return require('./KMLLayer-1b32753e.js'); })).default,MapImageLayer:async()=>(await Promise.resolve().then(function () { return require('./MapImageLayer-90a2898a.js'); })).default,MapNotesLayer:async()=>(await Promise.resolve().then(function () { return require('./MapNotesLayer-4f59197a.js'); })).default,OGCFeatureLayer:async()=>(await Promise.resolve().then(function () { return require('./OGCFeatureLayer-4a74e9d0.js'); })).default,OpenStreetMapLayer:async()=>(await Promise.resolve().then(function () { return require('./OpenStreetMapLayer-3d05a636.js'); })).default,PointCloudLayer:async()=>(await Promise.resolve().then(function () { return require('./PointCloudLayer-1d680a52.js'); })).default,RouteLayer:async()=>(await Promise.resolve().then(function () { return require('./RouteLayer-ada8a928.js'); })).default,SceneLayer:async()=>(await Promise.resolve().then(function () { return require('./SceneLayer-9ea0ab0d.js'); })).default,StreamLayer:async()=>(await Promise.resolve().then(function () { return require('./StreamLayer-41dee0bc.js'); })).default,TileLayer:async()=>(await Promise.resolve().then(function () { return require('./TileLayer-2eb1567c.js'); })).default,UnknownLayer:async()=>(await Promise.resolve().then(function () { return require('./UnknownLayer-b039d490.js'); })).default,UnsupportedLayer:async()=>(await Promise.resolve().then(function () { return require('./UnsupportedLayer-66e0b9cb.js'); })).default,VectorTileLayer:async()=>(await Promise.resolve().then(function () { return require('./VectorTileLayer-c6727bcf.js'); })).default,VoxelLayer:async()=>(await Promise.resolve().then(function () { return require('./VoxelLayer-e5b89d00.js'); })).default,WebTileLayer:async()=>(await Promise.resolve().then(function () { return require('./WebTileLayer-1795c616.js'); }).then(function (n) { return n.WebTileLayer; })).default,WFSLayer:async()=>(await Promise.resolve().then(function () { return require('./WFSLayer-1b35c4c0.js'); })).default,WMSLayer:async()=>(await Promise.resolve().then(function () { return require('./WMSLayer-a30291ef.js'); })).default,WMTSLayer:async()=>(await Promise.resolve().then(function () { return require('./WMTSLayer-916870b3.js'); })).default};

exports.a = a;
