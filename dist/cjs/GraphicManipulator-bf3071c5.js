'use strict';

const request = require('./messageBundle-8be88d04.js');
const screenUtils = require('./screenUtils-d911ae62.js');
const vec2 = require('./vec2-d000a8cb.js');
const mathUtils = require('./mathUtils-af6066f0.js');
const common = require('./common-41a349f2.js');
const projection = require('./projection-b19710fa.js');
const arcgisEditor_entry = require('./arcgis-editor-90a28e34.js');
const LabelClass = require('./LabelClass-4b91d60e.js');
const ElevationInfo = require('./ElevationInfo-d3e3d64f.js');
const drapedUtils = require('./drapedUtils-2fa2770f.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
exports.v=class extends request.p{constructor(e){super(e),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new request.n$2.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null;}set graphic(e){this._circleCollisionCache=null,this._originalSymbol=e.symbol,this._set("graphic",e),this.attachSymbolChanged();}get elevationInfo(){const e="elevationInfo"in this.graphic.layer&&this.graphic.layer.elevationInfo,t=arcgisEditor_entry.u(this.graphic),i=e?e.offset:0;return new ElevationInfo.x({mode:t,offset:i})}set focusedSymbol(e){e!==this._get("focusedSymbol")&&(this._set("focusedSymbol",e),this._updateGraphicSymbol(),this._circleCollisionCache=null);}grabbableForEvent(){return !0}set grabbing(e){e!==this._get("grabbing")&&(this._set("grabbing",e),this._updateGraphicSymbol());}set hovering(e){e!==this._get("hovering")&&(this._set("hovering",e),this._updateGraphicSymbol());}set selected(e){e!==this._get("selected")&&(this._set("selected",e),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:e?"select":"deselect"}));}get _focused(){return this._get("hovering")||this._get("grabbing")}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null);}intersectionDistance(e){const t=this.graphic;if(!1===t.visible)return null;const i=t.geometry;if(request.t$1(i))return null;const r=this._get("focusedSymbol"),l=request.r(r)?r:t.symbol;return "2d"===this.view.type?this._intersectDistance2D(this.view,e,i,l):this._intersectDistance3D(this.view,e,t)}attach(){this.attachSymbolChanged(),request.r(this.layer)&&this.layer.add(this.graphic);}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),request.r(this.layer)&&this.layer.remove(this.graphic);}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=this.graphic.watch("symbol",(e=>{request.r(e)&&e!==this.focusedSymbol&&e!==this._originalSymbol&&(this._originalSymbol=e,this._focused&&request.r(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol));}),!0);}detachSymbolChanged(){request.r(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null);}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&request.r(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol;}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol;}_intersectDistance2D(e,t,i,a){if(a=a||LabelClass.J(i),request.t$1(a))return null;const n=1;let c=this._circleCollisionCache;if("point"!==i.type||"simple-marker"!==a.type)return drapedUtils.o(t,i,e)?n:null;if(request.t$1(c)||!c.originalPoint.equals(i)){const t=i,o=e.spatialReference;if(projection.tn(t.spatialReference,o)){const e=projection.O(t,o);c={originalPoint:t.clone(),mapPoint:e,radiusPx:screenUtils.u(a.size)},this._circleCollisionCache=c;}}if(request.r(c)){const i=screenUtils.d(t,C),o=e.toScreen(c.mapPoint),s=c.radiusPx,p=o.x+screenUtils.u(a.xoffset),m=o.y-screenUtils.u(a.yoffset);return vec2.q(i,[p,m])<s*s?n:null}return null}_intersectDistance3D(e,t,i){const o=e.toMap(t,{include:[i]});return o&&projection.wn(o,S,e.renderSpatialReference)?mathUtils.q(S,e.state.camera.eye):null}};request.e([request.d({constructOnly:!0,nonNullable:!0})],exports.v.prototype,"graphic",null),request.e([request.d({readOnly:!0})],exports.v.prototype,"elevationInfo",null),request.e([request.d({constructOnly:!0,nonNullable:!0})],exports.v.prototype,"view",void 0),request.e([request.d({value:null})],exports.v.prototype,"focusedSymbol",null),request.e([request.d({constructOnly:!0})],exports.v.prototype,"layer",void 0),request.e([request.d()],exports.v.prototype,"interactive",void 0),request.e([request.d()],exports.v.prototype,"selectable",void 0),request.e([request.d()],exports.v.prototype,"grabbable",void 0),request.e([request.d({value:!1})],exports.v.prototype,"grabbing",null),request.e([request.d()],exports.v.prototype,"dragging",void 0),request.e([request.d()],exports.v.prototype,"hovering",null),request.e([request.d({value:!1})],exports.v.prototype,"selected",null),request.e([request.d()],exports.v.prototype,"cursor",void 0),exports.v=request.e([request.i("esri.views.interactive.GraphicManipulator")],exports.v);const S=common.n(),C=screenUtils.i();
