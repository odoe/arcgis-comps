'use strict';

const request = require('./messageBundle-8be88d04.js');
const VoxelWasmManager = require('./VoxelWasmManager-4c582cad.js');
const LayerView3D = require('./LayerView3D-d92910a3.js');
const LayerView = require('./LayerView-2bc30c9f.js');
require('./index-fde8502c.js');
require('./mathUtils-af6066f0.js');
require('./common-41a349f2.js');
require('./reactiveUtils-ef5dccea.js');
require('./intersectorUtils-0e8a6b4b.js');
require('./mat4-f68486bc.js');
require('./mat4f64-fc3339e5.js');
require('./vec4f64-d3fa6cd2.js');
require('./boundedPlane-f1094694.js');
require('./vectorStacks-f48a010a.js');
require('./quatf64-e7a7f39e.js');
require('./vec2f64-60b3c97e.js');
require('./lineSegment-a86bf7bd.js');
require('./plane-0816c6c9.js');
require('./sphere-ef7f801f.js');
require('./mathUtils-87b1f941.js');
require('./utils-2d48ea24.js');
require('./Util-5c6af8a4.js');
require('./vec2-d000a8cb.js');
require('./doublePrecisionUtils-26ddcbaf.js');
require('./symbols-29b793e5.js');
require('./enumeration-f235fe07.js');
require('./opacityUtils-f2e4b347.js');
require('./geometry-ef17530a.js');
require('./Symbol-f0556e23.js');
require('./Color-7d915caa.js');
require('./colorUtils-e70dbab5.js');
require('./screenUtils-d911ae62.js');
require('./aaBoundingBox-c372701a.js');
require('./aaBoundingRect-56648c00.js');
require('./persistableUrlUtils-c611d652.js');
require('./Portal-8d16604d.js');
require('./ColorMaterial-61b9182b.js');
require('./Texture-16b1a373.js');
require('./mat3-1d3e0d51.js');
require('./quat-17613ceb.js');
require('./vec3f32-5485293e.js');
require('./Texture-95d9d662.js');
require('./FramebufferObject-435e1736.js');
require('./BlendLayer-6a2ab430.js');
require('./geometryDataUtils-0be35629.js');
require('./BufferView-b78db189.js');
require('./OrderIndependentTransparency-866eb67c.js');
require('./InterleavedLayout-4132788d.js');
require('./types-bcd9caf5.js');
require('./ElevationInfo-d3e3d64f.js');
require('./lengthUtils-179eaf12.js');
require('./unitUtils-083cb8d0.js');
require('./projection-b19710fa.js');
require('./geodesicConstants-047d586a.js');
require('./dehydratedFeatures-a58f1b86.js');
require('./byteSizeEstimations-d2f2ce40.js');
require('./quantizationUtils-d1d9c03e.js');
require('./jsonUtils-b6068079.js');
require('./Field-b92c6f4a.js');
require('./fieldType-32f95259.js');
require('./floatRGBA-aa45f7cb.js');
require('./triangulationUtils-15ab4328.js');
require('./earcut-d5562923.js');
require('./deduplicate-91c52f8d.js');
require('./Graphic-0aff6059.js');
require('./PopupTemplate-a0b855f8.js');
require('./Identifiable-a4f50f85.js');
require('./vec2f32-29a5eecf.js');
require('./glUtil-9df223c0.js');
require('./MemCache-7f5503ec.js');
require('./Scheduler-72cbcf2a.js');
require('./debugFlags-5e6b0151.js');
require('./asyncUtils-cd78b718.js');
require('./featureConversionUtils-df21e951.js');
require('./OptimizedFeature-cd4fe3c6.js');
require('./OptimizedFeatureSet-b5737d2b.js');
require('./vec33-1fc512be.js');
require('./visualVariableUtils-1740874b.js');
require('./sizeVariableUtils-9012516e.js');
require('./objectResourceUtils-58283911.js');
require('./devEnvironmentUtils-aafb5541.js');
require('./DefaultMaterial_COLOR_GAMMA-1f86519d.js');
require('./compilerUtils-56e51ed2.js');
require('./Version-55b8a4e7.js');
require('./utils-71e85012.js');
require('./ItemCache-149fdb6e.js');
require('./utils-fb318f28.js');
require('./callExpressionWithFeature-7cea2968.js');
require('./MeshComponent-0dd8a7d1.js');
require('./screenshotUtils-176d2414.js');
require('./projection-ea955486.js');
require('./heightModelInfoUtils-9cedab45.js');
require('./HeightModelInfo-06fd3d80.js');
require('./arcgisLayerUrl-5174d661.js');
require('./HandleOwner-9c4c158c.js');

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
let d=class extends(LayerView3D.p(LayerView.u)){constructor(){super(...arguments),this.type="voxel-3d",this._wasmLayerId=-1;}initialize(){if("local"!==this.view.viewingMode)throw new request.s("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if("webgl2"!==this.view._stage.renderView.renderingContext.webglVersion)throw new request.s("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});const e=this.layer.spatialReference;if(!request.E$2(e,this.view.spatialReference))throw new request.s("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const t=VoxelWasmManager.t.getInstance(),i=t.addLayer(this.view,this).then((e=>{this._wasmLayerId=e,this._suspendedHandle=request.i$1(this,"suspended",(e=>{VoxelWasmManager.t.getInstance().setLayerEnabled(this.view,this,!e);}));})).catch((e=>{if(t.removeLayer(this.view,this),this._wasmLayerId=-1,-1===e)throw new request.s("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(-2===e)throw new request.s("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})}));this.addResolvingPromise(i);}destroy(){VoxelWasmManager.t.getInstance().removeLayer(this.view,this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null);}isUpdating(){return !(this._wasmLayerId<0)&&VoxelWasmManager.t.getInstance().isUpdating(this.view,this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating");}};request.e([request.d()],d.prototype,"layer",void 0),request.e([request.d({readOnly:!0,aliasOf:"layer.parsedUrl.path"})],d.prototype,"baseUrl",void 0),d=request.e([request.i("esri.views.3d.layers.VoxelLayerView3D")],d);const p=d;

exports.default = p;
