'use strict';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const a={BingMapsLayer:async()=>(await Promise.resolve().then(function () { return require('./BingMapsLayer-83641b01.js'); })).default,BuildingSceneLayer:async()=>(await Promise.resolve().then(function () { return require('./BuildingSceneLayer-3fa7ccc5.js'); })).default,CSVLayer:async()=>(await Promise.resolve().then(function () { return require('./CSVLayer-41eee919.js'); })).default,ElevationLayer:async()=>(await Promise.resolve().then(function () { return require('./ElevationLayer-525bab29.js'); })).default,FeatureLayer:async()=>(await Promise.resolve().then(function () { return require('./MapView-1726f571.js'); }).then(function (n) { return n.FeatureLayer; })).default,GroupLayer:async()=>(await Promise.resolve().then(function () { return require('./GroupLayer-ec60f142.js'); })).default,GeoRSSLayer:async()=>(await Promise.resolve().then(function () { return require('./GeoRSSLayer-758310ba.js'); })).default,GeoJSONLayer:async()=>(await Promise.resolve().then(function () { return require('./GeoJSONLayer-a81d526c.js'); })).default,ImageryLayer:async()=>(await Promise.resolve().then(function () { return require('./ImageryLayer-499de561.js'); })).default,ImageryTileLayer:async()=>(await Promise.resolve().then(function () { return require('./ImageryTileLayer-5b023d63.js'); })).default,IntegratedMeshLayer:async()=>(await Promise.resolve().then(function () { return require('./IntegratedMeshLayer-2e0e7cf5.js'); })).default,KMLLayer:async()=>(await Promise.resolve().then(function () { return require('./KMLLayer-0950a1c0.js'); })).default,MapImageLayer:async()=>(await Promise.resolve().then(function () { return require('./MapImageLayer-adb70269.js'); })).default,MapNotesLayer:async()=>(await Promise.resolve().then(function () { return require('./MapNotesLayer-1ed969d8.js'); })).default,OGCFeatureLayer:async()=>(await Promise.resolve().then(function () { return require('./OGCFeatureLayer-b5e3ce92.js'); })).default,OpenStreetMapLayer:async()=>(await Promise.resolve().then(function () { return require('./OpenStreetMapLayer-51cb7f53.js'); })).default,PointCloudLayer:async()=>(await Promise.resolve().then(function () { return require('./PointCloudLayer-3dbf9d66.js'); })).default,RouteLayer:async()=>(await Promise.resolve().then(function () { return require('./RouteLayer-db7ff34f.js'); })).default,SceneLayer:async()=>(await Promise.resolve().then(function () { return require('./SceneLayer-4edc9338.js'); })).default,StreamLayer:async()=>(await Promise.resolve().then(function () { return require('./StreamLayer-7bbe6d6d.js'); })).default,TileLayer:async()=>(await Promise.resolve().then(function () { return require('./TileLayer-540fc5d9.js'); })).default,UnknownLayer:async()=>(await Promise.resolve().then(function () { return require('./UnknownLayer-4a87e941.js'); })).default,UnsupportedLayer:async()=>(await Promise.resolve().then(function () { return require('./UnsupportedLayer-8bcd60ce.js'); })).default,VectorTileLayer:async()=>(await Promise.resolve().then(function () { return require('./VectorTileLayer-4b2467bf.js'); })).default,VoxelLayer:async()=>(await Promise.resolve().then(function () { return require('./VoxelLayer-24631225.js'); })).default,WebTileLayer:async()=>(await Promise.resolve().then(function () { return require('./WebTileLayer-47afce15.js'); }).then(function (n) { return n.WebTileLayer; })).default,WFSLayer:async()=>(await Promise.resolve().then(function () { return require('./WFSLayer-34dc6d7f.js'); })).default,WMSLayer:async()=>(await Promise.resolve().then(function () { return require('./WMSLayer-08ad15ce.js'); })).default,WMTSLayer:async()=>(await Promise.resolve().then(function () { return require('./WMTSLayer-5c30ba6b.js'); })).default};

exports.a = a;
